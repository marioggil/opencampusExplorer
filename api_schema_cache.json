{
  "https://opencampus-codex.blockscout.com/api/v2/blocks?type=block": {
    "items": [
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "237057560000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999578901182,
        "gas_used": "23705756",
        "gas_used_percentage": 2.105494090187676e-06,
        "hash": "0x89431a6c67dd700ca0a9edd9a3cbcdbdb072767f69617143ba71d555288f6483",
        "height": 26422306,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xfe567da8d91b09d1d3e6c168f1eff92de84a227e57ac4c6c9ce94032a6c9f91e",
        "priority_fee": "17742304900876000",
        "rewards": [],
        "size": 1266,
        "timestamp": "2024-12-29T16:28:41.000000Z",
        "total_difficulty": "26422307",
        "transaction_count": 4,
        "transaction_fees": "237057560000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "156126900000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999722662913,
        "gas_used": "15612690",
        "gas_used_percentage": 1.3866854331467948e-06,
        "hash": "0xfe567da8d91b09d1d3e6c168f1eff92de84a227e57ac4c6c9ce94032a6c9f91e",
        "height": 26422305,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x6740787d54f466f83c07a52f33b6fa9b0fc4c54bbb2d5de90990dbae240cdbc1",
        "priority_fee": "1561284612690000",
        "rewards": [],
        "size": 1074,
        "timestamp": "2024-12-29T16:28:41.000000Z",
        "total_difficulty": "26422306",
        "transaction_count": 3,
        "transaction_fees": "156126900000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "357033640000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999365780852,
        "gas_used": "35703364",
        "gas_used_percentage": 3.171095741549834e-06,
        "hash": "0x6740787d54f466f83c07a52f33b6fa9b0fc4c54bbb2d5de90990dbae240cdbc1",
        "height": 26422304,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xeac175d52a6af6fad158babf193ba433c805fd659621b222327aa58c1c843a32",
        "priority_fee": "2149547495260000",
        "rewards": [],
        "size": 2317,
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "total_difficulty": "26422305",
        "transaction_count": 4,
        "transaction_fees": "357033640000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "78081610000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999861299199,
        "gas_used": "7808161",
        "gas_used_percentage": 6.93504009774415e-07,
        "hash": "0xeac175d52a6af6fad158babf193ba433c805fd659621b222327aa58c1c843a32",
        "height": 26422303,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x2b4f09775416effb230f73d442ebd9a09daded5f1b8743dc80cd4155b747a630",
        "priority_fee": "780823908161000",
        "rewards": [],
        "size": 887,
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "total_difficulty": "26422304",
        "transaction_count": 2,
        "transaction_fees": "78081610000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "94533830000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999832074185,
        "gas_used": "9453383",
        "gas_used_percentage": 8.396290773760029e-07,
        "hash": "0x2b4f09775416effb230f73d442ebd9a09daded5f1b8743dc80cd4155b747a630",
        "height": 26422302,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xd2a7471640b346b2d40622cd961b68c229bb13d8744920abe1ace5d9a70b71ff",
        "priority_fee": "945347753383000",
        "rewards": [],
        "size": 925,
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "total_difficulty": "26422303",
        "transaction_count": 2,
        "transaction_fees": "94533830000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "78087690000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999861288399,
        "gas_used": "7808769",
        "gas_used_percentage": 6.935580110223327e-07,
        "hash": "0xd2a7471640b346b2d40622cd961b68c229bb13d8744920abe1ace5d9a70b71ff",
        "height": 26422301,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xb0475ed828f5de22ac32af9c9929e46cfce1a46f8e11af7701c9abd9ec5e8c15",
        "priority_fee": "780884708769000",
        "rewards": [],
        "size": 887,
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "total_difficulty": "26422302",
        "transaction_count": 2,
        "transaction_fees": "78087690000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "92434580000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999835803202,
        "gas_used": "9243458",
        "gas_used_percentage": 8.20983991900448e-07,
        "hash": "0xb0475ed828f5de22ac32af9c9929e46cfce1a46f8e11af7701c9abd9ec5e8c15",
        "height": 26422300,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x3d82ceeb28fd17113b95560e0ae19a81681d48d7dbe2268ab886af2b3adb8693",
        "priority_fee": "924355043458000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:39.000000Z",
        "total_difficulty": "26422301",
        "transaction_count": 2,
        "transaction_fees": "92434580000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "169537370000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999698841133,
        "gas_used": "16953737",
        "gas_used_percentage": 1.5057943336671542e-06,
        "hash": "0x3d82ceeb28fd17113b95560e0ae19a81681d48d7dbe2268ab886af2b3adb8693",
        "height": 26422299,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xd905c6a235ec4911b267d8cadf5ee9324503e77b59d89fc21372de1fa1f482a6",
        "priority_fee": "1695390653737000",
        "rewards": [],
        "size": 1107,
        "timestamp": "2024-12-29T16:28:39.000000Z",
        "total_difficulty": "26422300",
        "transaction_count": 3,
        "transaction_fees": "169537370000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91378800000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837678644,
        "gas_used": "9137880",
        "gas_used_percentage": 8.11606781780938e-07,
        "hash": "0xd905c6a235ec4911b267d8cadf5ee9324503e77b59d89fc21372de1fa1f482a6",
        "height": 26422298,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x76a0cddbcef30e46292b6a9fadfdf6e85516f65a79a52970aa99254bb57cdea0",
        "priority_fee": "913797137880000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:39.000000Z",
        "total_difficulty": "26422299",
        "transaction_count": 2,
        "transaction_fees": "91378800000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91313350000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837794905,
        "gas_used": "9131335",
        "gas_used_percentage": 8.110254690052443e-07,
        "hash": "0x76a0cddbcef30e46292b6a9fadfdf6e85516f65a79a52970aa99254bb57cdea0",
        "height": 26422297,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xf14171baa592d58be3a12653a0e537b56d72038183b610c8c582582b9b3ee7bd",
        "priority_fee": "913142631335000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:39.000000Z",
        "total_difficulty": "26422298",
        "transaction_count": 2,
        "transaction_fees": "91313350000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "94953060000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999831329482,
        "gas_used": "9495306",
        "gas_used_percentage": 8.433525877649117e-07,
        "hash": "0xf14171baa592d58be3a12653a0e537b56d72038183b610c8c582582b9b3ee7bd",
        "height": 26422296,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xb7c22f951b22652e6401b3ba764a3225f7ffdab0dfe4e999faa3d016ee2de9b7",
        "priority_fee": "949540095306000",
        "rewards": [],
        "size": 925,
        "timestamp": "2024-12-29T16:28:39.000000Z",
        "total_difficulty": "26422297",
        "transaction_count": 2,
        "transaction_fees": "94953060000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91703350000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837102128,
        "gas_used": "9170335",
        "gas_used_percentage": 8.144893648420748e-07,
        "hash": "0xb7c22f951b22652e6401b3ba764a3225f7ffdab0dfe4e999faa3d016ee2de9b7",
        "height": 26422295,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xaed0efdc681b6b6811fbc42c9a3c798822caf9c35a0f2b2da9fefc30dbf681bd",
        "priority_fee": "917042670335000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:38.000000Z",
        "total_difficulty": "26422296",
        "transaction_count": 2,
        "transaction_fees": "91703350000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "143739720000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999744666965,
        "gas_used": "14373972",
        "gas_used_percentage": 1.2766651735773848e-06,
        "hash": "0xaed0efdc681b6b6811fbc42c9a3c798822caf9c35a0f2b2da9fefc30dbf681bd",
        "height": 26422294,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x027127b7b2c169ab96520368fbe9443b7ebe855bf759b6f08f5fd33a50d4dfc7",
        "priority_fee": "1437411573972000",
        "rewards": [],
        "size": 1434,
        "timestamp": "2024-12-29T16:28:38.000000Z",
        "total_difficulty": "26422295",
        "transaction_count": 2,
        "transaction_fees": "143739720000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91655350000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837187391,
        "gas_used": "9165535",
        "gas_used_percentage": 8.140630392006187e-07,
        "hash": "0x027127b7b2c169ab96520368fbe9443b7ebe855bf759b6f08f5fd33a50d4dfc7",
        "height": 26422293,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x71e8f071f0ed71d89d4ea2995007731a32acb454945974ddfd3220c1937672bf",
        "priority_fee": "916562665535000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:38.000000Z",
        "total_difficulty": "26422294",
        "transaction_count": 2,
        "transaction_fees": "91655350000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "182007400000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.9999967668991,
        "gas_used": "18200740",
        "gas_used_percentage": 1.6165504490572857e-06,
        "hash": "0x71e8f071f0ed71d89d4ea2995007731a32acb454945974ddfd3220c1937672bf",
        "height": 26422292,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x04280cd95e7846e0533dc2c4de8996f0dbaa512d7d5f5526c2be75374b38787d",
        "priority_fee": "1730099062326000",
        "rewards": [],
        "size": 1136,
        "timestamp": "2024-12-29T16:28:37.000000Z",
        "total_difficulty": "26422293",
        "transaction_count": 3,
        "transaction_fees": "182007400000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91935860000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999836689106,
        "gas_used": "9193586",
        "gas_used_percentage": 8.165544684857196e-07,
        "hash": "0x04280cd95e7846e0533dc2c4de8996f0dbaa512d7d5f5526c2be75374b38787d",
        "height": 26422291,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x55aab754aaabff4bd65c18f810ed0b3b021a2f675b909916ac120cf7ba8dd432",
        "priority_fee": "919367793586000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:37.000000Z",
        "total_difficulty": "26422292",
        "transaction_count": 2,
        "transaction_fees": "91935860000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91217860000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.9999983796453,
        "gas_used": "9121786",
        "gas_used_percentage": 8.101773474322727e-07,
        "hash": "0x55aab754aaabff4bd65c18f810ed0b3b021a2f675b909916ac120cf7ba8dd432",
        "height": 26422290,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xe72becdca62fb24977db78446e8919051a1f0de235ac3ee15618f7f8c44e996b",
        "priority_fee": "912187721786000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:37.000000Z",
        "total_difficulty": "26422291",
        "transaction_count": 2,
        "transaction_fees": "91217860000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "169443360000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999699008129,
        "gas_used": "16944336",
        "gas_used_percentage": 1.5049593571347941e-06,
        "hash": "0xe72becdca62fb24977db78446e8919051a1f0de235ac3ee15618f7f8c44e996b",
        "height": 26422289,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x28d4dd1643e84dc2349e2426f8eab6bc69790b53861e610024c2bf435d157701",
        "priority_fee": "1694450544336000",
        "rewards": [],
        "size": 1107,
        "timestamp": "2024-12-29T16:28:37.000000Z",
        "total_difficulty": "26422290",
        "transaction_count": 3,
        "transaction_fees": "169443360000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "423656010000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.9999924743575,
        "gas_used": "42365601",
        "gas_used_percentage": 3.7628212545826045e-06,
        "hash": "0x28d4dd1643e84dc2349e2426f8eab6bc69790b53861e610024c2bf435d157701",
        "height": 26422288,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xaafe440ff065cb51e377ba95755a71c0b5dcafbc43a5887f3c4c24158d02033d",
        "priority_fee": "4236602465601000",
        "rewards": [],
        "size": 2104,
        "timestamp": "2024-12-29T16:28:36.000000Z",
        "total_difficulty": "26422289",
        "transaction_count": 5,
        "transaction_fees": "423656010000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91351270000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837727547,
        "gas_used": "9135127",
        "gas_used_percentage": 8.113622662619946e-07,
        "hash": "0xaafe440ff065cb51e377ba95755a71c0b5dcafbc43a5887f3c4c24158d02033d",
        "height": 26422287,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xb45179f9350299a768228f820b001d5299db60de269a871cb8e4ade9d746e4ed",
        "priority_fee": "913521835127000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:36.000000Z",
        "total_difficulty": "26422288",
        "transaction_count": 2,
        "transaction_fees": "91351270000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91351270000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837727547,
        "gas_used": "9135127",
        "gas_used_percentage": 8.113622662619946e-07,
        "hash": "0xb45179f9350299a768228f820b001d5299db60de269a871cb8e4ade9d746e4ed",
        "height": 26422286,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x99a4ab7cf4d16934290a771013d289593bd386ccec01f4fa419cbe4f8bbc16a1",
        "priority_fee": "913521835127000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:36.000000Z",
        "total_difficulty": "26422287",
        "transaction_count": 2,
        "transaction_fees": "91351270000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "78036090000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999861380059,
        "gas_used": "7803609",
        "gas_used_percentage": 6.930997109577675e-07,
        "hash": "0x99a4ab7cf4d16934290a771013d289593bd386ccec01f4fa419cbe4f8bbc16a1",
        "height": 26422285,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x43dd3b6beb20c6edded2277ba9f3d49044e0b4feeda0b48ffa51ef191c077ce0",
        "priority_fee": "780368703609000",
        "rewards": [],
        "size": 887,
        "timestamp": "2024-12-29T16:28:36.000000Z",
        "total_difficulty": "26422286",
        "transaction_count": 2,
        "transaction_fees": "78036090000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "89161780000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999841616862,
        "gas_used": "8916178",
        "gas_used_percentage": 7.919156885805023e-07,
        "hash": "0x43dd3b6beb20c6edded2277ba9f3d49044e0b4feeda0b48ffa51ef191c077ce0",
        "height": 26422284,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x0b0eb9db7ba36cbb71b0ab37eed2dcc442498fb1eb656bb2c0b5de89c2b3745e",
        "priority_fee": "0",
        "rewards": [],
        "size": 914,
        "timestamp": "2024-12-29T16:28:35.000000Z",
        "total_difficulty": "26422285",
        "transaction_count": 2,
        "transaction_fees": "89161780000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "245447720000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999563997264,
        "gas_used": "24544772",
        "gas_used_percentage": 2.1800136806859882e-06,
        "hash": "0x0b0eb9db7ba36cbb71b0ab37eed2dcc442498fb1eb656bb2c0b5de89c2b3745e",
        "height": 26422283,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x98722fbe0971fad488cfc7e00ebfff3e6665080df32808e407f504d39516ef0a",
        "priority_fee": "1561560215446000",
        "rewards": [],
        "size": 1289,
        "timestamp": "2024-12-29T16:28:35.000000Z",
        "total_difficulty": "26422284",
        "transaction_count": 4,
        "transaction_fees": "245447720000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91218340000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837963678,
        "gas_used": "9121834",
        "gas_used_percentage": 8.101816106886872e-07,
        "hash": "0x98722fbe0971fad488cfc7e00ebfff3e6665080df32808e407f504d39516ef0a",
        "height": 26422282,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x227ee1f6b18a8ebe237ef947c8a91032e3a51ac78965c590188b8dd9f3575faa",
        "priority_fee": "912192521834000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:35.000000Z",
        "total_difficulty": "26422283",
        "transaction_count": 2,
        "transaction_fees": "91218340000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "143012410000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999745958928,
        "gas_used": "14301241",
        "gas_used_percentage": 1.2702053631130639e-06,
        "hash": "0x227ee1f6b18a8ebe237ef947c8a91032e3a51ac78965c590188b8dd9f3575faa",
        "height": 26422281,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x18e4b633ebc758160bcbb001cae8f35e2f4c41a4e00b2c721f9a2b00c37278e2",
        "priority_fee": "1287111690000000",
        "rewards": [],
        "size": 1438,
        "timestamp": "2024-12-29T16:28:35.000000Z",
        "total_difficulty": "26422282",
        "transaction_count": 2,
        "transaction_fees": "143012410000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "262455660000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999533785093,
        "gas_used": "26245566",
        "gas_used_percentage": 2.3310745334015337e-06,
        "hash": "0x18e4b633ebc758160bcbb001cae8f35e2f4c41a4e00b2c721f9a2b00c37278e2",
        "height": 26422280,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xd0a9c4adc9f22018a903bde756ab1e7ee89aaa6936f079cf53a7e031fbc30c51",
        "priority_fee": "2624582845566000",
        "rewards": [],
        "size": 1326,
        "timestamp": "2024-12-29T16:28:34.000000Z",
        "total_difficulty": "26422281",
        "transaction_count": 4,
        "transaction_fees": "262455660000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "208177440000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.9999963020258,
        "gas_used": "20817744",
        "gas_used_percentage": 1.8489870967641764e-06,
        "hash": "0xd0a9c4adc9f22018a903bde756ab1e7ee89aaa6936f079cf53a7e031fbc30c51",
        "height": 26422279,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x2a40158250cb611bab382c2bda8fbde158fa426aa8aaa7be582c0ba467517467",
        "priority_fee": "2081795217744000",
        "rewards": [],
        "size": 1588,
        "timestamp": "2024-12-29T16:28:34.000000Z",
        "total_difficulty": "26422280",
        "transaction_count": 3,
        "transaction_fees": "208177440000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "289382360000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999485953666,
        "gas_used": "28938236",
        "gas_used_percentage": 2.5702316719389273e-06,
        "hash": "0x2a40158250cb611bab382c2bda8fbde158fa426aa8aaa7be582c0ba467517467",
        "height": 26422278,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x4a636edaa84e8941540fe07f27c5dcb021a115b66306802b05bce730ecdd0f04",
        "priority_fee": "1452453724392000",
        "rewards": [],
        "size": 1770,
        "timestamp": "2024-12-29T16:28:34.000000Z",
        "total_difficulty": "26422279",
        "transaction_count": 4,
        "transaction_fees": "289382360000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "142126210000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999747533136,
        "gas_used": "14212621",
        "gas_used_percentage": 1.2623343259576814e-06,
        "hash": "0x4a636edaa84e8941540fe07f27c5dcb021a115b66306802b05bce730ecdd0f04",
        "height": 26422277,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x723d0961455f4c7d11afdb0fd4a3ed7752681294be493d882993ceb3f573e5aa",
        "priority_fee": "1421276312621000",
        "rewards": [],
        "size": 1040,
        "timestamp": "2024-12-29T16:28:34.000000Z",
        "total_difficulty": "26422278",
        "transaction_count": 3,
        "transaction_fees": "142126210000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91935210000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.9999983669026,
        "gas_used": "9193521",
        "gas_used_percentage": 8.165486953259915e-07,
        "hash": "0x723d0961455f4c7d11afdb0fd4a3ed7752681294be493d882993ceb3f573e5aa",
        "height": 26422276,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xb424ab4136472f2de6801ae5e749f70ac47133dab142389cb17ad5270a18e410",
        "priority_fee": "919361293521000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:33.000000Z",
        "total_difficulty": "26422277",
        "transaction_count": 2,
        "transaction_fees": "91935210000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "325202550000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999422324225,
        "gas_used": "32520255",
        "gas_used_percentage": 2.8883788694145096e-06,
        "hash": "0xb424ab4136472f2de6801ae5e749f70ac47133dab142389cb17ad5270a18e410",
        "height": 26422275,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x1cc91f9c483609d38b6e65f45d851093a16f0e2aa3012e19d7e941e8a993d386",
        "priority_fee": "3188522217310000",
        "rewards": [],
        "size": 1477,
        "timestamp": "2024-12-29T16:28:33.000000Z",
        "total_difficulty": "26422276",
        "transaction_count": 5,
        "transaction_fees": "325202550000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "144910330000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999742587545,
        "gas_used": "14491033",
        "gas_used_percentage": 1.2870622789762365e-06,
        "hash": "0x1cc91f9c483609d38b6e65f45d851093a16f0e2aa3012e19d7e941e8a993d386",
        "height": 26422274,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x95572abb9a2427bc32181ad22f8e67c7ceebc19b8084de96d6e184df2d29683e",
        "priority_fee": "1449117791033000",
        "rewards": [],
        "size": 1434,
        "timestamp": "2024-12-29T16:28:33.000000Z",
        "total_difficulty": "26422275",
        "transaction_count": 2,
        "transaction_fees": "144910330000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "78063450000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999861331456,
        "gas_used": "7806345",
        "gas_used_percentage": 6.933427165733974e-07,
        "hash": "0x95572abb9a2427bc32181ad22f8e67c7ceebc19b8084de96d6e184df2d29683e",
        "height": 26422273,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x1e7b86a42d6a0bf8409fff3f4bd4cc3f8d02c4282bcb68df98e650d3f7adcfba",
        "priority_fee": "780642306345000",
        "rewards": [],
        "size": 887,
        "timestamp": "2024-12-29T16:28:33.000000Z",
        "total_difficulty": "26422274",
        "transaction_count": 2,
        "transaction_fees": "78063450000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "157100110000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999720934146,
        "gas_used": "15710011",
        "gas_used_percentage": 1.3953292743451584e-06,
        "hash": "0x1e7b86a42d6a0bf8409fff3f4bd4cc3f8d02c4282bcb68df98e650d3f7adcfba",
        "height": 26422272,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x39fab2c1e7f5fac7c9648b3aba123ae05143bf9bcb429074f2946fceb4c5a031",
        "priority_fee": "1571016810011000",
        "rewards": [],
        "size": 1074,
        "timestamp": "2024-12-29T16:28:32.000000Z",
        "total_difficulty": "26422273",
        "transaction_count": 3,
        "transaction_fees": "157100110000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "144416520000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999743464727,
        "gas_used": "14441652",
        "gas_used_percentage": 1.2826763651219153e-06,
        "hash": "0x39fab2c1e7f5fac7c9648b3aba123ae05143bf9bcb429074f2946fceb4c5a031",
        "height": 26422271,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x14a0290582d64acf25ed88cb3a7e338ab8745034569d91b88f26fc94a191aa0c",
        "priority_fee": "1444179641652000",
        "rewards": [],
        "size": 1440,
        "timestamp": "2024-12-29T16:28:32.000000Z",
        "total_difficulty": "26422272",
        "transaction_count": 2,
        "transaction_fees": "144416520000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "159645110000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999716413318,
        "gas_used": "15964511",
        "gas_used_percentage": 1.4179334151265266e-06,
        "hash": "0x14a0290582d64acf25ed88cb3a7e338ab8745034569d91b88f26fc94a191aa0c",
        "height": 26422270,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xa90d2469694639293cccf4583855ca83c05565ba604db4051bac22285a496789",
        "priority_fee": "1596467064511000",
        "rewards": [],
        "size": 1079,
        "timestamp": "2024-12-29T16:28:32.000000Z",
        "total_difficulty": "26422271",
        "transaction_count": 3,
        "transaction_fees": "159645110000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91378800000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837678644,
        "gas_used": "9137880",
        "gas_used_percentage": 8.11606781780938e-07,
        "hash": "0xa90d2469694639293cccf4583855ca83c05565ba604db4051bac22285a496789",
        "height": 26422269,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x8ffb0c670989f644524b2ba7062a5e46c55547721f0d2714e0d7392f14a2cc21",
        "priority_fee": "913797137880000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:32.000000Z",
        "total_difficulty": "26422270",
        "transaction_count": 2,
        "transaction_fees": "91378800000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "157100510000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999720933434,
        "gas_used": "15710051",
        "gas_used_percentage": 1.3953328270588372e-06,
        "hash": "0x8ffb0c670989f644524b2ba7062a5e46c55547721f0d2714e0d7392f14a2cc21",
        "height": 26422268,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x187caee4a02bfcda504c0fb17f3975aea0a8b98b69cc45ce59e5a2ef6328b502",
        "priority_fee": "1571020810051000",
        "rewards": [],
        "size": 1074,
        "timestamp": "2024-12-29T16:28:31.000000Z",
        "total_difficulty": "26422269",
        "transaction_count": 3,
        "transaction_fees": "157100510000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "197501350000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999649167125,
        "gas_used": "19750135",
        "gas_used_percentage": 1.7541643693164133e-06,
        "hash": "0x187caee4a02bfcda504c0fb17f3975aea0a8b98b69cc45ce59e5a2ef6328b502",
        "height": 26422267,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x31fb63f079398eaf905201fb874d218e5eabd5664ff32c052ddb757f9ac3e64b",
        "priority_fee": "1975033250135000",
        "rewards": [],
        "size": 1171,
        "timestamp": "2024-12-29T16:28:31.000000Z",
        "total_difficulty": "26422268",
        "transaction_count": 3,
        "transaction_fees": "197501350000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "260937020000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.9999953648274,
        "gas_used": "26093702",
        "gas_used_percentage": 2.3175863006485997e-06,
        "hash": "0x31fb63f079398eaf905201fb874d218e5eabd5664ff32c052ddb757f9ac3e64b",
        "height": 26422266,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x08f5da786cdbc6b6cb324043177ba8c1652eb1a02a700799f2fd4845e585bcd7",
        "priority_fee": "2609396293702000",
        "rewards": [],
        "size": 1326,
        "timestamp": "2024-12-29T16:28:31.000000Z",
        "total_difficulty": "26422267",
        "transaction_count": 4,
        "transaction_fees": "260937020000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "64048800000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999886226476,
        "gas_used": "6404880",
        "gas_used_percentage": 5.688676196768938e-07,
        "hash": "0x08f5da786cdbc6b6cb324043177ba8c1652eb1a02a700799f2fd4845e585bcd7",
        "height": 26422265,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xcbed31616d50bff03e914a403517f9bf901b26f971c7a495fb6e52bde1c6aa17",
        "priority_fee": "640494404880000",
        "rewards": [],
        "size": 853,
        "timestamp": "2024-12-29T16:28:31.000000Z",
        "total_difficulty": "26422266",
        "transaction_count": 2,
        "transaction_fees": "64048800000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "67161910000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999880696483,
        "gas_used": "6716191",
        "gas_used_percentage": 5.965175908784204e-07,
        "hash": "0xcbed31616d50bff03e914a403517f9bf901b26f971c7a495fb6e52bde1c6aa17",
        "height": 26422264,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x2ddf2f0179f55409ac759633aea47715a8bbb68fa4155f1b5779b7bc4d11083f",
        "priority_fee": "671625816191000",
        "rewards": [],
        "size": 860,
        "timestamp": "2024-12-29T16:28:30.000000Z",
        "total_difficulty": "26422265",
        "transaction_count": 2,
        "transaction_fees": "67161910000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "302784680000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999462146363,
        "gas_used": "30278468",
        "gas_used_percentage": 2.689268185918081e-06,
        "hash": "0x2ddf2f0179f55409ac759633aea47715a8bbb68fa4155f1b5779b7bc4d11083f",
        "height": 26422263,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x923be2a57774c5d6b09c23da9d596d177a16acb946404b3c78960bb053ea2a53",
        "priority_fee": "3027877078468000",
        "rewards": [],
        "size": 1815,
        "timestamp": "2024-12-29T16:28:30.000000Z",
        "total_difficulty": "26422264",
        "transaction_count": 4,
        "transaction_fees": "302784680000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91934970000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999836690687,
        "gas_used": "9193497",
        "gas_used_percentage": 8.165465636977842e-07,
        "hash": "0x923be2a57774c5d6b09c23da9d596d177a16acb946404b3c78960bb053ea2a53",
        "height": 26422262,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x65a550831d0b1521197fab0ae63fa0f7123914ad286bf5aefaa0d265216c6f51",
        "priority_fee": "919358893497000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:30.000000Z",
        "total_difficulty": "26422263",
        "transaction_count": 2,
        "transaction_fees": "91934970000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "141611460000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999748447514,
        "gas_used": "14161146",
        "gas_used_percentage": 1.257762427542275e-06,
        "hash": "0x65a550831d0b1521197fab0ae63fa0f7123914ad286bf5aefaa0d265216c6f51",
        "height": 26422261,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x6cb08f1ced5248f4a23a393b3e9052df7b6c610fd6363a7a72b6c8a1a298b923",
        "priority_fee": "1352592958201000",
        "rewards": [],
        "size": 1038,
        "timestamp": "2024-12-29T16:28:30.000000Z",
        "total_difficulty": "26422262",
        "transaction_count": 3,
        "transaction_fees": "141611460000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91426800000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837593379,
        "gas_used": "9142680",
        "gas_used_percentage": 8.120331074223941e-07,
        "hash": "0x6cb08f1ced5248f4a23a393b3e9052df7b6c610fd6363a7a72b6c8a1a298b923",
        "height": 26422260,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x6fbebfd13b498bc9887b5d84b068df8f712b6ac30ea789e32c1e813b034048b6",
        "priority_fee": "914277142680000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:29.000000Z",
        "total_difficulty": "26422261",
        "transaction_count": 2,
        "transaction_fees": "91426800000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91455360000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837542646,
        "gas_used": "9145536",
        "gas_used_percentage": 8.122867711790605e-07,
        "hash": "0x6fbebfd13b498bc9887b5d84b068df8f712b6ac30ea789e32c1e813b034048b6",
        "height": 26422259,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xaa5c3398ba54398c4413a6546c528b2c2c65e715700470935b89d6c0c653f374",
        "priority_fee": "914562745536000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:29.000000Z",
        "total_difficulty": "26422260",
        "transaction_count": 2,
        "transaction_fees": "91455360000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "158386100000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999718649768,
        "gas_used": "15838610",
        "gas_used_percentage": 1.40675116000466e-06,
        "hash": "0xaa5c3398ba54398c4413a6546c528b2c2c65e715700470935b89d6c0c653f374",
        "height": 26422258,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xa295b41cc23703417f39e685f28813e7515ec36f80e902af8b19ac5c21a8ad4a",
        "priority_fee": "1583876838610000",
        "rewards": [],
        "size": 1079,
        "timestamp": "2024-12-29T16:28:29.000000Z",
        "total_difficulty": "26422259",
        "transaction_count": 3,
        "transaction_fees": "158386100000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "50822070000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999909721869,
        "gas_used": "5082207",
        "gas_used_percentage": 4.5139065818489144e-07,
        "hash": "0xa295b41cc23703417f39e685f28813e7515ec36f80e902af8b19ac5c21a8ad4a",
        "height": 26422257,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xf593b85360ed18eae7d031822097f0c530cb034b66b510693b8926c99060d4b3",
        "priority_fee": "0",
        "rewards": [],
        "size": 821,
        "timestamp": "2024-12-29T16:28:29.000000Z",
        "total_difficulty": "26422258",
        "transaction_count": 2,
        "transaction_fees": "50822070000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      }
    ],
    "next_page_params": {
      "block_number": 26422257,
      "items_count": 50
    }
  },
  "https://opencampus-codex.blockscout.com/api/v2/stats": {
    "average_block_time": 149.0,
    "coin_image": null,
    "coin_price": null,
    "coin_price_change_percentage": null,
    "gas_price_updated_at": "2024-12-29T16:28:41.078002Z",
    "gas_prices": {
      "slow": 0.11,
      "average": 0.11,
      "fast": 0.11
    },
    "gas_prices_update_in": 28127,
    "gas_used_today": "6940769642447",
    "market_cap": "0",
    "network_utilization_percentage": 1.3345277469767325e-06,
    "secondary_coin_image": null,
    "secondary_coin_price": null,
    "static_gas_price": null,
    "total_addresses": "1937733",
    "total_blocks": "26398657",
    "total_gas_used": "0",
    "total_transactions": "92364875",
    "transactions_today": "1012680",
    "tvl": null
  },
  "https://opencampus-codex.blockscout.com/api/v2/transactions?filter=validated": {
    "items": [
      {
        "priority_fee": "1055665456549000",
        "tx_burnt_fee": "105565490000000",
        "raw_input": "0x617ba03700000000000000000000000089f0415ab9f69c7b04ecd476fd6e23d0a82dd6f0000000000000000000000000000000000000000000000000000000174876e80000000000000000000000000001e8563397ea01c6196f9c95503913362d0266be0000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x100246c53e7fcda7098a51e782c3bac1229301fdb8b1e5a2f85fa46dca9e61d5",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 1,
        "position": 3,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x01e8563397ea01C6196F9C95503913362D0266be",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "10556549",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xE27152C3757E13363372116835786246BfC817D6",
          "implementations": [
            {
              "address": "0xa0279D130b019e8b3cCf7c48650f3654B9C1D3bA",
              "name": null
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "eip1967",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "supply",
        "fee": {
          "type": "actual",
          "value": "105565490000000"
        },
        "actions": [],
        "gas_limit": "19410739",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "supply(address asset, uint256 amount, address onBehalfOf, uint16 referralCode)",
          "method_id": "617ba037",
          "parameters": [
            {
              "name": "asset",
              "type": "address",
              "value": "0x89f0415Ab9f69c7b04ECd476FD6e23D0A82dD6F0"
            },
            {
              "name": "amount",
              "type": "uint256",
              "value": "100000000000"
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "value": "0x01e8563397ea01C6196F9C95503913362D0266be"
            },
            {
              "name": "referralCode",
              "type": "uint16",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:44.000000Z",
        "nonce": 11697,
        "transaction_types": [
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 26422319,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "1419963499493000",
        "tx_burnt_fee": "141994930000000",
        "raw_input": "0xd3115a8a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000200000000000000000000000006d837c1a3d8a86e82b676ace6bdfaf4a51cd77d000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000001c9f7def9b509d0d64a2adce6f73f235147ab7f1000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000032cd0b4fbb4f04af010100000000000000000000000000000000000000000012725dd1e4ac1b000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0xc019213d10de48e0408f8e23f1833486d239a4eefcc2d8205fa1446637aba72e",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 1,
        "position": 2,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x728ef0d3Db527ff7f77F65F18EBCFf3442EC2826",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "14199493",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xB97582DCB6F2866098cA210095a04dF3e11B76A6",
          "implementations": [
            {
              "address": "0x6415d628820393f12FF7D681a666660444EEC3c7",
              "name": "AdminFacet"
            },
            {
              "address": "0x33756d4dC8f7515E9F99C61f32eA86Fec60E814c",
              "name": "SwapFacet"
            },
            {
              "address": "0x9318624E961f020b53C9453A5D336637E46f4B56",
              "name": "SwapAuxillaryFacet"
            },
            {
              "address": "0x167A5D9b96b9C24916ccAb21805033A90eb13e4A",
              "name": "NFTHolderFacet"
            },
            {
              "address": "0xD2be60ea36244F58f24406505a042C6bB911c7a3",
              "name": null
            },
            {
              "address": "0xa8Cf8F5Ccaf16F2eE9939ea2D64065385FD2bd63",
              "name": "SwapHelperFacet"
            },
            {
              "address": "0xaa32369D681F07b3d8f7c6DaF96fBeF6e3807F96",
              "name": "SwapHelperFacet2"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "eip2535",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "execute",
        "fee": {
          "type": "actual",
          "value": "141994930000000"
        },
        "actions": [],
        "gas_limit": "19865136",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "execute(bytes32[] tokenRef, int128[] deposit, (bytes32,bytes32[],bytes)[] ops)",
          "method_id": "d3115a8a",
          "parameters": [
            {
              "name": "tokenRef",
              "type": "bytes32[]",
              "value": [
                "0x00000000000000000000000006d837c1a3d8a86e82b676ace6bdfaf4a51cd77d",
                "0x000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
              ]
            },
            {
              "name": "deposit",
              "type": "int128[]",
              "value": [
                "0",
                "0"
              ]
            },
            {
              "name": "ops",
              "type": "(bytes32,bytes32[],bytes)[]",
              "value": [
                [
                  "0x0000000000000000000000001c9f7def9b509d0d64a2adce6f73f235147ab7f1",
                  [
                    "0x00000000000000000000000000000000000000000000000032cd0b4fbb4f04af",
                    "0x010100000000000000000000000000000000000000000012725dd1e4ac1b0000"
                  ],
                  "0x00"
                ]
              ]
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:44.000000Z",
        "nonce": 11471,
        "transaction_types": [
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 26422319,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "1420621506073000",
        "tx_burnt_fee": "142060730000000",
        "raw_input": "0xd3115a8a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000020000000000000000000000002c2800995f2a8137eb9dd3bfe88fabbbae8b4958000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000d7b76a20c7aaf22c8708cc20d86b72cee24ffbf000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000002beb4d8b46aefb010100000000000000000000000000000000000000000012725dd1e4ac1b000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x62204b60eddc314c4f8c5d52b92058ff45ccff1d02026e159cfc299a2cdaf8ac",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 1,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x049D448d08c45E7972cc509Df5E80FeF69FD68df",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "14206073",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xB97582DCB6F2866098cA210095a04dF3e11B76A6",
          "implementations": [
            {
              "address": "0x6415d628820393f12FF7D681a666660444EEC3c7",
              "name": "AdminFacet"
            },
            {
              "address": "0x33756d4dC8f7515E9F99C61f32eA86Fec60E814c",
              "name": "SwapFacet"
            },
            {
              "address": "0x9318624E961f020b53C9453A5D336637E46f4B56",
              "name": "SwapAuxillaryFacet"
            },
            {
              "address": "0x167A5D9b96b9C24916ccAb21805033A90eb13e4A",
              "name": "NFTHolderFacet"
            },
            {
              "address": "0xD2be60ea36244F58f24406505a042C6bB911c7a3",
              "name": null
            },
            {
              "address": "0xa8Cf8F5Ccaf16F2eE9939ea2D64065385FD2bd63",
              "name": "SwapHelperFacet"
            },
            {
              "address": "0xaa32369D681F07b3d8f7c6DaF96fBeF6e3807F96",
              "name": "SwapHelperFacet2"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "eip2535",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "execute",
        "fee": {
          "type": "actual",
          "value": "142060730000000"
        },
        "actions": [],
        "gas_limit": "19865136",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "execute(bytes32[] tokenRef, int128[] deposit, (bytes32,bytes32[],bytes)[] ops)",
          "method_id": "d3115a8a",
          "parameters": [
            {
              "name": "tokenRef",
              "type": "bytes32[]",
              "value": [
                "0x0000000000000000000000002c2800995f2a8137eb9dd3bfe88fabbbae8b4958",
                "0x000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
              ]
            },
            {
              "name": "deposit",
              "type": "int128[]",
              "value": [
                "0",
                "0"
              ]
            },
            {
              "name": "ops",
              "type": "(bytes32,bytes32[],bytes)[]",
              "value": [
                [
                  "0x0000000000000000000000000d7b76a20c7aaf22c8708cc20d86b72cee24ffbf",
                  [
                    "0x000000000000000000000000000000000000000000000000002beb4d8b46aefb",
                    "0x010100000000000000000000000000000000000000000012725dd1e4ac1b0000"
                  ],
                  "0x00"
                ]
              ]
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:44.000000Z",
        "nonce": 11135,
        "transaction_types": [
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 26422319,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c3a0000000000000000000000000000000000000000000000000000000001932c2f0000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x8eb07dd58b4305c5ab3d2bd268aa5eacfabdacabc432b2bac3c542aeaab152f8",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 1,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380026"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422319"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:44.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422319,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "780363303555000",
        "tx_burnt_fee": "78035550000000",
        "raw_input": "0x095ea7b3000000000000000000000000b97582dcb6f2866098ca210095a04df3e11b76a6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "result": "success",
        "hash": "0xaea5ebcf16fae795ac12cae46753253d1f1e01014215df20efe64116a3d09d3b",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 2,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x6463f70e8034FE531A320571999a681FCc83BDC5",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "7803555",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xCef966528A867176BF3a575c9951f695e8eB77a3",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "Esd",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "approve",
        "fee": {
          "type": "actual",
          "value": "78035550000000"
        },
        "actions": [],
        "gas_limit": "19020155",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "approve(address usr, uint256 wad)",
          "method_id": "095ea7b3",
          "parameters": [
            {
              "name": "usr",
              "type": "address",
              "value": "0xB97582DCB6F2866098cA210095a04dF3e11B76A6"
            },
            {
              "name": "wad",
              "type": "uint256",
              "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:44.000000Z",
        "nonce": 11497,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422318,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c3a0000000000000000000000000000000000000000000000000000000001932c2e0000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x5010fff6fd6084f2f86d166345df4f92674f2494bca3bba2b604c1a183263f75",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 2,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380026"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422318"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:44.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422318,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "919367793586000",
        "tx_burnt_fee": "91935860000000",
        "raw_input": "0xdf1b6c33000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000047465737400000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x95fabfaacf30abc8185985261290949e8f294b5142493dbdd10040a5252a10e4",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 3,
        "position": 2,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0xc101A6C5dfE1a957385C5fed6c9D903A7b62dA40",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "9193586",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x0EA845BCC2bafD0C54cD0CFfCEF23B57aac439ED",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "0xdf1b6c33",
        "fee": {
          "type": "actual",
          "value": "91935860000000"
        },
        "actions": [],
        "gas_limit": "19221282",
        "gas_price": "10000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:44.000000Z",
        "nonce": 11502,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422317,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "640494404880000",
        "tx_burnt_fee": "64048800000000",
        "raw_input": "0xfdaf95ae0000000000000000000000000000000000000000000000000000000000000007",
        "result": "success",
        "hash": "0x9e102ded725f449f7845ba331bb2eb21e7212dd82e75f7c14e185062fd9bff65",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 3,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x6daCa8D7D9482eB1B6d494f13E697944b5910C88",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "6404880",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x4592d03bf91Ba5667F2C064A3CC122917EC41f1F",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "0xfdaf95ae",
        "fee": {
          "type": "actual",
          "value": "64048800000000"
        },
        "actions": [],
        "gas_limit": "8948373",
        "gas_price": "10000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:44.000000Z",
        "nonce": 11774,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422317,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c3a0000000000000000000000000000000000000000000000000000000001932c2d0000000000000000000000000000000000000000000000000000000000000001",
        "result": "success",
        "hash": "0xc28d59a11ad2883fe8e3da8dfb1e4df82461eea2b68382bcee0d514e53353737",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 3,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380026"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422317"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "1"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:44.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422317,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "790192901850000",
        "tx_burnt_fee": "79018500000000",
        "raw_input": "0x41d3a5030000000000000000000000000000000000000000000000000000000000198fff0000000000000000000000008ef492bae61ce8b746b2e3d7b2e6386c8972af27",
        "result": "success",
        "hash": "0x27d67155d0e1f0297f7bb464d9d34244c8ed39c1e7e2d73b3077fab79612a80e",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 4,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x8Ef492bae61Ce8b746b2E3d7B2E6386c8972Af27",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "7901850",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xeFCBcc9A744b393084d9E2234ee27a09020D3CC6",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "TheVault",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "addEmployee",
        "fee": {
          "type": "actual",
          "value": "79018500000000"
        },
        "actions": [],
        "gas_limit": "19101876",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "addEmployee(uint256 _vaultId, address _employeeAddress)",
          "method_id": "41d3a503",
          "parameters": [
            {
              "name": "_vaultId",
              "type": "uint256",
              "value": "1675263"
            },
            {
              "name": "_employeeAddress",
              "type": "address",
              "value": "0x8Ef492bae61Ce8b746b2E3d7B2E6386c8972Af27"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:43.000000Z",
        "nonce": 11633,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422316,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c3a0000000000000000000000000000000000000000000000000000000001932c2c0000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0xc70a024f9d285de83605f825217db72c3e5ef606a5b7bc6ee862f668f8575bbd",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 4,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380026"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422316"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:43.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422316,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "788762887550000",
        "tx_burnt_fee": "78875500000000",
        "raw_input": "0x41d3a5030000000000000000000000000000000000000000000000000000000000198f96000000000000000000000000c6a30adb47e238359a0c1c43e61b8f8ef1df8825",
        "result": "success",
        "hash": "0xc87dffe5b1f329410659f4ed576603565990fb8bb0c60cdb01c88d81853297b9",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 5,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0xC6a30adB47e238359a0C1C43e61B8f8Ef1Df8825",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "7887550",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xeFCBcc9A744b393084d9E2234ee27a09020D3CC6",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "TheVault",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "addEmployee",
        "fee": {
          "type": "actual",
          "value": "78875500000000"
        },
        "actions": [],
        "gas_limit": "19101876",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "addEmployee(uint256 _vaultId, address _employeeAddress)",
          "method_id": "41d3a503",
          "parameters": [
            {
              "name": "_vaultId",
              "type": "uint256",
              "value": "1675158"
            },
            {
              "name": "_employeeAddress",
              "type": "address",
              "value": "0xC6a30adB47e238359a0C1C43e61B8f8Ef1Df8825"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:43.000000Z",
        "nonce": 7312,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422315,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c3a0000000000000000000000000000000000000000000000000000000001932c2b0000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0xf5f0fc12d0ff65e14d3c2c28e6a8cd05323b1190f40fc6943de4d510ecf33221",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 5,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380026"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422315"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:43.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422315,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "780823908161000",
        "tx_burnt_fee": "78081610000000",
        "raw_input": "0x095ea7b3000000000000000000000000b97582dcb6f2866098ca210095a04df3e11b76a6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "result": "success",
        "hash": "0x0ce10a8b5ebcfed27da5b3d8776dcdbab65ac1ad1cbbcb3b2e4f9883b139141f",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 6,
        "position": 2,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x9b5220A494aCc37E000D5F786d69573A2a0294A4",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "7808161",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x2c2800995F2a8137EB9dd3Bfe88FABbBAe8b4958",
          "implementations": [
            {
              "address": "0x41E644c4CB450710264056f22C08908d28D54f80",
              "name": "VeSail"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": "Locked Sail",
          "private_tags": [],
          "proxy_type": "eip1967",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "approve",
        "fee": {
          "type": "actual",
          "value": "78081610000000"
        },
        "actions": [],
        "gas_limit": "19020155",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "approve(address guy, uint256 wad)",
          "method_id": "095ea7b3",
          "parameters": [
            {
              "name": "guy",
              "type": "address",
              "value": "0xB97582DCB6F2866098cA210095a04dF3e11B76A6"
            },
            {
              "name": "wad",
              "type": "uint256",
              "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:43.000000Z",
        "nonce": 11374,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422314,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "781191511837000",
        "tx_burnt_fee": "78118370000000",
        "raw_input": "0x40c10f19000000000000000000000000ef2024edf7b79437400189e744c694ac070ec6a400000000000000000000000000000000000000000000021e19e0c9bab2400000",
        "result": "success",
        "hash": "0xca362350fe9b1bf06c79d43b2d5f1b0588cb3a6b29248d308b4dc70ae82ebb80",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 6,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0xEF2024edf7B79437400189E744C694aC070eC6A4",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "7811837",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x8c88F4205D24619cB3F11B3925312Df0d484F4e7",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "MyToken",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "mint",
        "fee": {
          "type": "actual",
          "value": "78118370000000"
        },
        "actions": [],
        "gas_limit": "19008339",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "mint(address to, uint256 amount)",
          "method_id": "40c10f19",
          "parameters": [
            {
              "name": "to",
              "type": "address",
              "value": "0xEF2024edf7B79437400189E744C694aC070eC6A4"
            },
            {
              "name": "amount",
              "type": "uint256",
              "value": "10000000000000000000000"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:43.000000Z",
        "nonce": 6281,
        "transaction_types": [
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 26422314,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c3a0000000000000000000000000000000000000000000000000000000001932c2a0000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x5983e61c518e7337ccc8fbd24124263ec5ab95dae892823bfd2064d923018132",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 6,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380026"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422314"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:43.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422314,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "1415845658315000",
        "tx_burnt_fee": "141583150000000",
        "raw_input": "0xd3115a8a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000002c2800995f2a8137eb9dd3bfe88fabbbae8b4958000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000d7b76a20c7aaf22c8708cc20d86b72cee24ffbf000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000005af3107a4000010100000000000000000000000000000000000000000012725dd1e4ac1b000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0xf62c4099acdc4a42a7a7d7382a8cbb0d22edd421da235081729bbadb5a54b241",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 7,
        "position": 2,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "100000000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0xd9d0b711acBdD1daa65b505cb49203c29699a934",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "14158315",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xB97582DCB6F2866098cA210095a04dF3e11B76A6",
          "implementations": [
            {
              "address": "0x6415d628820393f12FF7D681a666660444EEC3c7",
              "name": "AdminFacet"
            },
            {
              "address": "0x33756d4dC8f7515E9F99C61f32eA86Fec60E814c",
              "name": "SwapFacet"
            },
            {
              "address": "0x9318624E961f020b53C9453A5D336637E46f4B56",
              "name": "SwapAuxillaryFacet"
            },
            {
              "address": "0x167A5D9b96b9C24916ccAb21805033A90eb13e4A",
              "name": "NFTHolderFacet"
            },
            {
              "address": "0xD2be60ea36244F58f24406505a042C6bB911c7a3",
              "name": null
            },
            {
              "address": "0xa8Cf8F5Ccaf16F2eE9939ea2D64065385FD2bd63",
              "name": "SwapHelperFacet"
            },
            {
              "address": "0xaa32369D681F07b3d8f7c6DaF96fBeF6e3807F96",
              "name": "SwapHelperFacet2"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "eip2535",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "execute",
        "fee": {
          "type": "actual",
          "value": "141583150000000"
        },
        "actions": [],
        "gas_limit": "19865136",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "execute(bytes32[] tokenRef, int128[] deposit, (bytes32,bytes32[],bytes)[] ops)",
          "method_id": "d3115a8a",
          "parameters": [
            {
              "name": "tokenRef",
              "type": "bytes32[]",
              "value": [
                "0x000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
                "0x0000000000000000000000002c2800995f2a8137eb9dd3bfe88fabbbae8b4958"
              ]
            },
            {
              "name": "deposit",
              "type": "int128[]",
              "value": [
                "0",
                "0"
              ]
            },
            {
              "name": "ops",
              "type": "(bytes32,bytes32[],bytes)[]",
              "value": [
                [
                  "0x0000000000000000000000000d7b76a20c7aaf22c8708cc20d86b72cee24ffbf",
                  [
                    "0x00000000000000000000000000000000000000000000000000005af3107a4000",
                    "0x010100000000000000000000000000000000000000000012725dd1e4ac1b0000"
                  ],
                  "0x00"
                ]
              ]
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:43.000000Z",
        "nonce": 7465,
        "transaction_types": [
          "coin_transfer",
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 26422313,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "919367793586000",
        "tx_burnt_fee": "91935860000000",
        "raw_input": "0xdf1b6c33000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000047465737400000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x2b4f75aa8683eeec032cb64d36516fb0caa216d28069d24ef1ca91d9a485a999",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 7,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x05CdE694812fAdd83B997203611443064f2fBC3e",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "9193586",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x0EA845BCC2bafD0C54cD0CFfCEF23B57aac439ED",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "0xdf1b6c33",
        "fee": {
          "type": "actual",
          "value": "91935860000000"
        },
        "actions": [],
        "gas_limit": "19221282",
        "gas_price": "10000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:43.000000Z",
        "nonce": 11372,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422313,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c3a0000000000000000000000000000000000000000000000000000000001932c290000000000000000000000000000000000000000000000000000000000000001",
        "result": "success",
        "hash": "0x9d13f5b0f080264efcdd08701a49cddfefc1c2a7ba77c10b524d37a5c7b18f74",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 7,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380026"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422313"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "1"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:43.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422313,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "924773547643000",
        "tx_burnt_fee": "92476430000000",
        "raw_input": "0x6a4cb83d00000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
        "result": "success",
        "hash": "0x9e6ff0cbc33ba4ccdf16caf1ef0de4246ace58b4893d4c9881977fdcda4e2c7a",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 8,
        "position": 2,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "100000000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0x3c2c5E9E5173D21e198C39e4eeFd5CA1CA2D81A9",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "9247643",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x9a40c4934a36885b54C49342fF2c21d6c51AAA2B",
          "implementations": [
            {
              "address": "0x9aD267F73AC8c530C0FaF93Cf552d2543987Be3C",
              "name": null
            },
            {
              "address": "0xbaA598c0c9F6afC588c0e134e2Ce47463d4D49af",
              "name": null
            },
            {
              "address": "0x4B5c0609da54c963573E3ab930093655Dca73e96",
              "name": null
            },
            {
              "address": "0x7E7F51eBf7663CAcb619B457405a26050eeB0350",
              "name": null
            },
            {
              "address": "0xf8f7271DC5B763166a80a386C45045f1fEE60De4",
              "name": null
            },
            {
              "address": "0xc2C422bfE988818d915C547bE3d0A8D932CEc4d5",
              "name": null
            },
            {
              "address": "0x0283e909B6b6Dc0d1FBC8fD5bBcc44a3C0024936",
              "name": null
            },
            {
              "address": "0xD087c20FC6E42A551f2c29c15f281FA62D3Ac92B",
              "name": null
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "eip2535",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "0x6a4cb83d",
        "fee": {
          "type": "actual",
          "value": "92476430000000"
        },
        "actions": [],
        "gas_limit": "19261969",
        "gas_price": "10000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "nonce": 11593,
        "transaction_types": [
          "coin_transfer",
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422312,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "780373803660000",
        "tx_burnt_fee": "78036600000000",
        "raw_input": "0x095ea7b3000000000000000000000000b97582dcb6f2866098ca210095a04df3e11b76a6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "result": "success",
        "hash": "0x4f0b5aef11fe10e2e22872ebb54551191443da5e5a4dfa1ea5fa4dded3944e16",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 8,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x7924d686742773e086AEDE99Ac3c8e5aE17AC6B1",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "7803660",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x77721D19BDfc67fe8cc46ddaa3cc4C94e6826E3C",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "USDC",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "approve",
        "fee": {
          "type": "actual",
          "value": "78036600000000"
        },
        "actions": [],
        "gas_limit": "19020155",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "approve(address spender, uint256 amount)",
          "method_id": "095ea7b3",
          "parameters": [
            {
              "name": "spender",
              "type": "address",
              "value": "0xB97582DCB6F2866098cA210095a04dF3e11B76A6"
            },
            {
              "name": "amount",
              "type": "uint256",
              "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "nonce": 11652,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422312,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c380000000000000000000000000000000000000000000000000000000001932c280000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0xfb41c39630208dc983291445ebf54ccd9e5cfd596f5c12c711aa59d6c4a91f6f",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 8,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380024"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422312"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422312,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "1292979690000000",
        "tx_burnt_fee": "143664410000000",
        "raw_input": "0xd3115a8a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000edfa3e28953ba25173baf11160d4ad435ec002b50000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000029bd6460fee5feffb5f61e70bba75245ee64c314000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000005af3107a4000010100000000000000000000000000000000000000000012725dd1e4ac1b000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x2b90dd7815c470b8e43641fc0c287fab2989cdee13269d68736e6d68001aa937",
        "max_fee_per_gas": "100000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 9,
        "position": 1,
        "max_priority_fee_per_gas": "100000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "123330000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0x60f22F386660Dc2faA4328286Eed6649cB351e1f",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "14366441",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xB97582DCB6F2866098cA210095a04dF3e11B76A6",
          "implementations": [
            {
              "address": "0x6415d628820393f12FF7D681a666660444EEC3c7",
              "name": "AdminFacet"
            },
            {
              "address": "0x33756d4dC8f7515E9F99C61f32eA86Fec60E814c",
              "name": "SwapFacet"
            },
            {
              "address": "0x9318624E961f020b53C9453A5D336637E46f4B56",
              "name": "SwapAuxillaryFacet"
            },
            {
              "address": "0x167A5D9b96b9C24916ccAb21805033A90eb13e4A",
              "name": "NFTHolderFacet"
            },
            {
              "address": "0xD2be60ea36244F58f24406505a042C6bB911c7a3",
              "name": null
            },
            {
              "address": "0xa8Cf8F5Ccaf16F2eE9939ea2D64065385FD2bd63",
              "name": "SwapHelperFacet"
            },
            {
              "address": "0xaa32369D681F07b3d8f7c6DaF96fBeF6e3807F96",
              "name": "SwapHelperFacet2"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "eip2535",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "execute",
        "fee": {
          "type": "actual",
          "value": "143664410000000"
        },
        "actions": [],
        "gas_limit": "18230412",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "execute(bytes32[] tokenRef, int128[] deposit, (bytes32,bytes32[],bytes)[] ops)",
          "method_id": "d3115a8a",
          "parameters": [
            {
              "name": "tokenRef",
              "type": "bytes32[]",
              "value": [
                "0x000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
                "0x000000000000000000000000edfa3e28953ba25173baf11160d4ad435ec002b5"
              ]
            },
            {
              "name": "deposit",
              "type": "int128[]",
              "value": [
                "0",
                "0"
              ]
            },
            {
              "name": "ops",
              "type": "(bytes32,bytes32[],bytes)[]",
              "value": [
                [
                  "0x00000000000000000000000029bd6460fee5feffb5f61e70bba75245ee64c314",
                  [
                    "0x00000000000000000000000000000000000000000000000000005af3107a4000",
                    "0x010100000000000000000000000000000000000000000012725dd1e4ac1b0000"
                  ],
                  "0x00"
                ]
              ]
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "nonce": 12,
        "transaction_types": [
          "coin_transfer",
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 26422311,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c380000000000000000000000000000000000000000000000000000000001932c270000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x985d2bc9c7ac24db628d62ea29c52f6e90abf161dbafcf5e938726258e9fe311",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 9,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380024"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422311"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422311,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "913961039519000",
        "tx_burnt_fee": "91395190000000",
        "raw_input": "0xc6c3bbe6000000000000000000000000e7ffe105f7dc49f2ff4412d5c6e8f3c3d1abc317000000000000000000000000173c4dbff91a41df2d9715ea86d63b0d8b91bfba0000000000000000000000000000000000000000000000000000002e90edd000",
        "result": "success",
        "hash": "0x1dd0445f24e3d7d9c90854b01d395de636bc1840bd74a6ad4849c5f2bdd4fccf",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 10,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x173c4DBff91a41DF2d9715EA86D63b0d8b91Bfba",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "9139519",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x8BEd439eb90aB1b79789171729A8776A0550ab8D",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "Faucet",
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "mint",
        "fee": {
          "type": "actual",
          "value": "91395190000000"
        },
        "actions": [],
        "gas_limit": "19184022",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "mint(address token, address to, uint256 amount)",
          "method_id": "c6c3bbe6",
          "parameters": [
            {
              "name": "token",
              "type": "address",
              "value": "0xe7ffE105F7dC49F2ff4412D5c6E8f3C3d1ABc317"
            },
            {
              "name": "to",
              "type": "address",
              "value": "0x173c4DBff91a41DF2d9715EA86D63b0d8b91Bfba"
            },
            {
              "name": "amount",
              "type": "uint256",
              "value": "200000000000"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "nonce": 11514,
        "transaction_types": [
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 26422310,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c380000000000000000000000000000000000000000000000000000000001932c260000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x7ca26cc2307246b8100c9a8410e41b5eebdfe4febe88bd03af06411dea895693",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 10,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380024"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422310"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422310,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "640494404880000",
        "tx_burnt_fee": "64048800000000",
        "raw_input": "0xfdaf95ae0000000000000000000000000000000000000000000000000000000000000004",
        "result": "success",
        "hash": "0x265bfaee286c9861e0f2eccf8d39580f25f1abacf8476a482200eb38a5d37889",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 11,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0xf45d1ACf785aEc3F7d9AA6134a57642597309056",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "6404880",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x4592d03bf91Ba5667F2C064A3CC122917EC41f1F",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "0xfdaf95ae",
        "fee": {
          "type": "actual",
          "value": "64048800000000"
        },
        "actions": [],
        "gas_limit": "8948373",
        "gas_price": "10000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "nonce": 11728,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422309,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c380000000000000000000000000000000000000000000000000000000001932c250000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x100c87ccea6ba626dd8094f9c6843d2b4e52fb23c5a32425c8bff981d7b78a5c",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 11,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380024"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422309"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422309,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "671625816191000",
        "tx_burnt_fee": "67161910000000",
        "raw_input": "0xb6b55f250000000000000000000000000000000000000000000000000000000000198f77",
        "result": "success",
        "hash": "0x3002ec76106d3a860899d3a6c75589f67d84d22042d52312954e5109f44775a2",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 12,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "100000000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0xFcA17F4e99EdF171c6Df61F0276a4be1B400419b",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "6716191",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xeFCBcc9A744b393084d9E2234ee27a09020D3CC6",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "TheVault",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "deposit",
        "fee": {
          "type": "actual",
          "value": "67161910000000"
        },
        "actions": [],
        "gas_limit": "19230056",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "deposit(uint256 _vaultId)",
          "method_id": "b6b55f25",
          "parameters": [
            {
              "name": "_vaultId",
              "type": "uint256",
              "value": "1675127"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "nonce": 5277,
        "transaction_types": [
          "coin_transfer",
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 26422308,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c380000000000000000000000000000000000000000000000000000000001932c240000000000000000000000000000000000000000000000000000000000000001",
        "result": "success",
        "hash": "0xea4612e1d7d1b4c54f3bbc5c7e92b64bb4f9e46ef749623f529e3a66f8e85a7c",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 12,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380024"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422308"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "1"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422308,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "1415381053669000",
        "tx_burnt_fee": "141536690000000",
        "raw_input": "0xd3115a8a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000edfa3e28953ba25173baf11160d4ad435ec002b50000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000029bd6460fee5feffb5f61e70bba75245ee64c314000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000005af3107a4000010100000000000000000000000000000000000000000012725dd1e4ac1b000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0xe3e84af8745a206b3173ed327ff4b3ccfea7593b63fd41bbdffe474c7b572876",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 13,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "100000000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0x012f23d667335d2b8E920fF2e20f56A63CCb69d7",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "14153669",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xB97582DCB6F2866098cA210095a04dF3e11B76A6",
          "implementations": [
            {
              "address": "0x6415d628820393f12FF7D681a666660444EEC3c7",
              "name": "AdminFacet"
            },
            {
              "address": "0x33756d4dC8f7515E9F99C61f32eA86Fec60E814c",
              "name": "SwapFacet"
            },
            {
              "address": "0x9318624E961f020b53C9453A5D336637E46f4B56",
              "name": "SwapAuxillaryFacet"
            },
            {
              "address": "0x167A5D9b96b9C24916ccAb21805033A90eb13e4A",
              "name": "NFTHolderFacet"
            },
            {
              "address": "0xD2be60ea36244F58f24406505a042C6bB911c7a3",
              "name": null
            },
            {
              "address": "0xa8Cf8F5Ccaf16F2eE9939ea2D64065385FD2bd63",
              "name": "SwapHelperFacet"
            },
            {
              "address": "0xaa32369D681F07b3d8f7c6DaF96fBeF6e3807F96",
              "name": "SwapHelperFacet2"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "eip2535",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "execute",
        "fee": {
          "type": "actual",
          "value": "141536690000000"
        },
        "actions": [],
        "gas_limit": "19865136",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "execute(bytes32[] tokenRef, int128[] deposit, (bytes32,bytes32[],bytes)[] ops)",
          "method_id": "d3115a8a",
          "parameters": [
            {
              "name": "tokenRef",
              "type": "bytes32[]",
              "value": [
                "0x000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
                "0x000000000000000000000000edfa3e28953ba25173baf11160d4ad435ec002b5"
              ]
            },
            {
              "name": "deposit",
              "type": "int128[]",
              "value": [
                "0",
                "0"
              ]
            },
            {
              "name": "ops",
              "type": "(bytes32,bytes32[],bytes)[]",
              "value": [
                [
                  "0x00000000000000000000000029bd6460fee5feffb5f61e70bba75245ee64c314",
                  [
                    "0x00000000000000000000000000000000000000000000000000005af3107a4000",
                    "0x010100000000000000000000000000000000000000000012725dd1e4ac1b0000"
                  ],
                  "0x00"
                ]
              ]
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:41.000000Z",
        "nonce": 7852,
        "transaction_types": [
          "coin_transfer",
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 26422307,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c380000000000000000000000000000000000000000000000000000000001932c230000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x736a3fde461d20ce497a441f785696d3a4232f5bea52a4a49a9aa48bfeed4823",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 13,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380024"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422307"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:41.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422307,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "780642306345000",
        "tx_burnt_fee": "78063450000000",
        "raw_input": "0x095ea7b3000000000000000000000000e27152c3757e13363372116835786246bfc817d6000000000000000004140c78940f6a24fdffc78873d4490d131f494c589c0000",
        "result": "success",
        "hash": "0xba425a17f6c61e879c81b33a967d7e78f37bc114aa98be3f53e67cec7753c13c",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 14,
        "position": 3,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x441e6E920F75cDcE729E0c91abE69C11229546a3",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "7806345",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xe7ffE105F7dC49F2ff4412D5c6E8f3C3d1ABc317",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "TestnetERC20",
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "approve",
        "fee": {
          "type": "actual",
          "value": "78063450000000"
        },
        "actions": [],
        "gas_limit": "19024979",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "approve(address spender, uint256 amount)",
          "method_id": "095ea7b3",
          "parameters": [
            {
              "name": "spender",
              "type": "address",
              "value": "0xE27152C3757E13363372116835786246BfC817D6"
            },
            {
              "name": "amount",
              "type": "uint256",
              "value": "99999999999999999999999999999999999999000000000000000000"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:41.000000Z",
        "nonce": 11532,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422306,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "16012200000000000",
        "tx_burnt_fee": "64048800000000",
        "raw_input": "0xfdaf95ae000000000000000000000000000000000000000000000000000000000000000b",
        "result": "success",
        "hash": "0x153b93c750ab3a778d7a18b712f8cefd5afca636d12618503d5ee473ad586f86",
        "max_fee_per_gas": "2520000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 14,
        "position": 2,
        "max_priority_fee_per_gas": "2500000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x73d4011180726dc338e7eaB480831b6548397fd1",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "6404880",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x4592d03bf91Ba5667F2C064A3CC122917EC41f1F",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "0xfdaf95ae",
        "fee": {
          "type": "actual",
          "value": "64048800000000"
        },
        "actions": [],
        "gas_limit": "8228881",
        "gas_price": "10000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:41.000000Z",
        "nonce": 289,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422306,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "949462594531000",
        "tx_burnt_fee": "94945310000000",
        "raw_input": "0x6a4cb83d00000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
        "result": "success",
        "hash": "0x340fdc8a6596075dbe15196956c6f9a0c0bbae1773f3d47be4510d5126090b91",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 14,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "100000000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0x2E10D60FbAF1C49fd85329Bf5357C5E0c4BEFBa6",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "9494531",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x9a40c4934a36885b54C49342fF2c21d6c51AAA2B",
          "implementations": [
            {
              "address": "0x9aD267F73AC8c530C0FaF93Cf552d2543987Be3C",
              "name": null
            },
            {
              "address": "0xbaA598c0c9F6afC588c0e134e2Ce47463d4D49af",
              "name": null
            },
            {
              "address": "0x4B5c0609da54c963573E3ab930093655Dca73e96",
              "name": null
            },
            {
              "address": "0x7E7F51eBf7663CAcb619B457405a26050eeB0350",
              "name": null
            },
            {
              "address": "0xf8f7271DC5B763166a80a386C45045f1fEE60De4",
              "name": null
            },
            {
              "address": "0xc2C422bfE988818d915C547bE3d0A8D932CEc4d5",
              "name": null
            },
            {
              "address": "0x0283e909B6b6Dc0d1FBC8fD5bBcc44a3C0024936",
              "name": null
            },
            {
              "address": "0xD087c20FC6E42A551f2c29c15f281FA62D3Ac92B",
              "name": null
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "eip2535",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "0x6a4cb83d",
        "fee": {
          "type": "actual",
          "value": "94945310000000"
        },
        "actions": [],
        "gas_limit": "19261969",
        "gas_price": "10000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:41.000000Z",
        "nonce": 11488,
        "transaction_types": [
          "coin_transfer",
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422306,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c380000000000000000000000000000000000000000000000000000000001932c220000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0xd5b0361ce42878832a37b98b723035734c69882d1500ca20b3aded545a050466",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 14,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380024"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422306"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:41.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422306,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "780642306345000",
        "tx_burnt_fee": "78063450000000",
        "raw_input": "0x095ea7b3000000000000000000000000e27152c3757e13363372116835786246bfc817d6000000000000000004140c78940f6a24fdffc78873d4490d131f494c589c0000",
        "result": "success",
        "hash": "0x0c90cd92bec995051f051926c918ed34f235a125c6955c627ad41e50c9a5c67b",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 15,
        "position": 2,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x74b24fF7682E94D9D42D2274c26f8eCf02414CbF",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "7806345",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xe7ffE105F7dC49F2ff4412D5c6E8f3C3d1ABc317",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "TestnetERC20",
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "approve",
        "fee": {
          "type": "actual",
          "value": "78063450000000"
        },
        "actions": [],
        "gas_limit": "19024979",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "approve(address spender, uint256 amount)",
          "method_id": "095ea7b3",
          "parameters": [
            {
              "name": "spender",
              "type": "address",
              "value": "0xE27152C3757E13363372116835786246BfC817D6"
            },
            {
              "name": "amount",
              "type": "uint256",
              "value": "99999999999999999999999999999999999999000000000000000000"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:41.000000Z",
        "nonce": 11385,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422305,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "780642306345000",
        "tx_burnt_fee": "78063450000000",
        "raw_input": "0x095ea7b3000000000000000000000000e27152c3757e13363372116835786246bfc817d6000000000000000004140c78940f6a24fdffc78873d4490d131f494c589c0000",
        "result": "success",
        "hash": "0x00e0c07f0b651c2064262f1d0645c81517ad4a943757c2b4ba713dcce727c0e2",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 15,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x8beb3fd8f87d0c0F39F1c8BB797f11D6A87d91ca",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "7806345",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x89f0415Ab9f69c7b04ECd476FD6e23D0A82dD6F0",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "TestnetERC20",
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "approve",
        "fee": {
          "type": "actual",
          "value": "78063450000000"
        },
        "actions": [],
        "gas_limit": "19024979",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "approve(address spender, uint256 amount)",
          "method_id": "095ea7b3",
          "parameters": [
            {
              "name": "spender",
              "type": "address",
              "value": "0xE27152C3757E13363372116835786246BfC817D6"
            },
            {
              "name": "amount",
              "type": "uint256",
              "value": "99999999999999999999999999999999999999000000000000000000"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:41.000000Z",
        "nonce": 11511,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422305,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c380000000000000000000000000000000000000000000000000000000001932c210000000000000000000000000000000000000000000000000000000000000001",
        "result": "success",
        "hash": "0xa5a37292ad9e9c760e9a130df1320e34d7f7a6cd4f4e9caf9867b33c0e014025",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 15,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380024"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422305"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "1"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:41.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422305,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0xd3115a8a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000020000000000000000000000003eb2eb8e2a0e26bef3dc3e78289be7343355febc000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000004524f4f8de76b700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000053d3ee740a23815d3ff884e85e2dad4e606b72cc000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000004524f4f8de76b7000010100000000000000000000000000000000000000000012725dd1e4ac1b000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x2d327febe1c4d0a3aa459d48d0e9194e76a68986e4bd55df9b5a2731cc07f1f6",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 0,
        "token_transfers_overflow": null,
        "confirmations": 16,
        "position": 3,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0xCaFC1e7396834992A6472DFC74d608284AEbFB9e",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "14208104",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xB97582DCB6F2866098cA210095a04dF3e11B76A6",
          "implementations": [
            {
              "address": "0x6415d628820393f12FF7D681a666660444EEC3c7",
              "name": "AdminFacet"
            },
            {
              "address": "0x33756d4dC8f7515E9F99C61f32eA86Fec60E814c",
              "name": "SwapFacet"
            },
            {
              "address": "0x9318624E961f020b53C9453A5D336637E46f4B56",
              "name": "SwapAuxillaryFacet"
            },
            {
              "address": "0x167A5D9b96b9C24916ccAb21805033A90eb13e4A",
              "name": "NFTHolderFacet"
            },
            {
              "address": "0xD2be60ea36244F58f24406505a042C6bB911c7a3",
              "name": null
            },
            {
              "address": "0xa8Cf8F5Ccaf16F2eE9939ea2D64065385FD2bd63",
              "name": "SwapHelperFacet"
            },
            {
              "address": "0xaa32369D681F07b3d8f7c6DaF96fBeF6e3807F96",
              "name": "SwapHelperFacet2"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "eip2535",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "execute",
        "fee": {
          "type": "actual",
          "value": "142081040000000"
        },
        "actions": [],
        "gas_limit": "17921770",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "execute(bytes32[] tokenRef, int128[] deposit, (bytes32,bytes32[],bytes)[] ops)",
          "method_id": "d3115a8a",
          "parameters": [
            {
              "name": "tokenRef",
              "type": "bytes32[]",
              "value": [
                "0x0000000000000000000000003eb2eb8e2a0e26bef3dc3e78289be7343355febc",
                "0x000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
              ]
            },
            {
              "name": "deposit",
              "type": "int128[]",
              "value": [
                "79718023000000000000",
                "0"
              ]
            },
            {
              "name": "ops",
              "type": "(bytes32,bytes32[],bytes)[]",
              "value": [
                [
                  "0x00000000000000000000000053d3ee740a23815d3ff884e85e2dad4e606b72cc",
                  [
                    "0x000000000000000000000000000000000000000000000004524f4f8de76b7000",
                    "0x010100000000000000000000000000000000000000000012725dd1e4ac1b0000"
                  ],
                  "0x00"
                ]
              ]
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "nonce": 30750,
        "transaction_types": [
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 26422304,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "671625816191000",
        "tx_burnt_fee": "67161910000000",
        "raw_input": "0xb6b55f250000000000000000000000000000000000000000000000000000000000198f99",
        "result": "success",
        "hash": "0xc9d5c4694a5830c6495f2f08e3cd0a3db4eeb10e7c0eb1e558d3a676a3385100",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 16,
        "position": 2,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "100000000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0x89De710c7A6Dab791b6EC92689F84Cb769F893dA",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "6716191",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xeFCBcc9A744b393084d9E2234ee27a09020D3CC6",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "TheVault",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "deposit",
        "fee": {
          "type": "actual",
          "value": "67161910000000"
        },
        "actions": [],
        "gas_limit": "19230056",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "deposit(uint256 _vaultId)",
          "method_id": "b6b55f25",
          "parameters": [
            {
              "name": "_vaultId",
              "type": "uint256",
              "value": "1675161"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "nonce": 5046,
        "transaction_types": [
          "coin_transfer",
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 26422304,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "1477921679069000",
        "tx_burnt_fee": "147790690000000",
        "raw_input": "0xd3115a8a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000edfa3e28953ba25173baf11160d4ad435ec002b5000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000029bd6460fee5feffb5f61e70bba75245ee64c314000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000b01ca365e014aeb61010100000000000000000000000000000000000000000012725dd1e4ac1b000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x7aa4d33eea11397fd2a8399eb9cd8295e4240d3d22fd170e5847fffdc3aec79b",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 16,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x01F1926740043DCf44849Bbe34C8FF52a10D40b1",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "14779069",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xB97582DCB6F2866098cA210095a04dF3e11B76A6",
          "implementations": [
            {
              "address": "0x6415d628820393f12FF7D681a666660444EEC3c7",
              "name": "AdminFacet"
            },
            {
              "address": "0x33756d4dC8f7515E9F99C61f32eA86Fec60E814c",
              "name": "SwapFacet"
            },
            {
              "address": "0x9318624E961f020b53C9453A5D336637E46f4B56",
              "name": "SwapAuxillaryFacet"
            },
            {
              "address": "0x167A5D9b96b9C24916ccAb21805033A90eb13e4A",
              "name": "NFTHolderFacet"
            },
            {
              "address": "0xD2be60ea36244F58f24406505a042C6bB911c7a3",
              "name": null
            },
            {
              "address": "0xa8Cf8F5Ccaf16F2eE9939ea2D64065385FD2bd63",
              "name": "SwapHelperFacet"
            },
            {
              "address": "0xaa32369D681F07b3d8f7c6DaF96fBeF6e3807F96",
              "name": "SwapHelperFacet2"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "eip2535",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "execute",
        "fee": {
          "type": "actual",
          "value": "147790690000000"
        },
        "actions": [],
        "gas_limit": "19865136",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "execute(bytes32[] tokenRef, int128[] deposit, (bytes32,bytes32[],bytes)[] ops)",
          "method_id": "d3115a8a",
          "parameters": [
            {
              "name": "tokenRef",
              "type": "bytes32[]",
              "value": [
                "0x000000000000000000000000edfa3e28953ba25173baf11160d4ad435ec002b5",
                "0x000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
              ]
            },
            {
              "name": "deposit",
              "type": "int128[]",
              "value": [
                "0",
                "0"
              ]
            },
            {
              "name": "ops",
              "type": "(bytes32,bytes32[],bytes)[]",
              "value": [
                [
                  "0x00000000000000000000000029bd6460fee5feffb5f61e70bba75245ee64c314",
                  [
                    "0x00000000000000000000000000000000000000000000000b01ca365e014aeb61",
                    "0x010100000000000000000000000000000000000000000012725dd1e4ac1b0000"
                  ],
                  "0x00"
                ]
              ]
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "nonce": 11836,
        "transaction_types": [
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 26422304,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c380000000000000000000000000000000000000000000000000000000001932c200000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x7f6cd8e5573227c66a8a29f4c53c933142ca1f0ba843e770ca3d603362cf6ae1",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 16,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380024"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422304"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422304,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "780823908161000",
        "tx_burnt_fee": "78081610000000",
        "raw_input": "0x095ea7b3000000000000000000000000b97582dcb6f2866098ca210095a04df3e11b76a6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "result": "success",
        "hash": "0x73403d8ab4ea7fb373fc574a83fd51377a12b0417de04da2f6b98683d10bf422",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 17,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x987caE56bDeE72aa1b87633f1907aaD03eC1af2c",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "7808161",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x2c2800995F2a8137EB9dd3Bfe88FABbBAe8b4958",
          "implementations": [
            {
              "address": "0x41E644c4CB450710264056f22C08908d28D54f80",
              "name": "VeSail"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": "Locked Sail",
          "private_tags": [],
          "proxy_type": "eip1967",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "approve",
        "fee": {
          "type": "actual",
          "value": "78081610000000"
        },
        "actions": [],
        "gas_limit": "19020155",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "approve(address guy, uint256 wad)",
          "method_id": "095ea7b3",
          "parameters": [
            {
              "name": "guy",
              "type": "address",
              "value": "0xB97582DCB6F2866098cA210095a04dF3e11B76A6"
            },
            {
              "name": "wad",
              "type": "uint256",
              "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "nonce": 11465,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422303,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c380000000000000000000000000000000000000000000000000000000001932c1f0000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x8ce1f2ed8a88a4973df17cad323b592c4116d41d1b719de681409bc0bd63374c",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 17,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380024"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422303"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422303,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "945347753383000",
        "tx_burnt_fee": "94533830000000",
        "raw_input": "0x6a4cb83d00000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
        "result": "success",
        "hash": "0x468777467b501c5fb12468193a0d471bd58614229fccfe7188f24efa8c92e92e",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 18,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "100000000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0xee3416E2288A8a45E35C93A7Dc2064D1CF4Ae92F",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "9453383",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x9a40c4934a36885b54C49342fF2c21d6c51AAA2B",
          "implementations": [
            {
              "address": "0x9aD267F73AC8c530C0FaF93Cf552d2543987Be3C",
              "name": null
            },
            {
              "address": "0xbaA598c0c9F6afC588c0e134e2Ce47463d4D49af",
              "name": null
            },
            {
              "address": "0x4B5c0609da54c963573E3ab930093655Dca73e96",
              "name": null
            },
            {
              "address": "0x7E7F51eBf7663CAcb619B457405a26050eeB0350",
              "name": null
            },
            {
              "address": "0xf8f7271DC5B763166a80a386C45045f1fEE60De4",
              "name": null
            },
            {
              "address": "0xc2C422bfE988818d915C547bE3d0A8D932CEc4d5",
              "name": null
            },
            {
              "address": "0x0283e909B6b6Dc0d1FBC8fD5bBcc44a3C0024936",
              "name": null
            },
            {
              "address": "0xD087c20FC6E42A551f2c29c15f281FA62D3Ac92B",
              "name": null
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "eip2535",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "0x6a4cb83d",
        "fee": {
          "type": "actual",
          "value": "94533830000000"
        },
        "actions": [],
        "gas_limit": "19261969",
        "gas_price": "10000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "nonce": 11527,
        "transaction_types": [
          "coin_transfer",
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422302,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c380000000000000000000000000000000000000000000000000000000001932c1e0000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0xe2f94889b1b1cc8da1534a6780652bca3f0de8d0c5e1214a9e20c5a0d2e19fce",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 18,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380024"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422302"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422302,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "780884708769000",
        "tx_burnt_fee": "78087690000000",
        "raw_input": "0x095ea7b3000000000000000000000000b97582dcb6f2866098ca210095a04df3e11b76a6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "result": "success",
        "hash": "0x9665f99a1364891065f4d3db4d3a86224166ed5032a0c8f523b5d1428863c3aa",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 19,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0xF067f660940825715E8FA689F76522F9D2Acd78C",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "7808769",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x81962760B26D4c2C6eD373F615310633abFd47c1",
          "implementations": [
            {
              "address": "0x0BF7a41635d2f1f6Fa124145aC29BEcA0F2Cb478",
              "name": "ADEX"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "TransparentUpgradeableProxy",
          "private_tags": [],
          "proxy_type": "eip1967",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "approve",
        "fee": {
          "type": "actual",
          "value": "78087690000000"
        },
        "actions": [],
        "gas_limit": "19020155",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "approve(address spender, uint256 value)",
          "method_id": "095ea7b3",
          "parameters": [
            {
              "name": "spender",
              "type": "address",
              "value": "0xB97582DCB6F2866098cA210095a04dF3e11B76A6"
            },
            {
              "name": "value",
              "type": "uint256",
              "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "nonce": 11668,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422301,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000709c380000000000000000000000000000000000000000000000000000000001932c1d0000000000000000000000000000000000000000000000000000000000000001",
        "result": "success",
        "hash": "0x9068fde142ac0cb9214d4baf35d785d004e7617931842765d3ec70b54bbff47d",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 19,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "7380024"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "26422301"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "1"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 26422301,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "924355043458000",
        "tx_burnt_fee": "92434580000000",
        "raw_input": "0x69328dec000000000000000000000000345e902846ac3805719483d80d664aba0b6af40c00000000000000000000000000000000000000000000000000005af3107a4000000000000000000000000000a906efb98d505e1649fc02b3cb564224b3dda1d4",
        "result": "success",
        "hash": "0xadcb1ae43d747772e39dd814b4f5ae4fc4818641a1940923ff1a4e41ae7f5e4a",
        "max_fee_per_gas": "110001000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 20,
        "position": 1,
        "max_priority_fee_per_gas": "110001000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0xA906eFB98D505e1649FC02b3cb564224b3dda1D4",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "9243458",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xE27152C3757E13363372116835786246BfC817D6",
          "implementations": [
            {
              "address": "0xa0279D130b019e8b3cCf7c48650f3654B9C1D3bA",
              "name": null
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": "eip1967",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "withdraw",
        "fee": {
          "type": "actual",
          "value": "92434580000000"
        },
        "actions": [],
        "gas_limit": "19282111",
        "gas_price": "10000000",
        "decoded_input": {
          "method_call": "withdraw(address asset, uint256 amount, address to)",
          "method_id": "69328dec",
          "parameters": [
            {
              "name": "asset",
              "type": "address",
              "value": "0x345E902846aC3805719483d80D664ABa0B6aF40C"
            },
            {
              "name": "amount",
              "type": "uint256",
              "value": "100000000000000"
            },
            {
              "name": "to",
              "type": "address",
              "value": "0xA906eFB98D505e1649FC02b3cb564224b3dda1D4"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-29T16:28:39.000000Z",
        "nonce": 4786,
        "transaction_types": [
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 26422300,
        "has_error_in_internal_transactions": null
      }
    ],
    "next_page_params": {
      "block_number": 26422300,
      "index": 1,
      "items_count": 50
    }
  },
  "https://edu-chain-testnet.blockscout.com/api/v2/blocks/10/transactions": {
    "items": [
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "0x6bf6a42d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000596993000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x2d3895af46e8b4123852981d6e4a1d271d6247106baa91ac1ead823ca3cf4bfb",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 106,
        "token_transfers_overflow": null,
        "confirmations": 26422310,
        "position": 0,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "0",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x00000000000000000000000000000000000A4B05",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbOS",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "startBlock",
        "fee": {
          "type": "actual",
          "value": "0"
        },
        "actions": [],
        "gas_limit": "0",
        "gas_price": "100000000",
        "decoded_input": {
          "method_call": "startBlock(uint256 l1BaseFee, uint64 l1BlockNumber, uint64 l2BlockNumber, uint64 timePassed)",
          "method_id": "6bf6a42d",
          "parameters": [
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "l1BlockNumber",
              "type": "uint64",
              "value": "5859731"
            },
            {
              "name": "l2BlockNumber",
              "type": "uint64",
              "value": "10"
            },
            {
              "name": "timePassed",
              "type": "uint64",
              "value": "0"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-05-08T06:59:29.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 10,
        "has_error_in_internal_transactions": false
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "",
        "result": "success",
        "hash": "0xbf45a620218d0e08925630b83acf99f2c6f9b0c58229372cec32e2116fd88f91",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 105,
        "token_transfers_overflow": null,
        "confirmations": 26422310,
        "position": 1,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0xb776705700774a40b73b4e3509AE01C7Ef05CB20",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "81392106",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x000000000000000000000000000000000000006E",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ArbRetryableTx",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "submitRetryable",
        "fee": {
          "type": "actual",
          "value": "8139210600000000"
        },
        "actions": [],
        "gas_limit": "81392106",
        "gas_price": "100000000",
        "decoded_input": {
          "method_call": "submitRetryable(bytes32 requestId, uint256 l1BaseFee, uint256 deposit, uint256 callvalue, uint256 gasFeeCap, uint64 gasLimit, uint256 maxSubmissionFee, address feeRefundAddress, address beneficiary, address retryTo, bytes retryData)",
          "method_id": "c9f95d32",
          "parameters": [
            {
              "name": "requestId",
              "type": "bytes32",
              "value": "0x000000000000000000000000000000000000000000000000000000000000000a"
            },
            {
              "name": "l1BaseFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "deposit",
              "type": "uint256",
              "value": "8139210600000000"
            },
            {
              "name": "callvalue",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "gasFeeCap",
              "type": "uint256",
              "value": "100000000"
            },
            {
              "name": "gasLimit",
              "type": "uint64",
              "value": "81392106"
            },
            {
              "name": "maxSubmissionFee",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "feeRefundAddress",
              "type": "address",
              "value": "0xF46B08D9E85df74b6f24Ad85A6a655c02857D5b8"
            },
            {
              "name": "beneficiary",
              "type": "address",
              "value": "0xF46B08D9E85df74b6f24Ad85A6a655c02857D5b8"
            },
            {
              "name": "retryTo",
              "type": "address",
              "value": "0xA0000E6C85942b9379B2884C33f5786bdCA7EE0D"
            },
            {
              "name": "retryData",
              "type": "bytes",
              "value": ""
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-05-08T06:59:29.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 10,
        "has_error_in_internal_transactions": false
      },
      {
        "priority_fee": null,
        "tx_burnt_fee": null,
        "raw_input": "",
        "result": "success",
        "hash": "0x48c93bf66022375d407e0957a56076648fbb8790991694eb41a58617c73edac9",
        "max_fee_per_gas": null,
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 104,
        "token_transfers_overflow": null,
        "confirmations": 26422310,
        "position": 2,
        "max_priority_fee_per_gas": null,
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0xb776705700774a40b73b4e3509AE01C7Ef05CB20",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "11090594",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xA0000E6C85942b9379B2884C33f5786bdCA7EE0D",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "L2AtomicTokenBridgeFactory",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "deployL2Contracts",
        "fee": {
          "type": "actual",
          "value": "1109059400000000"
        },
        "actions": [],
        "gas_limit": "81392106",
        "gas_price": "100000000",
        "decoded_input": {
          "method_call": "deployL2Contracts((bytes,bytes,bytes,bytes,bytes,bytes,bytes) l2Code, address l1Router, address l1StandardGateway, address l1CustomGateway, address l1WethGateway, address l1Weth, address l2StandardGatewayCanonicalAddress, address rollupOwner, address aliasedL1UpgradeExecutor)",
          "method_id": "b1c7a870",
          "parameters": [
            {
              "name": "l2Code",
              "type": "(bytes,bytes,bytes,bytes,bytes,bytes,bytes)",
              "value": [
                "0x6080604052600436106100bd5760003560e01c8063a0c76a961161006f578063a0c76a96146101a2578063a7e28d48146101c2578063bda009fe146101e2578063d2ce7d6514610202578063ed08fdc614610215578063f7c9362f1461024b578063f887ea401461026b57600080fd5b806303295802146100c25780632db09c1c146100f85780632e567b36146101185780634201f9851461012d578063485cc9551461014d5780637b3a3c8b1461016d57806395fcea781461018d575b600080fd5b3480156100ce57600080fd5b506003546100e2906001600160a01b031681565b6040516100ef9190610977565b60405180910390f35b34801561010457600080fd5b506000546100e2906001600160a01b031681565b61012b6101263660046109e8565b61028b565b005b34801561013957600080fd5b5061012b610148366004610b2f565b6102cf565b34801561015957600080fd5b5061012b610168366004610b92565b61043f565b61018061017b366004610bcb565b61044f565b6040516100ef9190610c8d565b34801561019957600080fd5b5061012b61046b565b3480156101ae57600080fd5b506101806101bd366004610cc7565b6104e3565b3480156101ce57600080fd5b506100e26101dd366004610d88565b610577565b3480156101ee57600080fd5b506100e26101fd366004610d88565b610610565b610180610210366004610da5565b610670565b34801561022157600080fd5b506100e2610230366004610d88565b6002602052600090815260409020546001600160a01b031681565b34801561025757600080fd5b5061012b610266366004610d88565b610770565b34801561027757600080fd5b506001546100e2906001600160a01b031681565b60405162461bcd60e51b815260206004820152601460248201527327a7262cafa7aaaa2127aaa7222fa927aaaa22a960611b60448201526064015b60405180910390fd5b6000546102ed906001600160a01b031661111161111160901b010190565b6001600160a01b0316336001600160a01b03161461031d5760405162461bcd60e51b81526004016102c690610e2a565b805182511461032e5761032e610e5c565b60005b825181101561043a5781818151811061034c5761034c610e72565b60200260200101516002600085848151811061036a5761036a610e72565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508181815181106103c8576103c8610e72565b60200260200101516001600160a01b03168382815181106103eb576103eb610e72565b60200260200101516001600160a01b03167f812ca95fe4492a9e2d1f2723c2c40c03a60a27b059581ae20ac4e4d73bfba35460405160405180910390a38061043281610e88565b915050610331565b505050565b61044b82600083610814565b5050565b60606104618686866000808888610670565b9695505050505050565b60006104957fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b9050336001600160a01b038216146104e05760405162461bcd60e51b815260206004820152600e60248201526d2727aa2fa32927a6afa0a226a4a760911b60448201526064016102c6565b50565b606060006104f087610610565b604051635063b54b60e11b81529091506001600160a01b0382169063a0c76a9690610527908a908a908a908a908a90600401610eaf565b600060405180830381865afa158015610544573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261056c9190810190610eea565b979650505050505050565b60008061058383610610565b90506001600160a01b03811661059c5750600092915050565b6040516314fc51a960e31b81526001600160a01b0382169063a7e28d48906105c8908690600401610977565b602060405180830381865afa1580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106099190610f60565b9392505050565b6001600160a01b03808216600090815260026020526040902054168061063e57506003546001600160a01b03165b6001600160a01b0381166001148061065e57506001600160a01b0381163b155b1561066b57506000919050565b919050565b6060600061067d89610610565b9050600061068c338686610886565b9050886001600160a01b0316336001600160a01b03168b6001600160a01b03167f85291dff2161a93c2f12c819d31889c96c63042116f5bc5a205aa701c2c429f5856040516106db9190610977565b60405180910390a460405163d2ce7d6560e01b81526001600160a01b0383169063d2ce7d6590349061071b908e908e908e908e908e908a90600401610f7d565b60006040518083038185885af1158015610739573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526107629190810190610eea565b9a9950505050505050505050565b60005461078e906001600160a01b031661111161111160901b010190565b6001600160a01b0316336001600160a01b0316146107be5760405162461bcd60e51b81526004016102c690610e2a565b600380546001600160a01b0319166001600160a01b0383161790556040517f3a8f8eb961383a94d41d193e16a3af73eaddfd5764a4c640257323a1603ac33190610809908390610977565b60405180910390a150565b6001600160a01b038216156108585760405162461bcd60e51b815260206004820152600a6024820152692120a22fa927aaaa22a960b11b60448201526064016102c6565b61086283836108b5565b600380546001600160a01b0319166001600160a01b03929092169190911790555050565b606083838360405160200161089d93929190610fc6565b60405160208183030381529060405290509392505050565b6001600160a01b0382166109015760405162461bcd60e51b81526020600482015260136024820152721253959053125117d0d3d55395115494105495606a1b60448201526064016102c6565b6000546001600160a01b0316156109495760405162461bcd60e51b815260206004820152600c60248201526b1053149150511657d253925560a21b60448201526064016102c6565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055565b6001600160a01b0391909116815260200190565b6001600160a01b03811681146104e057600080fd5b60008083601f8401126109b257600080fd5b5081356001600160401b038111156109c957600080fd5b6020830191508360208285010111156109e157600080fd5b9250929050565b60008060008060008060a08789031215610a0157600080fd5b8635610a0c8161098b565b95506020870135610a1c8161098b565b94506040870135610a2c8161098b565b93506060870135925060808701356001600160401b03811115610a4e57600080fd5b610a5a89828a016109a0565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610aaa57610aaa610a6c565b604052919050565b600082601f830112610ac357600080fd5b813560206001600160401b03821115610ade57610ade610a6c565b8160051b610aed828201610a82565b9283528481018201928281019087851115610b0757600080fd5b83870192505b8483101561056c578235610b208161098b565b82529183019190830190610b0d565b60008060408385031215610b4257600080fd5b82356001600160401b0380821115610b5957600080fd5b610b6586838701610ab2565b93506020850135915080821115610b7b57600080fd5b50610b8885828601610ab2565b9150509250929050565b60008060408385031215610ba557600080fd5b8235610bb08161098b565b91506020830135610bc08161098b565b809150509250929050565b600080600080600060808688031215610be357600080fd5b8535610bee8161098b565b94506020860135610bfe8161098b565b93506040860135925060608601356001600160401b03811115610c2057600080fd5b610c2c888289016109a0565b969995985093965092949392505050565b60005b83811015610c58578181015183820152602001610c40565b50506000910152565b60008151808452610c79816020860160208601610c3d565b601f01601f19169290920160200192915050565b6020815260006106096020830184610c61565b60006001600160401b03821115610cb957610cb9610a6c565b50601f01601f191660200190565b600080600080600060a08688031215610cdf57600080fd5b8535610cea8161098b565b94506020860135610cfa8161098b565b93506040860135610d0a8161098b565b92506060860135915060808601356001600160401b03811115610d2c57600080fd5b8601601f81018813610d3d57600080fd5b8035610d50610d4b82610ca0565b610a82565b818152896020838501011115610d6557600080fd5b816020840160208301376000602083830101528093505050509295509295909350565b600060208284031215610d9a57600080fd5b81356106098161098b565b600080600080600080600060c0888a031215610dc057600080fd5b8735610dcb8161098b565b96506020880135610ddb8161098b565b955060408801359450606088013593506080880135925060a08801356001600160401b03811115610e0b57600080fd5b610e178a828b016109a0565b989b979a50959850939692959293505050565b6020808252601890820152774f4e4c595f434f554e544552504152545f4741544557415960401b604082015260600190565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201610ea857634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a06080820181905260009061056c90830184610c61565b600060208284031215610efc57600080fd5b81516001600160401b03811115610f1257600080fd5b8201601f81018413610f2357600080fd5b8051610f31610d4b82610ca0565b818152856020838501011115610f4657600080fd5b610f57826020830160208601610c3d565b95945050505050565b600060208284031215610f7257600080fd5b81516106098161098b565b600060018060a01b03808916835280881660208401525085604083015284606083015283608083015260c060a0830152610fba60c0830184610c61565b98975050505050505050565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f191601019291505056fea2646970667358221220fe272f655dd8ccb0ec1ef689b8ae085294a5e1124cbdc468b8e206a13825155164736f6c63430008100033",
                "0x6080604052600436106100b25760003560e01c806397881f8d1161006f57806397881f8d14610182578063a0c76a9614610197578063a7e28d48146101b7578063c05e6a95146101d7578063c0c53b8b146101f7578063d2ce7d6514610217578063f887ea401461022a57600080fd5b8063015234ab146100b75780632db09c1c146100e05780632e567b3614610118578063569f26ff1461012d5780637b3a3c8b1461014d57806395fcea781461016d575b600080fd5b3480156100c357600080fd5b506100cd60025481565b6040519081526020015b60405180910390f35b3480156100ec57600080fd5b50600054610100906001600160a01b031681565b6040516001600160a01b0390911681526020016100d7565b61012b610126366004610f3e565b61024a565b005b34801561013957600080fd5b506100cd610148366004610fc2565b6104a5565b61016061015b366004610fe6565b6104d9565b6040516100d791906110a8565b34801561017957600080fd5b5061012b6104f5565b34801561018e57600080fd5b506100cd61056d565b3480156101a357600080fd5b506101606101b236600461115d565b6105e0565b3480156101c357600080fd5b506101006101d2366004610fc2565b61064b565b3480156101e357600080fd5b50600354610100906001600160a01b031681565b34801561020357600080fd5b5061012b6102123660046111db565b6106cd565b610160610225366004611226565b610742565b34801561023657600080fd5b50600154610100906001600160a01b031681565b600054610268906001600160a01b031661111161111160901b010190565b6001600160a01b0316336001600160a01b0316146102c85760405162461bcd60e51b81526020600482015260186024820152774f4e4c595f434f554e544552504152545f4741544557415960401b60448201526064015b60405180910390fd5b6000806102d5848461098e565b9150915080516000146102f357506040805160208101909152600081525b60006102fe8961064b565b90506001600160a01b0381163b61033257600061031f8a838b8b8b896109a8565b90508015610330575050505061049d565b505b60408051600481526024810182526020810180516001600160e01b031663c2eeeebd60e01b179052905160009182916001600160a01b03851691610375916112ab565b600060405180830381855afa9150503d80600081146103b0576040519150601f19603f3d011682016040523d82523d6000602084013e6103b5565b606091505b509150915060008215806103ca575060208251105b156103d757506001610406565b60006103e483600c610adc565b90508c6001600160a01b0316816001600160a01b03161461040457600191505b505b8015610434576104288c308d8c60405180602001604052806000815250610b3e565b5050505050505061049d565b505050610442818888610bbe565b866001600160a01b0316886001600160a01b03168a6001600160a01b03167fc7f2e9c55c40a50fbc217dfc70cd39a222940dfa62145aa0ca49eb9535d4fcb28960405161049191815260200190565b60405180910390a45050505b505050505050565b604080516001600160a01b038316602082015260009101604051602081830303815290604052805190602001209050919050565b60606104eb8686866000808888610742565b9695505050505050565b600061051f7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b9050336001600160a01b0382161461056a5760405162461bcd60e51b815260206004820152600e60248201526d2727aa2fa32927a6afa0a226a4a760911b60448201526064016102bf565b50565b600354604080516397881f8d60e01b815290516000926001600160a01b0316916397881f8d9160048083019260209291908290030181865afa1580156105b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105db91906112c7565b905090565b6060632e567b3660e01b868686866105fa60025488610c23565b60405160240161060e9594939291906112e0565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905095945050505050565b6003546000906001600160a01b031663e75b214130610669856104a5565b6040518363ffffffff1660e01b8152600401610686929190611326565b602060405180830381865afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c7919061133f565b92915050565b6106d78383610c4f565b6001600160a01b03811661071e5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa122a0a1a7a760911b60448201526064016102bf565b600380546001600160a01b0319166001600160a01b03929092169190911790555050565b6060341561077d5760405162461bcd60e51b81526020600482015260086024820152674e4f5f56414c554560c01b60448201526064016102bf565b6001546000906060906001600160a01b031633036107a95761079f8585610ca0565b90925090506107e6565b33915084848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b80511561082b5760405162461bcd60e51b8152602060048201526013602482015272115615149057d110551057d11254d050931151606a1b60448201526064016102bf565b6000806108378c61064b565b90506001600160a01b0381163b6108855760405162461bcd60e51b81526020600482015260126024820152711513d2d15397d393d517d111541313d6515160721b60448201526064016102bf565b8b6001600160a01b0316816001600160a01b031663c2eeeebd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f1919061133f565b6001600160a01b03161461093f5760405162461bcd60e51b81526020600482015260156024820152742727aa2fa2ac2822a1aa22a22fa618afaa27a5a2a760591b60448201526064016102bf565b61094a81858c610cbc565b99506109598c858d8d87610b3e565b9150508060405160200161096f91815260200190565b6040516020818303038152906040529350505050979650505050505050565b60608061099d8385018561135c565b909590945092505050565b6000806109b4886104a5565b6003546040516329a5c5cf60e01b8152600481018390529192506000916001600160a01b03909116906329a5c5cf906024016020604051808303816000875af1158015610a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a29919061133f565b604051630c4edbe960e11b81529091506001600160a01b0382169063189db7d290610a5a908c9088906004016113bf565b600060405180830381600087803b158015610a7457600080fd5b505af1158015610a88573d6000803e3d6000fd5b50505050876001600160a01b0316816001600160a01b031603610ab0576000925050506104eb565b610acc8930898860405180602001604052806000815250610b3e565b5060019998505050505050505050565b6000610ae98260146113f9565b83511015610b2e5760405162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b60448201526064016102bf565b500160200151600160601b900490565b60025460009081610b5c8786610b578b838b848b6105e0565b610d27565b604080516001600160a01b038b81168252602082018690529181018890529192508291818916918a16907f3073a74ecb728d10be779fe19a74a1428e20468f5b4d167bf9c73d9067847d739060600160405180910390a4979650505050505050565b6040516346154c9f60e11b81526001600160a01b03841690638c2a993e90610bec9085908590600401611326565b600060405180830381600087803b158015610c0657600080fd5b505af1158015610c1a573d6000803e3d6000fd5b50505050505050565b60608282604051602001610c3892919061140c565b604051602081830303815290604052905092915050565b610c598282610d5f565b6001600160a01b038116610c9c5760405162461bcd60e51b815260206004820152600a6024820152692120a22fa927aaaa22a960b11b60448201526064016102bf565b5050565b60006060610cb083850185611425565b915091505b9250929050565b6040516374f4f54760e01b81526000906001600160a01b038516906374f4f54790610ced9086908690600401611326565b600060405180830381600087803b158015610d0757600080fd5b505af1158015610d1b573d6000803e3d6000fd5b50939695505050505050565b6002805460009182610d388361146a565b909155505060008054610d57919086906001600160a01b031685610e21565b949350505050565b6001600160a01b038216610dab5760405162461bcd60e51b81526020600482015260136024820152721253959053125117d0d3d55395115494105495606a1b60448201526064016102bf565b6000546001600160a01b031615610df35760405162461bcd60e51b815260206004820152600c60248201526b1053149150511657d253925560a21b60448201526064016102bf565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055565b6040516349460b4d60e11b8152600090819060649063928c169a908890610e4e90889088906004016113bf565b60206040518083038185885af1158015610e6c573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610e9191906112c7565b905080846001600160a01b0316866001600160a01b03167f2b986d32a0536b7e19baa48ab949fec7b903b7fad7730820b20632d100cc3a6886604051610ed791906110a8565b60405180910390a495945050505050565b6001600160a01b038116811461056a57600080fd5b60008083601f840112610f0f57600080fd5b5081356001600160401b03811115610f2657600080fd5b602083019150836020828501011115610cb557600080fd5b60008060008060008060a08789031215610f5757600080fd5b8635610f6281610ee8565b95506020870135610f7281610ee8565b94506040870135610f8281610ee8565b93506060870135925060808701356001600160401b03811115610fa457600080fd5b610fb089828a01610efd565b979a9699509497509295939492505050565b600060208284031215610fd457600080fd5b8135610fdf81610ee8565b9392505050565b600080600080600060808688031215610ffe57600080fd5b853561100981610ee8565b9450602086013561101981610ee8565b93506040860135925060608601356001600160401b0381111561103b57600080fd5b61104788828901610efd565b969995985093965092949392505050565b60005b8381101561107357818101518382015260200161105b565b50506000910152565b60008151808452611094816020860160208601611058565b601f01601f19169290920160200192915050565b602081526000610fdf602083018461107c565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126110e257600080fd5b81356001600160401b03808211156110fc576110fc6110bb565b604051601f8301601f19908116603f01168101908282118183101715611124576111246110bb565b8160405283815286602085880101111561113d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561117557600080fd5b853561118081610ee8565b9450602086013561119081610ee8565b935060408601356111a081610ee8565b92506060860135915060808601356001600160401b038111156111c257600080fd5b6111ce888289016110d1565b9150509295509295909350565b6000806000606084860312156111f057600080fd5b83356111fb81610ee8565b9250602084013561120b81610ee8565b9150604084013561121b81610ee8565b809150509250925092565b600080600080600080600060c0888a03121561124157600080fd5b873561124c81610ee8565b9650602088013561125c81610ee8565b955060408801359450606088013593506080880135925060a08801356001600160401b0381111561128c57600080fd5b6112988a828b01610efd565b989b979a50959850939692959293505050565b600082516112bd818460208701611058565b9190910192915050565b6000602082840312156112d957600080fd5b5051919050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a06080820181905260009061131b9083018461107c565b979650505050505050565b6001600160a01b03929092168252602082015260400190565b60006020828403121561135157600080fd5b8151610fdf81610ee8565b6000806040838503121561136f57600080fd5b82356001600160401b038082111561138657600080fd5b611392868387016110d1565b935060208501359150808211156113a857600080fd5b506113b5858286016110d1565b9150509250929050565b6001600160a01b0383168152604060208201819052600090610d579083018461107c565b634e487b7160e01b600052601160045260246000fd5b808201808211156106c7576106c76113e3565b828152604060208201526000610d57604083018461107c565b6000806040838503121561143857600080fd5b823561144381610ee8565b915060208301356001600160401b0381111561145e57600080fd5b6113b5858286016110d1565b60006001820161147c5761147c6113e3565b506001019056fea264697066735822122023cc4c13f55841b2e37f1513230bb5787e3165ab0a5330a49c1b72d29da5367364736f6c63430008100033",
                "0x6080604052600436106100a75760003560e01c806395fcea781161006457806395fcea7814610198578063a0c76a96146101ad578063a7e28d48146101cd578063d2ce7d65146101ed578063d4f5532f14610200578063f887ea401461022057600080fd5b8063015234ab146100ac5780632db09c1c146100d55780632e567b361461010d578063485cc955146101225780637b3a3c8b146101425780638a2dc01414610162575b600080fd5b3480156100b857600080fd5b506100c260025481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506000546100f5906001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b61012061011b366004610e1b565b610240565b005b34801561012e57600080fd5b5061012061013d366004610e9f565b610474565b610155610150366004610ed8565b610482565b6040516100cc9190610f9a565b34801561016e57600080fd5b506100f561017d366004610fb4565b6003602052600090815260409020546001600160a01b031681565b3480156101a457600080fd5b5061012061049e565b3480156101b957600080fd5b506101556101c8366004611073565b610516565b3480156101d957600080fd5b506100f56101e8366004610fb4565b610581565b6101556101fb3660046110f1565b61059f565b34801561020c57600080fd5b5061012061021b3660046111ba565b6107eb565b34801561022c57600080fd5b506001546100f5906001600160a01b031681565b60005461025e906001600160a01b031661111161111160901b010190565b6001600160a01b0316336001600160a01b0316146102975760405162461bcd60e51b815260040161028e90611225565b60405180910390fd5b6000806102a4848461096c565b9150915080516000146102c257506040805160208101909152600081525b60006102cd89610581565b90506001600160a01b0381163b6103015760006102ee8a838b8b8b89610986565b905080156102ff575050505061046c565b505b60408051600481526024810182526020810180516001600160e01b031663c2eeeebd60e01b179052905160009182916001600160a01b0385169161034491611257565b600060405180830381855afa9150503d806000811461037f576040519150601f19603f3d011682016040523d82523d6000602084013e610384565b606091505b50915091506000821580610399575060208251105b156103a6575060016103d5565b60006103b383600c6109b2565b90508c6001600160a01b0316816001600160a01b0316146103d357600191505b505b8015610403576103f78c308d8c60405180602001604052806000815250610a1a565b5050505050505061046c565b505050610411818888610a9a565b866001600160a01b0316886001600160a01b03168a6001600160a01b03167fc7f2e9c55c40a50fbc217dfc70cd39a222940dfa62145aa0ca49eb9535d4fcb28960405161046091815260200190565b60405180910390a45050505b505050505050565b61047e8282610b01565b5050565b6060610494868686600080888861059f565b9695505050505050565b60006104c87fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b9050336001600160a01b038216146105135760405162461bcd60e51b815260206004820152600e60248201526d2727aa2fa32927a6afa0a226a4a760911b604482015260640161028e565b50565b6060632e567b3660e01b8686868661053060025488610b4e565b604051602401610544959493929190611273565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905095945050505050565b6001600160a01b039081166000908152600360205260409020541690565b606034156105da5760405162461bcd60e51b81526020600482015260086024820152674e4f5f56414c554560c01b604482015260640161028e565b6001546000906060906001600160a01b03163303610606576105fc8585610b7a565b9092509050610643565b33915084848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b8051156106885760405162461bcd60e51b8152602060048201526013602482015272115615149057d110551057d11254d050931151606a1b604482015260640161028e565b6000806106948c610581565b90506001600160a01b0381163b6106e25760405162461bcd60e51b81526020600482015260126024820152711513d2d15397d393d517d111541313d6515160721b604482015260640161028e565b8b6001600160a01b0316816001600160a01b031663c2eeeebd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e91906112b9565b6001600160a01b03161461079c5760405162461bcd60e51b81526020600482015260156024820152742727aa2fa2ac2822a1aa22a22fa618afaa27a5a2a760591b604482015260640161028e565b6107a781858c610b96565b99506107b68c858d8d87610a1a565b915050806040516020016107cc91815260200190565b6040516020818303038152906040529350505050979650505050505050565b600054610809906001600160a01b031661111161111160901b010190565b6001600160a01b0316336001600160a01b0316146108395760405162461bcd60e51b815260040161028e90611225565b60005b8381101561096557828282818110610856576108566112d6565b905060200201602081019061086b9190610fb4565b60036000878785818110610881576108816112d6565b90506020020160208101906108969190610fb4565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b031916929091169190911790558282828181106108d9576108d96112d6565b90506020020160208101906108ee9190610fb4565b6001600160a01b0316858583818110610909576109096112d6565b905060200201602081019061091e9190610fb4565b6001600160a01b03167f0dd664a155dd89526bb019e22b00291bb7ca9d07ba3ec4a1a76b410da9797ceb60405160405180910390a38061095d81611302565b91505061083c565b5050505050565b60608061097b8385018561131b565b909590945092505050565b60006109a48730878660405180602001604052806000815250610a1a565b506001979650505050505050565b60006109bf82601461137e565b83511015610a045760405162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015260640161028e565b5081810160200151600160601b90045b92915050565b60025460009081610a388786610a338b838b848b610516565b610c04565b604080516001600160a01b038b81168252602082018690529181018890529192508291818916918a16907f3073a74ecb728d10be779fe19a74a1428e20468f5b4d167bf9c73d9067847d739060600160405180910390a4979650505050505050565b6040516346154c9f60e11b81526001600160a01b03838116600483015260248201839052841690638c2a993e90604401600060405180830381600087803b158015610ae457600080fd5b505af1158015610af8573d6000803e3d6000fd5b50505050505050565b610b0b8282610c3c565b6001600160a01b03811661047e5760405162461bcd60e51b815260206004820152600a6024820152692120a22fa927aaaa22a960b11b604482015260640161028e565b60608282604051602001610b63929190611391565b604051602081830303815290604052905092915050565b60006060610b8a838501856113aa565b915091505b9250929050565b6040516374f4f54760e01b81526001600160a01b03838116600483015260248201839052600091908516906374f4f54790604401600060405180830381600087803b158015610be457600080fd5b505af1158015610bf8573d6000803e3d6000fd5b50939695505050505050565b6002805460009182610c1583611302565b909155505060008054610c34919086906001600160a01b031685610cfe565b949350505050565b6001600160a01b038216610c885760405162461bcd60e51b81526020600482015260136024820152721253959053125117d0d3d55395115494105495606a1b604482015260640161028e565b6000546001600160a01b031615610cd05760405162461bcd60e51b815260206004820152600c60248201526b1053149150511657d253925560a21b604482015260640161028e565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055565b6040516349460b4d60e11b8152600090819060649063928c169a908890610d2b90889088906004016113ef565b60206040518083038185885af1158015610d49573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d6e9190611413565b905080846001600160a01b0316866001600160a01b03167f2b986d32a0536b7e19baa48ab949fec7b903b7fad7730820b20632d100cc3a6886604051610db49190610f9a565b60405180910390a495945050505050565b6001600160a01b038116811461051357600080fd5b60008083601f840112610dec57600080fd5b5081356001600160401b03811115610e0357600080fd5b602083019150836020828501011115610b8f57600080fd5b60008060008060008060a08789031215610e3457600080fd5b8635610e3f81610dc5565b95506020870135610e4f81610dc5565b94506040870135610e5f81610dc5565b93506060870135925060808701356001600160401b03811115610e8157600080fd5b610e8d89828a01610dda565b979a9699509497509295939492505050565b60008060408385031215610eb257600080fd5b8235610ebd81610dc5565b91506020830135610ecd81610dc5565b809150509250929050565b600080600080600060808688031215610ef057600080fd5b8535610efb81610dc5565b94506020860135610f0b81610dc5565b93506040860135925060608601356001600160401b03811115610f2d57600080fd5b610f3988828901610dda565b969995985093965092949392505050565b60005b83811015610f65578181015183820152602001610f4d565b50506000910152565b60008151808452610f86816020860160208601610f4a565b601f01601f19169290920160200192915050565b602081526000610fad6020830184610f6e565b9392505050565b600060208284031215610fc657600080fd5b8135610fad81610dc5565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610ff857600080fd5b81356001600160401b038082111561101257611012610fd1565b604051601f8301601f19908116603f0116810190828211818310171561103a5761103a610fd1565b8160405283815286602085880101111561105357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561108b57600080fd5b853561109681610dc5565b945060208601356110a681610dc5565b935060408601356110b681610dc5565b92506060860135915060808601356001600160401b038111156110d857600080fd5b6110e488828901610fe7565b9150509295509295909350565b600080600080600080600060c0888a03121561110c57600080fd5b873561111781610dc5565b9650602088013561112781610dc5565b955060408801359450606088013593506080880135925060a08801356001600160401b0381111561115757600080fd5b6111638a828b01610dda565b989b979a50959850939692959293505050565b60008083601f84011261118857600080fd5b5081356001600160401b0381111561119f57600080fd5b6020830191508360208260051b8501011115610b8f57600080fd5b600080600080604085870312156111d057600080fd5b84356001600160401b03808211156111e757600080fd5b6111f388838901611176565b9096509450602087013591508082111561120c57600080fd5b5061121987828801611176565b95989497509550505050565b6020808252601890820152774f4e4c595f434f554e544552504152545f4741544557415960401b604082015260600190565b60008251611269818460208701610f4a565b9190910192915050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a0608082018190526000906112ae90830184610f6e565b979650505050505050565b6000602082840312156112cb57600080fd5b8151610fad81610dc5565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611314576113146112ec565b5060010190565b6000806040838503121561132e57600080fd5b82356001600160401b038082111561134557600080fd5b61135186838701610fe7565b9350602085013591508082111561136757600080fd5b5061137485828601610fe7565b9150509250929050565b80820180821115610a1457610a146112ec565b828152604060208201526000610c346040830184610f6e565b600080604083850312156113bd57600080fd5b82356113c881610dc5565b915060208301356001600160401b038111156113e357600080fd5b61137485828601610fe7565b6001600160a01b0383168152604060208201819052600090610c3490830184610f6e565b60006020828403121561142557600080fd5b505191905056fea2646970667358221220cadbdf7ae66a7419642c39dffd34540b74321557e9b9f3d7e9c9d5d17e6ec23b64736f6c63430008100033",
                "0x",
                "0x",
                "0x6080604052600436106100c75760003560e01c806375b238fc11610074578063a217fddf1161004e578063a217fddf1461026f578063bca8c7b514610284578063d547741f1461029757600080fd5b806375b238fc146101c857806391d14854146101fc578063946d92041461024f57600080fd5b8063248a9ca3116100a5578063248a9ca3146101585780632f2ff15d1461018857806336568abe146101a857600080fd5b806301ffc9a7146100cc57806307bd0265146101015780631cff79cd14610143575b600080fd5b3480156100d857600080fd5b506100ec6100e736600461128f565b6102b7565b60405190151581526020015b60405180910390f35b34801561010d57600080fd5b506101357fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e6381565b6040519081526020016100f8565b610156610151366004611378565b610350565b005b34801561016457600080fd5b5061013561017336600461143c565b60009081526065602052604090206001015490565b34801561019457600080fd5b506101566101a3366004611455565b610489565b3480156101b457600080fd5b506101566101c3366004611455565b6104b3565b3480156101d457600080fd5b506101357fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b34801561020857600080fd5b506100ec610217366004611455565b600091825260656020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b34801561025b57600080fd5b5061015661026a366004611481565b610566565b34801561027b57600080fd5b50610135600081565b610156610292366004611378565b610874565b3480156102a357600080fd5b506101566102b2366004611455565b610998565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061034a57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b7fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e6361037a816109bd565b6002609754036103eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260978190555061042e826040518060600160405280603a81526020016117cd603a913973ffffffffffffffffffffffffffffffffffffffff861691906109ca565b508273ffffffffffffffffffffffffffffffffffffffff167f49f6851d1cd01a518db5bdea5cffbbe90276baa2595f74250b7472b96806302e34846040516104779291906115af565b60405180910390a25050600160975550565b6000828152606560205260409020600101546104a4816109bd565b6104ae8383610af4565b505050565b73ffffffffffffffffffffffffffffffffffffffff81163314610558576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084016103e2565b6105628282610be8565b5050565b600054610100900460ff16158080156105865750600054600160ff909116105b806105a05750303b1580156105a0575060005460ff166001145b61062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103e2565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561068a57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b73ffffffffffffffffffffffffffffffffffffffff8316610707576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f557067726164654578656375746f723a207a65726f2061646d696e000000000060448201526064016103e2565b61070f610ca3565b6107397fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177580610d3c565b6107837fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e637fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610d3c565b6107ad7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177584610d87565b60005b825181101561080c576107fc7fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e638483815181106107ef576107ef6115d0565b6020026020010151610d87565b6108058161162e565b90506107b0565b5080156104ae57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b7fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e6361089e816109bd565b60026097540361090a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103e2565b600260978190555061094f823460405180606001604052806031815260200161179c6031913973ffffffffffffffffffffffffffffffffffffffff8716929190610d91565b508273ffffffffffffffffffffffffffffffffffffffff167f4d7dbdcc249630ec373f584267f10abf44938de920c32562f5aee93959c2525834846040516104779291906115af565b6000828152606560205260409020600101546109b3816109bd565b6104ae8383610be8565b6109c78133610f27565b50565b606073ffffffffffffffffffffffffffffffffffffffff84163b610a70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084016103e2565b6000808573ffffffffffffffffffffffffffffffffffffffff1685604051610a989190611666565b600060405180830381855af49150503d8060008114610ad3576040519150601f19603f3d011682016040523d82523d6000602084013e610ad8565b606091505b5091509150610ae8828286610ff9565b925050505b9392505050565b600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1661056257600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610b8a3390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff161561056257600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff16610d3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103e2565b565b600082815260656020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6105628282610af4565b606082471015610e23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103e2565b73ffffffffffffffffffffffffffffffffffffffff85163b610ea1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103e2565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610eca9190611666565b60006040518083038185875af1925050503d8060008114610f07576040519150601f19603f3d011682016040523d82523d6000602084013e610f0c565b606091505b5091509150610f1c828286610ff9565b979650505050505050565b600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1661056257610f7f8173ffffffffffffffffffffffffffffffffffffffff16601461104c565b610f8a83602061104c565b604051602001610f9b929190611682565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526103e291600401611703565b60608315611008575081610aed565b8251156110185782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e29190611703565b6060600061105b836002611716565b611066906002611753565b67ffffffffffffffff81111561107e5761107e6112fa565b6040519080825280601f01601f1916602001820160405280156110a8576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106110df576110df6115d0565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611142576111426115d0565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600061117e846002611716565b611189906001611753565b90505b6001811115611226577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106111ca576111ca6115d0565b1a60f81b8282815181106111e0576111e06115d0565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361121f81611766565b905061118c565b508315610aed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103e2565b6000602082840312156112a157600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610aed57600080fd5b803573ffffffffffffffffffffffffffffffffffffffff811681146112f557600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611370576113706112fa565b604052919050565b6000806040838503121561138b57600080fd5b611394836112d1565b915060208084013567ffffffffffffffff808211156113b257600080fd5b818601915086601f8301126113c657600080fd5b8135818111156113d8576113d86112fa565b611408847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611329565b9150808252878482850101111561141e57600080fd5b80848401858401376000848284010152508093505050509250929050565b60006020828403121561144e57600080fd5b5035919050565b6000806040838503121561146857600080fd5b82359150611478602084016112d1565b90509250929050565b6000806040838503121561149457600080fd5b61149d836112d1565b915060208084013567ffffffffffffffff808211156114bb57600080fd5b818601915086601f8301126114cf57600080fd5b8135818111156114e1576114e16112fa565b8060051b91506114f2848301611329565b818152918301840191848101908984111561150c57600080fd5b938501935b8385101561153157611522856112d1565b82529385019390850190611511565b8096505050505050509250929050565b60005b8381101561155c578181015183820152602001611544565b50506000910152565b6000815180845261157d816020860160208601611541565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b8281526040602082015260006115c86040830184611565565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361165f5761165f6115ff565b5060010190565b60008251611678818460208701611541565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516116ba816017850160208801611541565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516116f7816028840160208801611541565b01602801949350505050565b602081526000610aed6020830184611565565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561174e5761174e6115ff565b500290565b8082018082111561034a5761034a6115ff565b600081611775576117756115ff565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fe557067726164654578656375746f723a20696e6e65722063616c6c206661696c656420776974686f757420726561736f6e557067726164654578656375746f723a20696e6e65722064656c65676174652063616c6c206661696c656420776974686f757420726561736f6ea26469706673582212202dd5382fdba08a29cf28575cf947a054897172a386b7932a48f84af2cd16c35c64736f6c63430008100033",
                "0x608060405234801561001057600080fd5b50600436106100ca5760003560e01c806372425d9d1161007c57806372425d9d1461017257806386d516e814610178578063a8b0574e1461017e578063b9b3efe91461018c578063bce38bd714610192578063c3077fa9146101a5578063ee82ac5e146101b857600080fd5b80630f28c97d146100cf578063252dba42146100e457806327e86d6e146101055780632935cd901461010d578063399542e91461012d57806342cbb15c1461014f5780634d2301cc14610157575b600080fd5b425b6040519081526020015b60405180910390f35b6100f76100f23660046109b4565b6101ca565b6040516100db929190610a40565b6100d16103b5565b61012061011b366004610aaa565b6103c8565b6040516100db9190610b69565b61014061013b366004610aaa565b610569565b6040516100db93929190610b83565b6100d16105ea565b6100d1610165366004610bab565b6001600160a01b03163190565b446100d1565b456100d1565b6040514181526020016100db565b436100d1565b6101206101a0366004610aaa565b610654565b6101406101b33660046109b4565b6107d3565b6100d16101c6366004610bc6565b4090565b6000606060646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561020d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102319190610bdf565b915082516001600160401b0381111561024c5761024c6107f0565b60405190808252806020026020018201604052801561027f57816020015b606081526020019060019003908161026a5790505b50905060005b83518110156103af576000808583815181106102a3576102a3610bf8565b6020026020010151600001516001600160a01b03168684815181106102ca576102ca610bf8565b6020026020010151602001516040516102e39190610c0e565b6000604051808303816000865af19150503d8060008114610320576040519150601f19603f3d011682016040523d82523d6000602084013e610325565b606091505b50915091508161037c5760405162461bcd60e51b815260206004820181905260248201527f4d756c746963616c6c206167677265676174653a2063616c6c206661696c656460448201526064015b60405180910390fd5b8084848151811061038f5761038f610bf8565b6020026020010181905250505080806103a790610c40565b915050610285565b50915091565b60006103c2600143610c59565b40905090565b606081516001600160401b038111156103e3576103e36107f0565b60405190808252806020026020018201604052801561042957816020015b6040805180820190915260008152606060208201528152602001906001900390816104015790505b509050600082515a61043b9190610c72565b905060005b83518110156105615760008085838151811061045e5761045e610bf8565b6020026020010151600001516001600160a01b0316845a11610480575a610482565b845b87858151811061049457610494610bf8565b6020026020010151602001516040516104ad9190610c0e565b60006040518083038160008787f1925050503d80600081146104eb576040519150601f19603f3d011682016040523d82523d6000602084013e6104f0565b606091505b5091509150861561051857816105185760405162461bcd60e51b815260040161037390610c94565b604051806040016040528083151581526020018281525085848151811061054157610541610bf8565b60200260200101819052505050808061055990610c40565b915050610440565b505092915050565b600080606060646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190610bdf565b9250434091506105e18585610654565b90509250925092565b600060646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f9190610bdf565b905090565b606081516001600160401b0381111561066f5761066f6107f0565b6040519080825280602002602001820160405280156106b557816020015b60408051808201909152600081526060602082015281526020019060019003908161068d5790505b50905060005b82518110156107cc576000808483815181106106d9576106d9610bf8565b6020026020010151600001516001600160a01b031685848151811061070057610700610bf8565b6020026020010151602001516040516107199190610c0e565b6000604051808303816000865af19150503d8060008114610756576040519150601f19603f3d011682016040523d82523d6000602084013e61075b565b606091505b5091509150851561078357816107835760405162461bcd60e51b815260040161037390610c94565b60405180604001604052808315158152602001828152508484815181106107ac576107ac610bf8565b6020026020010181905250505080806107c490610c40565b9150506106bb565b5092915050565b60008060606107e3600185610569565b9196909550909350915050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715610828576108286107f0565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610856576108566107f0565b604052919050565b80356001600160a01b038116811461087557600080fd5b919050565b6000601f838184011261088c57600080fd5b823560206001600160401b03808311156108a8576108a86107f0565b8260051b6108b783820161082e565b93845286810183019383810190898611156108d157600080fd5b84890192505b858310156109a7578235848111156108ef5760008081fd5b89016040601f19828d0381018213156109085760008081fd5b610910610806565b61091b89850161085e565b8152828401358881111561092f5760008081fd5b8085019450508d603f8501126109455760008081fd5b8884013588811115610959576109596107f0565b6109688a848e8401160161082e565b92508083528e8482870101111561097f5760008081fd5b808486018b85013760009083018a0152808901919091528452505091840191908401906108d7565b9998505050505050505050565b6000602082840312156109c657600080fd5b81356001600160401b038111156109dc57600080fd5b6109e88482850161087a565b949350505050565b60005b83811015610a0b5781810151838201526020016109f3565b50506000910152565b60008151808452610a2c8160208601602086016109f0565b601f01601f19169290920160200192915050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b82811015610a9c57605f19888703018452610a8a868351610a14565b95509284019290840190600101610a6e565b509398975050505050505050565b60008060408385031215610abd57600080fd5b82358015158114610acd57600080fd5b915060208301356001600160401b03811115610ae857600080fd5b610af48582860161087a565b9150509250929050565b600081518084526020808501808196508360051b8101915082860160005b85811015610b5c57828403895281518051151585528501516040868601819052610b4881870183610a14565b9a87019a9550505090840190600101610b1c565b5091979650505050505050565b602081526000610b7c6020830184610afe565b9392505050565b838152826020820152606060408201526000610ba26060830184610afe565b95945050505050565b600060208284031215610bbd57600080fd5b610b7c8261085e565b600060208284031215610bd857600080fd5b5035919050565b600060208284031215610bf157600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60008251610c208184602087016109f0565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b600060018201610c5257610c52610c2a565b5060010190565b81810381811115610c6c57610c6c610c2a565b92915050565b600082610c8f57634e487b7160e01b600052601260045260246000fd5b500490565b60208082526021908201527f4d756c746963616c6c32206167677265676174653a2063616c6c206661696c656040820152601960fa1b60608201526080019056fea2646970667358221220bc091e5cf591ffd673588c323f7783506e10657524ff45e818c24d18e1b786be64736f6c63430008100033"
              ]
            },
            {
              "name": "l1Router",
              "type": "address",
              "value": "0x962170D0A0D123061D8A8D344eEB5664aa62C407"
            },
            {
              "name": "l1StandardGateway",
              "type": "address",
              "value": "0xd16E8b904BE8Db6FaB0C375c4eeA5BCDC6dcAa91"
            },
            {
              "name": "l1CustomGateway",
              "type": "address",
              "value": "0x4FdD213c3c866b8C0f35a0c6280D2146D10648Bd"
            },
            {
              "name": "l1WethGateway",
              "type": "address",
              "value": "0x0000000000000000000000000000000000000000"
            },
            {
              "name": "l1Weth",
              "type": "address",
              "value": "0x0000000000000000000000000000000000000000"
            },
            {
              "name": "l2StandardGatewayCanonicalAddress",
              "type": "address",
              "value": "0x2a5302C754f0DcDe224Cd26F887b9B976CBeD972"
            },
            {
              "name": "rollupOwner",
              "type": "address",
              "value": "0xF46B08D9E85df74b6f24Ad85A6a655c02857D5b8"
            },
            {
              "name": "aliasedL1UpgradeExecutor",
              "type": "address",
              "value": "0xf294a343241677fEC779692c87844194150ba7bd"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-05-08T06:59:29.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 10,
        "has_error_in_internal_transactions": false
      }
    ],
    "next_page_params": null
  },
  "https://edu-chain-testnet.blockscout.com/api/v2/blocks?type=block": {
    "items": [
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "389621150000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999307893805,
        "gas_used": "38962115",
        "gas_used_percentage": 3.4605309728874545e-06,
        "hash": "0x4114cfcc21eabbd4349595d9efa506de67dcfecbcc539aa7af6825742ed862bf",
        "height": 26422319,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x3fafb96a8bdbbc026e1044767432799f2d11eb5192c3d68d553af26fd8d91f52",
        "priority_fee": "3896250462115000",
        "rewards": [],
        "size": 2420,
        "timestamp": "2024-12-29T16:28:44.000000Z",
        "total_difficulty": "26422320",
        "transaction_count": 4,
        "transaction_fees": "389621150000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "78035550000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999861381016,
        "gas_used": "7803555",
        "gas_used_percentage": 6.930949147943011e-07,
        "hash": "0x3fafb96a8bdbbc026e1044767432799f2d11eb5192c3d68d553af26fd8d91f52",
        "height": 26422318,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x23a25dd61b7e9ed498b61c121afecd5b10f5b11f2895804660a2ae6000a16e39",
        "priority_fee": "780363303555000",
        "rewards": [],
        "size": 887,
        "timestamp": "2024-12-29T16:28:44.000000Z",
        "total_difficulty": "26422319",
        "transaction_count": 2,
        "transaction_fees": "78035550000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "155984660000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999722915582,
        "gas_used": "15598466",
        "gas_used_percentage": 1.3854220881626134e-06,
        "hash": "0x23a25dd61b7e9ed498b61c121afecd5b10f5b11f2895804660a2ae6000a16e39",
        "height": 26422317,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xc9456e915e1e0cbd0e95f0e2331fecb1b96c6a3a0a17801d52c1b759d213bb63",
        "priority_fee": "1559862198466000",
        "rewards": [],
        "size": 1072,
        "timestamp": "2024-12-29T16:28:44.000000Z",
        "total_difficulty": "26422318",
        "transaction_count": 3,
        "transaction_fees": "155984660000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "79018500000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999859634947,
        "gas_used": "7901850",
        "gas_used_percentage": 7.018252645707435e-07,
        "hash": "0xc9456e915e1e0cbd0e95f0e2331fecb1b96c6a3a0a17801d52c1b759d213bb63",
        "height": 26422316,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xc93653168baa4effb6094ff50f141363b413d88ef338e04695a9c7fdbb06f68d",
        "priority_fee": "790192901850000",
        "rewards": [],
        "size": 887,
        "timestamp": "2024-12-29T16:28:43.000000Z",
        "total_difficulty": "26422317",
        "transaction_count": 2,
        "transaction_fees": "79018500000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "78875500000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999859888966,
        "gas_used": "7887550",
        "gas_used_percentage": 7.005551694305723e-07,
        "hash": "0xc93653168baa4effb6094ff50f141363b413d88ef338e04695a9c7fdbb06f68d",
        "height": 26422315,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x7f706737b71a4b04179995341c4d86f65290d64453679aebf768829977268e6e",
        "priority_fee": "788762887550000",
        "rewards": [],
        "size": 887,
        "timestamp": "2024-12-29T16:28:43.000000Z",
        "total_difficulty": "26422316",
        "transaction_count": 2,
        "transaction_fees": "78875500000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "156199980000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999722533097,
        "gas_used": "15619998",
        "gas_used_percentage": 1.3873345139359117e-06,
        "hash": "0x7f706737b71a4b04179995341c4d86f65290d64453679aebf768829977268e6e",
        "height": 26422314,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xdd7153b41c202c6dea3d21b4e4b31ec8c55e0a1ae8a0ee204ce6eee29f643a93",
        "priority_fee": "1562015419998000",
        "rewards": [],
        "size": 1074,
        "timestamp": "2024-12-29T16:28:43.000000Z",
        "total_difficulty": "26422315",
        "transaction_count": 3,
        "transaction_fees": "156199980000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "233519010000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999585186909,
        "gas_used": "23351901",
        "gas_used_percentage": 2.0740654527173774e-06,
        "hash": "0xdd7153b41c202c6dea3d21b4e4b31ec8c55e0a1ae8a0ee204ce6eee29f643a93",
        "height": 26422313,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x6a2463936e3d9105759c6d1af4a48c076e0830db0c270a033bf1d0a3bab17870",
        "priority_fee": "2335213451901000",
        "rewards": [],
        "size": 1660,
        "timestamp": "2024-12-29T16:28:43.000000Z",
        "total_difficulty": "26422314",
        "transaction_count": 3,
        "transaction_fees": "233519010000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "170513030000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999697108014,
        "gas_used": "17051303",
        "gas_used_percentage": 1.5144599352368004e-06,
        "hash": "0x6a2463936e3d9105759c6d1af4a48c076e0830db0c270a033bf1d0a3bab17870",
        "height": 26422312,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x44b95662f1625bee857bb3b84e40a8c34b4c29cedd824c584085d062e6b34824",
        "priority_fee": "1705147351303000",
        "rewards": [],
        "size": 1113,
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "total_difficulty": "26422313",
        "transaction_count": 3,
        "transaction_fees": "170513030000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "143664410000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999744800743,
        "gas_used": "14366441",
        "gas_used_percentage": 1.2759962864095087e-06,
        "hash": "0x44b95662f1625bee857bb3b84e40a8c34b4c29cedd824c584085d062e6b34824",
        "height": 26422311,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x52383610c19cc999b4201b9374af0074ec995de9ee173ca51eb34565cd7ba7d0",
        "priority_fee": "1292979690000000",
        "rewards": [],
        "size": 1438,
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "total_difficulty": "26422312",
        "transaction_count": 2,
        "transaction_fees": "143664410000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91395190000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837649528,
        "gas_used": "9139519",
        "gas_used_percentage": 8.117523542239269e-07,
        "hash": "0x52383610c19cc999b4201b9374af0074ec995de9ee173ca51eb34565cd7ba7d0",
        "height": 26422310,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x303329b4c9f551bbff24281e7e212cc082245a2d2826b017722bf8150965097c",
        "priority_fee": "913961039519000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "total_difficulty": "26422311",
        "transaction_count": 2,
        "transaction_fees": "91395190000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "64048800000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999886226476,
        "gas_used": "6404880",
        "gas_used_percentage": 5.688676196768938e-07,
        "hash": "0x303329b4c9f551bbff24281e7e212cc082245a2d2826b017722bf8150965097c",
        "height": 26422309,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x278f400d2e601827005c33870277a97af387eab73c9a47906942eaaead683082",
        "priority_fee": "640494404880000",
        "rewards": [],
        "size": 853,
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "total_difficulty": "26422310",
        "transaction_count": 2,
        "transaction_fees": "64048800000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "67161910000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999880696483,
        "gas_used": "6716191",
        "gas_used_percentage": 5.965175908784204e-07,
        "hash": "0x278f400d2e601827005c33870277a97af387eab73c9a47906942eaaead683082",
        "height": 26422308,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x9b6b26c6d468eea6be48eb3e2a3b6d24aad37487156a5885cd88979cc6a51060",
        "priority_fee": "671625816191000",
        "rewards": [],
        "size": 860,
        "timestamp": "2024-12-29T16:28:42.000000Z",
        "total_difficulty": "26422309",
        "transaction_count": 2,
        "transaction_fees": "67161910000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "141536690000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999748580333,
        "gas_used": "14153669",
        "gas_used_percentage": 1.2570983365378652e-06,
        "hash": "0x9b6b26c6d468eea6be48eb3e2a3b6d24aad37487156a5885cd88979cc6a51060",
        "height": 26422307,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x89431a6c67dd700ca0a9edd9a3cbcdbdb072767f69617143ba71d555288f6483",
        "priority_fee": "1415381053669000",
        "rewards": [],
        "size": 1440,
        "timestamp": "2024-12-29T16:28:41.000000Z",
        "total_difficulty": "26422308",
        "transaction_count": 2,
        "transaction_fees": "141536690000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "237057560000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999578901182,
        "gas_used": "23705756",
        "gas_used_percentage": 2.105494090187676e-06,
        "hash": "0x89431a6c67dd700ca0a9edd9a3cbcdbdb072767f69617143ba71d555288f6483",
        "height": 26422306,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xfe567da8d91b09d1d3e6c168f1eff92de84a227e57ac4c6c9ce94032a6c9f91e",
        "priority_fee": "17742304900876000",
        "rewards": [],
        "size": 1266,
        "timestamp": "2024-12-29T16:28:41.000000Z",
        "total_difficulty": "26422307",
        "transaction_count": 4,
        "transaction_fees": "237057560000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "156126900000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999722662913,
        "gas_used": "15612690",
        "gas_used_percentage": 1.3866854331467948e-06,
        "hash": "0xfe567da8d91b09d1d3e6c168f1eff92de84a227e57ac4c6c9ce94032a6c9f91e",
        "height": 26422305,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x6740787d54f466f83c07a52f33b6fa9b0fc4c54bbb2d5de90990dbae240cdbc1",
        "priority_fee": "1561284612690000",
        "rewards": [],
        "size": 1074,
        "timestamp": "2024-12-29T16:28:41.000000Z",
        "total_difficulty": "26422306",
        "transaction_count": 3,
        "transaction_fees": "156126900000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "357033640000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999365780852,
        "gas_used": "35703364",
        "gas_used_percentage": 3.171095741549834e-06,
        "hash": "0x6740787d54f466f83c07a52f33b6fa9b0fc4c54bbb2d5de90990dbae240cdbc1",
        "height": 26422304,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xeac175d52a6af6fad158babf193ba433c805fd659621b222327aa58c1c843a32",
        "priority_fee": "2149547495260000",
        "rewards": [],
        "size": 2317,
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "total_difficulty": "26422305",
        "transaction_count": 4,
        "transaction_fees": "357033640000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "78081610000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999861299199,
        "gas_used": "7808161",
        "gas_used_percentage": 6.93504009774415e-07,
        "hash": "0xeac175d52a6af6fad158babf193ba433c805fd659621b222327aa58c1c843a32",
        "height": 26422303,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x2b4f09775416effb230f73d442ebd9a09daded5f1b8743dc80cd4155b747a630",
        "priority_fee": "780823908161000",
        "rewards": [],
        "size": 887,
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "total_difficulty": "26422304",
        "transaction_count": 2,
        "transaction_fees": "78081610000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "94533830000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999832074185,
        "gas_used": "9453383",
        "gas_used_percentage": 8.396290773760029e-07,
        "hash": "0x2b4f09775416effb230f73d442ebd9a09daded5f1b8743dc80cd4155b747a630",
        "height": 26422302,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xd2a7471640b346b2d40622cd961b68c229bb13d8744920abe1ace5d9a70b71ff",
        "priority_fee": "945347753383000",
        "rewards": [],
        "size": 925,
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "total_difficulty": "26422303",
        "transaction_count": 2,
        "transaction_fees": "94533830000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "78087690000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999861288399,
        "gas_used": "7808769",
        "gas_used_percentage": 6.935580110223327e-07,
        "hash": "0xd2a7471640b346b2d40622cd961b68c229bb13d8744920abe1ace5d9a70b71ff",
        "height": 26422301,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xb0475ed828f5de22ac32af9c9929e46cfce1a46f8e11af7701c9abd9ec5e8c15",
        "priority_fee": "780884708769000",
        "rewards": [],
        "size": 887,
        "timestamp": "2024-12-29T16:28:40.000000Z",
        "total_difficulty": "26422302",
        "transaction_count": 2,
        "transaction_fees": "78087690000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "92434580000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999835803202,
        "gas_used": "9243458",
        "gas_used_percentage": 8.20983991900448e-07,
        "hash": "0xb0475ed828f5de22ac32af9c9929e46cfce1a46f8e11af7701c9abd9ec5e8c15",
        "height": 26422300,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x3d82ceeb28fd17113b95560e0ae19a81681d48d7dbe2268ab886af2b3adb8693",
        "priority_fee": "924355043458000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:39.000000Z",
        "total_difficulty": "26422301",
        "transaction_count": 2,
        "transaction_fees": "92434580000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "169537370000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999698841133,
        "gas_used": "16953737",
        "gas_used_percentage": 1.5057943336671542e-06,
        "hash": "0x3d82ceeb28fd17113b95560e0ae19a81681d48d7dbe2268ab886af2b3adb8693",
        "height": 26422299,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xd905c6a235ec4911b267d8cadf5ee9324503e77b59d89fc21372de1fa1f482a6",
        "priority_fee": "1695390653737000",
        "rewards": [],
        "size": 1107,
        "timestamp": "2024-12-29T16:28:39.000000Z",
        "total_difficulty": "26422300",
        "transaction_count": 3,
        "transaction_fees": "169537370000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91378800000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837678644,
        "gas_used": "9137880",
        "gas_used_percentage": 8.11606781780938e-07,
        "hash": "0xd905c6a235ec4911b267d8cadf5ee9324503e77b59d89fc21372de1fa1f482a6",
        "height": 26422298,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x76a0cddbcef30e46292b6a9fadfdf6e85516f65a79a52970aa99254bb57cdea0",
        "priority_fee": "913797137880000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:39.000000Z",
        "total_difficulty": "26422299",
        "transaction_count": 2,
        "transaction_fees": "91378800000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91313350000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837794905,
        "gas_used": "9131335",
        "gas_used_percentage": 8.110254690052443e-07,
        "hash": "0x76a0cddbcef30e46292b6a9fadfdf6e85516f65a79a52970aa99254bb57cdea0",
        "height": 26422297,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xf14171baa592d58be3a12653a0e537b56d72038183b610c8c582582b9b3ee7bd",
        "priority_fee": "913142631335000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:39.000000Z",
        "total_difficulty": "26422298",
        "transaction_count": 2,
        "transaction_fees": "91313350000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "94953060000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999831329482,
        "gas_used": "9495306",
        "gas_used_percentage": 8.433525877649117e-07,
        "hash": "0xf14171baa592d58be3a12653a0e537b56d72038183b610c8c582582b9b3ee7bd",
        "height": 26422296,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xb7c22f951b22652e6401b3ba764a3225f7ffdab0dfe4e999faa3d016ee2de9b7",
        "priority_fee": "949540095306000",
        "rewards": [],
        "size": 925,
        "timestamp": "2024-12-29T16:28:39.000000Z",
        "total_difficulty": "26422297",
        "transaction_count": 2,
        "transaction_fees": "94953060000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91703350000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837102128,
        "gas_used": "9170335",
        "gas_used_percentage": 8.144893648420748e-07,
        "hash": "0xb7c22f951b22652e6401b3ba764a3225f7ffdab0dfe4e999faa3d016ee2de9b7",
        "height": 26422295,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xaed0efdc681b6b6811fbc42c9a3c798822caf9c35a0f2b2da9fefc30dbf681bd",
        "priority_fee": "917042670335000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:38.000000Z",
        "total_difficulty": "26422296",
        "transaction_count": 2,
        "transaction_fees": "91703350000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "143739720000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999744666965,
        "gas_used": "14373972",
        "gas_used_percentage": 1.2766651735773848e-06,
        "hash": "0xaed0efdc681b6b6811fbc42c9a3c798822caf9c35a0f2b2da9fefc30dbf681bd",
        "height": 26422294,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x027127b7b2c169ab96520368fbe9443b7ebe855bf759b6f08f5fd33a50d4dfc7",
        "priority_fee": "1437411573972000",
        "rewards": [],
        "size": 1434,
        "timestamp": "2024-12-29T16:28:38.000000Z",
        "total_difficulty": "26422295",
        "transaction_count": 2,
        "transaction_fees": "143739720000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91655350000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837187391,
        "gas_used": "9165535",
        "gas_used_percentage": 8.140630392006187e-07,
        "hash": "0x027127b7b2c169ab96520368fbe9443b7ebe855bf759b6f08f5fd33a50d4dfc7",
        "height": 26422293,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x71e8f071f0ed71d89d4ea2995007731a32acb454945974ddfd3220c1937672bf",
        "priority_fee": "916562665535000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:38.000000Z",
        "total_difficulty": "26422294",
        "transaction_count": 2,
        "transaction_fees": "91655350000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "182007400000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.9999967668991,
        "gas_used": "18200740",
        "gas_used_percentage": 1.6165504490572857e-06,
        "hash": "0x71e8f071f0ed71d89d4ea2995007731a32acb454945974ddfd3220c1937672bf",
        "height": 26422292,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x04280cd95e7846e0533dc2c4de8996f0dbaa512d7d5f5526c2be75374b38787d",
        "priority_fee": "1730099062326000",
        "rewards": [],
        "size": 1136,
        "timestamp": "2024-12-29T16:28:37.000000Z",
        "total_difficulty": "26422293",
        "transaction_count": 3,
        "transaction_fees": "182007400000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91935860000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999836689106,
        "gas_used": "9193586",
        "gas_used_percentage": 8.165544684857196e-07,
        "hash": "0x04280cd95e7846e0533dc2c4de8996f0dbaa512d7d5f5526c2be75374b38787d",
        "height": 26422291,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x55aab754aaabff4bd65c18f810ed0b3b021a2f675b909916ac120cf7ba8dd432",
        "priority_fee": "919367793586000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:37.000000Z",
        "total_difficulty": "26422292",
        "transaction_count": 2,
        "transaction_fees": "91935860000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91217860000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.9999983796453,
        "gas_used": "9121786",
        "gas_used_percentage": 8.101773474322727e-07,
        "hash": "0x55aab754aaabff4bd65c18f810ed0b3b021a2f675b909916ac120cf7ba8dd432",
        "height": 26422290,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xe72becdca62fb24977db78446e8919051a1f0de235ac3ee15618f7f8c44e996b",
        "priority_fee": "912187721786000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:37.000000Z",
        "total_difficulty": "26422291",
        "transaction_count": 2,
        "transaction_fees": "91217860000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "169443360000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999699008129,
        "gas_used": "16944336",
        "gas_used_percentage": 1.5049593571347941e-06,
        "hash": "0xe72becdca62fb24977db78446e8919051a1f0de235ac3ee15618f7f8c44e996b",
        "height": 26422289,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x28d4dd1643e84dc2349e2426f8eab6bc69790b53861e610024c2bf435d157701",
        "priority_fee": "1694450544336000",
        "rewards": [],
        "size": 1107,
        "timestamp": "2024-12-29T16:28:37.000000Z",
        "total_difficulty": "26422290",
        "transaction_count": 3,
        "transaction_fees": "169443360000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "423656010000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.9999924743575,
        "gas_used": "42365601",
        "gas_used_percentage": 3.7628212545826045e-06,
        "hash": "0x28d4dd1643e84dc2349e2426f8eab6bc69790b53861e610024c2bf435d157701",
        "height": 26422288,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xaafe440ff065cb51e377ba95755a71c0b5dcafbc43a5887f3c4c24158d02033d",
        "priority_fee": "4236602465601000",
        "rewards": [],
        "size": 2104,
        "timestamp": "2024-12-29T16:28:36.000000Z",
        "total_difficulty": "26422289",
        "transaction_count": 5,
        "transaction_fees": "423656010000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91351270000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837727547,
        "gas_used": "9135127",
        "gas_used_percentage": 8.113622662619946e-07,
        "hash": "0xaafe440ff065cb51e377ba95755a71c0b5dcafbc43a5887f3c4c24158d02033d",
        "height": 26422287,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xb45179f9350299a768228f820b001d5299db60de269a871cb8e4ade9d746e4ed",
        "priority_fee": "913521835127000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:36.000000Z",
        "total_difficulty": "26422288",
        "transaction_count": 2,
        "transaction_fees": "91351270000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91351270000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837727547,
        "gas_used": "9135127",
        "gas_used_percentage": 8.113622662619946e-07,
        "hash": "0xb45179f9350299a768228f820b001d5299db60de269a871cb8e4ade9d746e4ed",
        "height": 26422286,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x99a4ab7cf4d16934290a771013d289593bd386ccec01f4fa419cbe4f8bbc16a1",
        "priority_fee": "913521835127000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:36.000000Z",
        "total_difficulty": "26422287",
        "transaction_count": 2,
        "transaction_fees": "91351270000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "78036090000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999861380059,
        "gas_used": "7803609",
        "gas_used_percentage": 6.930997109577675e-07,
        "hash": "0x99a4ab7cf4d16934290a771013d289593bd386ccec01f4fa419cbe4f8bbc16a1",
        "height": 26422285,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x43dd3b6beb20c6edded2277ba9f3d49044e0b4feeda0b48ffa51ef191c077ce0",
        "priority_fee": "780368703609000",
        "rewards": [],
        "size": 887,
        "timestamp": "2024-12-29T16:28:36.000000Z",
        "total_difficulty": "26422286",
        "transaction_count": 2,
        "transaction_fees": "78036090000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "89161780000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999841616862,
        "gas_used": "8916178",
        "gas_used_percentage": 7.919156885805023e-07,
        "hash": "0x43dd3b6beb20c6edded2277ba9f3d49044e0b4feeda0b48ffa51ef191c077ce0",
        "height": 26422284,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x0b0eb9db7ba36cbb71b0ab37eed2dcc442498fb1eb656bb2c0b5de89c2b3745e",
        "priority_fee": "0",
        "rewards": [],
        "size": 914,
        "timestamp": "2024-12-29T16:28:35.000000Z",
        "total_difficulty": "26422285",
        "transaction_count": 2,
        "transaction_fees": "89161780000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "245447720000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999563997264,
        "gas_used": "24544772",
        "gas_used_percentage": 2.1800136806859882e-06,
        "hash": "0x0b0eb9db7ba36cbb71b0ab37eed2dcc442498fb1eb656bb2c0b5de89c2b3745e",
        "height": 26422283,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x98722fbe0971fad488cfc7e00ebfff3e6665080df32808e407f504d39516ef0a",
        "priority_fee": "1561560215446000",
        "rewards": [],
        "size": 1289,
        "timestamp": "2024-12-29T16:28:35.000000Z",
        "total_difficulty": "26422284",
        "transaction_count": 4,
        "transaction_fees": "245447720000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91218340000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999837963678,
        "gas_used": "9121834",
        "gas_used_percentage": 8.101816106886872e-07,
        "hash": "0x98722fbe0971fad488cfc7e00ebfff3e6665080df32808e407f504d39516ef0a",
        "height": 26422282,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x227ee1f6b18a8ebe237ef947c8a91032e3a51ac78965c590188b8dd9f3575faa",
        "priority_fee": "912192521834000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:35.000000Z",
        "total_difficulty": "26422283",
        "transaction_count": 2,
        "transaction_fees": "91218340000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "143012410000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999745958928,
        "gas_used": "14301241",
        "gas_used_percentage": 1.2702053631130639e-06,
        "hash": "0x227ee1f6b18a8ebe237ef947c8a91032e3a51ac78965c590188b8dd9f3575faa",
        "height": 26422281,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x18e4b633ebc758160bcbb001cae8f35e2f4c41a4e00b2c721f9a2b00c37278e2",
        "priority_fee": "1287111690000000",
        "rewards": [],
        "size": 1438,
        "timestamp": "2024-12-29T16:28:35.000000Z",
        "total_difficulty": "26422282",
        "transaction_count": 2,
        "transaction_fees": "143012410000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "262455660000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999533785093,
        "gas_used": "26245566",
        "gas_used_percentage": 2.3310745334015337e-06,
        "hash": "0x18e4b633ebc758160bcbb001cae8f35e2f4c41a4e00b2c721f9a2b00c37278e2",
        "height": 26422280,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xd0a9c4adc9f22018a903bde756ab1e7ee89aaa6936f079cf53a7e031fbc30c51",
        "priority_fee": "2624582845566000",
        "rewards": [],
        "size": 1326,
        "timestamp": "2024-12-29T16:28:34.000000Z",
        "total_difficulty": "26422281",
        "transaction_count": 4,
        "transaction_fees": "262455660000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "208177440000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.9999963020258,
        "gas_used": "20817744",
        "gas_used_percentage": 1.8489870967641764e-06,
        "hash": "0xd0a9c4adc9f22018a903bde756ab1e7ee89aaa6936f079cf53a7e031fbc30c51",
        "height": 26422279,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x2a40158250cb611bab382c2bda8fbde158fa426aa8aaa7be582c0ba467517467",
        "priority_fee": "2081795217744000",
        "rewards": [],
        "size": 1588,
        "timestamp": "2024-12-29T16:28:34.000000Z",
        "total_difficulty": "26422280",
        "transaction_count": 3,
        "transaction_fees": "208177440000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "289382360000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999485953666,
        "gas_used": "28938236",
        "gas_used_percentage": 2.5702316719389273e-06,
        "hash": "0x2a40158250cb611bab382c2bda8fbde158fa426aa8aaa7be582c0ba467517467",
        "height": 26422278,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x4a636edaa84e8941540fe07f27c5dcb021a115b66306802b05bce730ecdd0f04",
        "priority_fee": "1452453724392000",
        "rewards": [],
        "size": 1770,
        "timestamp": "2024-12-29T16:28:34.000000Z",
        "total_difficulty": "26422279",
        "transaction_count": 4,
        "transaction_fees": "289382360000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "142126210000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999747533136,
        "gas_used": "14212621",
        "gas_used_percentage": 1.2623343259576814e-06,
        "hash": "0x4a636edaa84e8941540fe07f27c5dcb021a115b66306802b05bce730ecdd0f04",
        "height": 26422277,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x723d0961455f4c7d11afdb0fd4a3ed7752681294be493d882993ceb3f573e5aa",
        "priority_fee": "1421276312621000",
        "rewards": [],
        "size": 1040,
        "timestamp": "2024-12-29T16:28:34.000000Z",
        "total_difficulty": "26422278",
        "transaction_count": 3,
        "transaction_fees": "142126210000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "91935210000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.9999983669026,
        "gas_used": "9193521",
        "gas_used_percentage": 8.165486953259915e-07,
        "hash": "0x723d0961455f4c7d11afdb0fd4a3ed7752681294be493d882993ceb3f573e5aa",
        "height": 26422276,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xb424ab4136472f2de6801ae5e749f70ac47133dab142389cb17ad5270a18e410",
        "priority_fee": "919361293521000",
        "rewards": [],
        "size": 919,
        "timestamp": "2024-12-29T16:28:33.000000Z",
        "total_difficulty": "26422277",
        "transaction_count": 2,
        "transaction_fees": "91935210000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "325202550000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999422324225,
        "gas_used": "32520255",
        "gas_used_percentage": 2.8883788694145096e-06,
        "hash": "0xb424ab4136472f2de6801ae5e749f70ac47133dab142389cb17ad5270a18e410",
        "height": 26422275,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x1cc91f9c483609d38b6e65f45d851093a16f0e2aa3012e19d7e941e8a993d386",
        "priority_fee": "3188522217310000",
        "rewards": [],
        "size": 1477,
        "timestamp": "2024-12-29T16:28:33.000000Z",
        "total_difficulty": "26422276",
        "transaction_count": 5,
        "transaction_fees": "325202550000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "144910330000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999742587545,
        "gas_used": "14491033",
        "gas_used_percentage": 1.2870622789762365e-06,
        "hash": "0x1cc91f9c483609d38b6e65f45d851093a16f0e2aa3012e19d7e941e8a993d386",
        "height": 26422274,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x95572abb9a2427bc32181ad22f8e67c7ceebc19b8084de96d6e184df2d29683e",
        "priority_fee": "1449117791033000",
        "rewards": [],
        "size": 1434,
        "timestamp": "2024-12-29T16:28:33.000000Z",
        "total_difficulty": "26422275",
        "transaction_count": 2,
        "transaction_fees": "144910330000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "78063450000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999861331456,
        "gas_used": "7806345",
        "gas_used_percentage": 6.933427165733974e-07,
        "hash": "0x95572abb9a2427bc32181ad22f8e67c7ceebc19b8084de96d6e184df2d29683e",
        "height": 26422273,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x1e7b86a42d6a0bf8409fff3f4bd4cc3f8d02c4282bcb68df98e650d3f7adcfba",
        "priority_fee": "780642306345000",
        "rewards": [],
        "size": 887,
        "timestamp": "2024-12-29T16:28:33.000000Z",
        "total_difficulty": "26422274",
        "transaction_count": 2,
        "transaction_fees": "78063450000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "157100110000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999720934146,
        "gas_used": "15710011",
        "gas_used_percentage": 1.3953292743451584e-06,
        "hash": "0x1e7b86a42d6a0bf8409fff3f4bd4cc3f8d02c4282bcb68df98e650d3f7adcfba",
        "height": 26422272,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x39fab2c1e7f5fac7c9648b3aba123ae05143bf9bcb429074f2946fceb4c5a031",
        "priority_fee": "1571016810011000",
        "rewards": [],
        "size": 1074,
        "timestamp": "2024-12-29T16:28:32.000000Z",
        "total_difficulty": "26422273",
        "transaction_count": 3,
        "transaction_fees": "157100110000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "144416520000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999743464727,
        "gas_used": "14441652",
        "gas_used_percentage": 1.2826763651219153e-06,
        "hash": "0x39fab2c1e7f5fac7c9648b3aba123ae05143bf9bcb429074f2946fceb4c5a031",
        "height": 26422271,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0x14a0290582d64acf25ed88cb3a7e338ab8745034569d91b88f26fc94a191aa0c",
        "priority_fee": "1444179641652000",
        "rewards": [],
        "size": 1440,
        "timestamp": "2024-12-29T16:28:32.000000Z",
        "total_difficulty": "26422272",
        "transaction_count": 2,
        "transaction_fees": "144416520000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      },
      {
        "base_fee_per_gas": "10000000",
        "burnt_fees": "159645110000000",
        "burnt_fees_percentage": 100.0,
        "difficulty": "1",
        "gas_limit": "1125899906842624",
        "gas_target_percentage": -99.99999716413318,
        "gas_used": "15964511",
        "gas_used_percentage": 1.4179334151265266e-06,
        "hash": "0x14a0290582d64acf25ed88cb3a7e338ab8745034569d91b88f26fc94a191aa0c",
        "height": 26422270,
        "miner": {
          "ens_domain_name": null,
          "hash": "0xA4b000000000000000000073657175656e636572",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "nonce": "0x0000000000000053",
        "parent_hash": "0xa90d2469694639293cccf4583855ca83c05565ba604db4051bac22285a496789",
        "priority_fee": "1596467064511000",
        "rewards": [],
        "size": 1079,
        "timestamp": "2024-12-29T16:28:32.000000Z",
        "total_difficulty": "26422271",
        "transaction_count": 3,
        "transaction_fees": "159645110000000",
        "type": "block",
        "uncles_hashes": [],
        "withdrawals_count": null
      }
    ],
    "next_page_params": {
      "block_number": 26422270,
      "items_count": 50
    }
  },
  "https://opencampus-codex.blockscout.com/api/v2/blocks/10": {
    "arbitrum": {
      "batch_data_container": "in_anytrust",
      "batch_number": 2,
      "commitment_transaction": {
        "hash": "0xab082a58430dc4e1a0b2dd13f798fae63f0eb405a80d43fa2edf91f2f62f5597",
        "status": "finalized",
        "timestamp": "2024-05-08T08:01:48.000000Z"
      },
      "confirmation_transaction": {
        "hash": "0x40e6adae45edb4a288f8d2dc266824cade05da42f24e4ee9c46f66d126cf9679",
        "status": "finalized",
        "timestamp": "2024-05-15T05:25:51.000000Z"
      },
      "delayed_messages": 11,
      "l1_block_height": null,
      "send_count": null,
      "send_root": null,
      "status": "Confirmed on base"
    },
    "base_fee_per_gas": "100000000",
    "burnt_fees": "9248270000000000",
    "burnt_fees_percentage": 100.0,
    "difficulty": "1",
    "gas_limit": "1125899906842624",
    "gas_target_percentage": -99.99998357177233,
    "gas_used": "92482700",
    "gas_used_percentage": 8.214113833560077e-06,
    "hash": "0xebf91fc4569d81ddbc13b3605776f00270a9bf5a8802f49474e27eb8da24fa47",
    "height": 10,
    "miner": {
      "ens_domain_name": null,
      "hash": "0xb776705700774a40b73b4e3509AE01C7Ef05CB20",
      "implementations": [],
      "is_contract": false,
      "is_scam": false,
      "is_verified": false,
      "metadata": null,
      "name": null,
      "private_tags": [],
      "proxy_type": null,
      "public_tags": [],
      "watchlist_names": []
    },
    "nonce": "0x000000000000000b",
    "parent_hash": "0xd4b3cd271ebb23ff2230d84733ab9887e00e0d04d4c92199323256b334d8a68b",
    "priority_fee": "0",
    "rewards": [],
    "size": 51037,
    "timestamp": "2024-05-08T06:59:29.000000Z",
    "total_difficulty": "11",
    "transaction_count": 3,
    "transaction_fees": "9248270000000000",
    "type": "block",
    "uncles_hashes": [],
    "withdrawals_count": 0
  },
  "https://arbitrum-sepolia.blockscout.com/api/v2/blocks/10": {
    "arbitrum": {
      "batch_data_container": "in_calldata",
      "batch_number": 1,
      "commitment_transaction": {
        "hash": "0x0028109af81c4b9f715f93382a60ffd9e0805b91fb9fc2e3cf12cafe4714c26f",
        "status": "finalized",
        "timestamp": "2023-08-22T19:30:24.000000Z"
      },
      "confirmation_transaction": {
        "hash": null,
        "status": null,
        "timestamp": null
      },
      "delayed_messages": 11,
      "l1_block_height": 4139524,
      "send_count": 0,
      "send_root": "0x0000000000000000000000000000000000000000000000000000000000000000",
      "status": "Sent to base"
    },
    "base_fee_per_gas": "100000000",
    "burnt_fees": "59154100000000",
    "burnt_fees_percentage": 100.0,
    "difficulty": "1",
    "gas_limit": "1125899906842624",
    "gas_target_percentage": -99.99999989492122,
    "gas_used": "591541",
    "gas_used_percentage": 5.253939505678318e-08,
    "hash": "0xe820b22c9c09009e86ba54f8f84094495b02ee1b4d7b2fa315e61081379d531d",
    "height": 10,
    "miner": {
      "ens_domain_name": null,
      "hash": "0xCf13c5055d0DFaEFfaABDbE1F890Be4790418987",
      "implementations": [],
      "is_contract": false,
      "is_scam": false,
      "is_verified": false,
      "metadata": null,
      "name": null,
      "private_tags": [],
      "proxy_type": null,
      "public_tags": [],
      "watchlist_names": []
    },
    "nonce": "0x000000000000000b",
    "parent_hash": "0x167fb755b9bb6aa2af9d4171d448542d222b3bfa24ef9565ed8313789767451e",
    "priority_fee": "0",
    "rewards": [],
    "size": 3316,
    "timestamp": "2023-08-22T19:02:24.000000Z",
    "total_difficulty": "11",
    "transaction_count": 2,
    "transaction_fees": "59154100000000",
    "type": "block",
    "uncles_hashes": [],
    "withdrawals_count": 0
  },
  "https://eth-sepolia.blockscout.com/api/v2/blocks/10": {
    "base_fee_per_gas": "263075578",
    "blob_gas_price": null,
    "blob_gas_used": null,
    "blob_transaction_count": 0,
    "blob_tx_count": 0,
    "burnt_blob_fees": "0",
    "burnt_fees": "0",
    "burnt_fees_percentage": null,
    "difficulty": "131584",
    "excess_blob_gas": null,
    "gas_limit": "30000000",
    "gas_target_percentage": -100.0,
    "gas_used": "0",
    "gas_used_percentage": 0.0,
    "hash": "0x8e9590a962442cf66c64bb2967e76677b94ecc024d0df93e10b5c2afe6ae5e90",
    "height": 10,
    "miner": {
      "ens_domain_name": null,
      "hash": "0x2f14582947E292a2eCd20C430B46f2d27CFE213c",
      "implementations": [],
      "is_contract": false,
      "is_scam": false,
      "is_verified": false,
      "metadata": null,
      "name": null,
      "private_tags": [],
      "proxy_type": null,
      "public_tags": [],
      "watchlist_names": []
    },
    "nonce": "0xc7faaf72b4572539",
    "parent_hash": "0x51bdc43b8eadcd520d30008dc144aa83778267f503ab8ba7e4f1662e9c5a83ff",
    "priority_fee": 0,
    "rewards": [
      {
        "reward": "0",
        "type": "Miner Reward"
      }
    ],
    "size": 517,
    "timestamp": "2021-10-23T01:08:44.000000Z",
    "total_difficulty": "1444096",
    "transaction_count": 0,
    "transaction_fees": "0",
    "type": "block",
    "uncles_hashes": [],
    "withdrawals_count": 0
  },
  "https://opencampus-codex.blockscout.com/api/v2/smart-contracts/0xd819d9457F0272e1DAccf52d2DEed44079aeF25A": {
    "has_methods_read": true,
    "is_self_destructed": false,
    "has_custom_methods_write": false,
    "file_path": "contracts/RobinXCore.sol",
    "source_code": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"./RobinX.sol\";\nimport \"./hyperlane/Structs.sol\";\nimport \"./hyperlane/IMailbox.sol\";\n\n/// @title RobinXCore\n/// @author Gabriel Antony Xaviour\n/// @notice Core contract for managing polls, responses, and rewards with cross-chain verification.\ncontract RobinXCore {\n    /// @notice Address of the RobinX AI agent.\n    address public robinXAiAgent;\n\n    /// @notice RobinX token contract instance.\n    RobinX public robinX;\n\n    /// @notice Address of the contract owner.\n    address public owner;\n\n    /// @notice Address of the public world ID verifier.\n    address public robinXWorldIdVerifier;\n\n    /// @notice Count of polls created.\n    uint256 public pollCount;\n\n    /// @notice Mapping of poll IDs to metadata.\n    mapping(uint256 => string) public polls;\n\n    /// @notice Mapping of addresses to verified nullifier hashes.\n    mapping(address => uint256) public verifiedNullifiers;\n\n    /// @notice Mapping of nullifier hashes to reward receivers.\n    mapping(uint256 => address) public rewardReceivers;\n\n    /// @notice Mapping of poll rewards.\n    /// @dev pollId => nullifierHash => reward amount.\n    mapping(uint256 => mapping(uint256 => uint256)) public rewards;\n\n    /// @notice Mapping of poll responses.\n    /// @dev pollId => nullifierHash => encrypted response.\n    mapping(uint256 => mapping(uint256 => string)) public pollResponses;\n\n    /// @notice Mailbox contract for cross-chain communication.\n    IMailbox public mailbox;\n\n    /// @notice Domain ID for the Sepolia testnet.\n    uint32 public constant SEPOLIA_DOMAIN_ID = 11155111;\n\n    /// @dev Errors\n    error NotOwner(address requiredOwner);\n    error InvalidCrosschainCaller(uint32 origin, address sender);\n    error NotMailbox();\n    error UnverifiedCaller(uint256 pollId, address sender);\n    error AlreadyAttempted(\n        uint256 pollId,\n        address caller,\n        uint256 nullifierHash\n    );\n    error UnverifiedReceiverAddress(uint256 nullifierHash, address receiver);\n    error AlreadyRewarded(uint256 pollId, uint256 receiverNullifierHash);\n    error InvalidPollId(uint256 pollId);\n    error NotRobin(address requiredRobinXAiAgent);\n\n    /// @dev Events\n    event DailyQuizStarted(uint256 pollId, string metadata);\n    event VerifiedNullifier(uint256 nullifierHash, address caller);\n    event ResponseSubmitted(\n        uint256 pollId,\n        address caller,\n        uint256 nullifierHash,\n        string encryptedResponse\n    );\n    event RewardsMinted(\n        uint256 pollId,\n        uint256 receiverNullifierHash,\n        uint256 score,\n        uint256 amount\n    );\n    event RewardReceiverAddressSet(uint256 nullifierHash, address receiver);\n\n    /// @notice Modifier to restrict access to the owner.\n    modifier onlyOwner() {\n        if (msg.sender != owner) revert NotOwner(owner);\n        _;\n    }\n\n    /// @notice Modifier to restrict access to the mailbox.\n    modifier onlyMailbox() {\n        if (msg.sender != address(mailbox)) revert NotMailbox();\n        _;\n    }\n\n    /// @notice Modifier to validate cross-chain calls.\n    modifier onlyRobinXWorldIdVerifier(address sender, uint32 origin) {\n        if (origin != SEPOLIA_DOMAIN_ID || sender != robinXWorldIdVerifier)\n            revert InvalidCrosschainCaller(origin, sender);\n        _;\n    }\n\n    /// @notice Modifier to restrict access to the RobinX AI agent.\n    modifier onlyRobin() {\n        if (msg.sender != robinXAiAgent) revert NotRobin(robinXAiAgent);\n        _;\n    }\n\n    /// @param _robinXAiAgent Address of the RobinX AI agent.\n    /// @param _mailbox Address of the mailbox contract.\n    constructor(address _robinXAiAgent, IMailbox _mailbox) {\n        robinXAiAgent = _robinXAiAgent;\n        robinX = new RobinX(_robinXAiAgent, msg.sender);\n        owner = msg.sender;\n        mailbox = _mailbox;\n    }\n\n    /// @notice Sets a new RobinX AI agent.\n    /// @param _robinXAiAgent The new AI agent address.\n    function setRobin(address _robinXAiAgent) external onlyOwner {\n        robinXAiAgent = _robinXAiAgent;\n    }\n\n    /// @notice Sets a new contract owner.\n    /// @param _newOwner The new owner address.\n    function setOwner(address _newOwner) external onlyOwner {\n        owner = _newOwner;\n    }\n\n    function setRobinXWorldIdVerifier(address _verifier) external onlyOwner {\n        robinXWorldIdVerifier = _verifier;\n    }\n\n    /// @notice Creates a new poll with given metadata.\n    /// @param _metadata The metadata for the poll.\n    function createPoll(string memory _metadata) external onlyRobin {\n        polls[pollCount] = _metadata;\n        emit DailyQuizStarted(pollCount, _metadata);\n        pollCount++;\n    }\n\n    /// @notice Submits a response to a specific poll.\n    /// @param pollId The ID of the poll.\n    /// @param encryptedResponse The encrypted response for the poll.\n    function submitResponse(\n        uint256 pollId,\n        string memory encryptedResponse\n    ) external {\n        if (pollId >= pollCount) revert InvalidPollId(pollId);\n        uint256 nullifierHash = verifiedNullifiers[msg.sender];\n        if (nullifierHash == 0) revert UnverifiedCaller(pollId, msg.sender);\n        if (bytes(pollResponses[pollId][nullifierHash]).length > 0)\n            revert AlreadyAttempted(pollId, msg.sender, nullifierHash);\n\n        pollResponses[pollId][nullifierHash] = encryptedResponse;\n\n        emit ResponseSubmitted(\n            pollId,\n            msg.sender,\n            nullifierHash,\n            encryptedResponse\n        );\n    }\n\n    /// @notice Mints rewards for a verified poll response.\n    /// @param pollId The ID of the poll.\n    /// @param receiverNullifierHash The nullifier hash of the receiver.\n    /// @param score The score of the response.\n    /// @param amount The reward amount.\n    function mintRewards(\n        uint256 pollId,\n        uint256 receiverNullifierHash,\n        uint256 score,\n        uint256 amount\n    ) external onlyRobin {\n        if (pollId >= pollCount) revert InvalidPollId(pollId);\n        if (rewards[pollId][receiverNullifierHash] != 0)\n            revert AlreadyRewarded(pollId, receiverNullifierHash);\n\n        rewards[pollId][receiverNullifierHash] = amount;\n        address receiver = rewardReceivers[receiverNullifierHash];\n        robinX.mintRewards(receiver, amount);\n\n        emit RewardsMinted(pollId, receiverNullifierHash, score, amount);\n    }\n\n    /// @notice Sets the reward receiver address for a nullifier hash.\n    /// @param _receiver The address of the receiver.\n    /// @param _nullifierHash The nullifier hash.\n    function setRewardReceiverAddress(\n        address _receiver,\n        uint256 _nullifierHash\n    ) external {\n        uint256 callerNullifierHash = verifiedNullifiers[msg.sender];\n        if (callerNullifierHash == 0 || callerNullifierHash != _nullifierHash)\n            revert UnverifiedReceiverAddress(_nullifierHash, _receiver);\n\n        rewardReceivers[_nullifierHash] = _receiver;\n\n        emit RewardReceiverAddressSet(_nullifierHash, _receiver);\n    }\n\n    /// @notice Handles cross-chain verification of nullifiers.\n    /// @param _origin The origin domain ID.\n    /// @param _sender The sender address in bytes32 format.\n    /// @param _data The encoded data (nullifierHash, caller address).\n    function handle(\n        uint32 _origin,\n        bytes32 _sender,\n        bytes calldata _data\n    )\n        external\n        payable\n        onlyMailbox\n        onlyRobinXWorldIdVerifier(bytes32ToAddress(_sender), _origin)\n    {\n        (uint256 nullifierHash, address caller) = abi.decode(\n            _data,\n            (uint256, address)\n        );\n        verifiedNullifiers[caller] = nullifierHash;\n\n        if (rewardReceivers[nullifierHash] == address(0)) {\n            rewardReceivers[nullifierHash] = caller;\n        }\n\n        emit VerifiedNullifier(nullifierHash, caller);\n    }\n\n    /// @notice Converts an address to bytes32.\n    /// @param _address The address to convert.\n    /// @return The converted bytes32 representation.\n    function addressToBytes32(address _address) public pure returns (bytes32) {\n        return bytes32(uint256(uint160(_address)));\n    }\n\n    /// @notice Converts bytes32 to an address.\n    /// @param _bytes32 The bytes32 to convert.\n    /// @return The converted address.\n    function bytes32ToAddress(bytes32 _bytes32) public pure returns (address) {\n        return address(uint160(uint256(_bytes32)));\n    }\n}\n",
    "deployed_bytecode": "0x608060408181526004918236101561001657600080fd5b600092833560e01c91826313af403514610c5557508163214e9b5a14610c2d578163399106ab14610c0f5781633e7e366e14610be35781633ff82c0014610bab5781634f58330614610a1b57816356d5d475146108bd5781635ced058e14610895578163725d813f1461084a57816374a9ced9146106435781637bf3d57b1461057257816382c947b7146105445781638da5cb5b1461051b5781639207891d146104fd578163a42f2d6d146104ce578163a7dbf9361461026a578163ac2f007414610229578163bd347433146101c9578163d2b602211461019257508063d5438eae1461016a578063fb8d9668146101425763fdc1a5461461011757600080fd5b3461013e578160031936011261013e5760015490516001600160a01b039091168152602090f35b5080fd5b503461013e578160031936011261013e5760035490516001600160a01b039091168152602090f35b503461013e578160031936011261013e57600a5490516001600160a01b039091168152602090f35b9050346101c55760203660031901126101c55735825260076020908152918190205490516001600160a01b039091168152f35b8280fd5b9050346101c55760203660031901126101c5576101e4610cb4565b9060018060a01b039283600254169081330361021457505050166001600160601b0360a01b600054161760005580f35b5163245aecd360e01b81529182015260249150fd5b9050346101c55760203660031901126101c557816102669361025392358152600560205220610dae565b9051918291602083526020830190610e53565b0390f35b83833461013e578060031936011261013e5782356024359367ffffffffffffffff948581116104ca576102a09036908301610d1d565b9080548310156104b3573385526020936006855280862054918215610492578487526009865281872083885286526102da82882054610d74565b6104715784875260098652818720838852865281872090845198891161045e57506103058154610d74565b601f811161041b575b508597601f811160011461039457908161038395949392899a7f05990057cce2aeff2010e011fde689a18fc81b4858322630456816e2649244439a91610389575b508160011b916000199060031b1c19161790555b805195869586523390860152840152608060608401526080830190610e53565b0390a180f35b90508501518b61034f565b818852868820601f198216895b8181106104045750916001917f05990057cce2aeff2010e011fde689a18fc81b4858322630456816e2649244439a9b826103839998979695106103eb575b5050811b019055610363565b87015160001960f88460031b161c191690558b806103df565b878c015183559a89019a60019092019189016103a1565b818852868820601f8a0160051c810191888b10610454575b601f0160051c01905b818110610449575061030e565b88815560010161043c565b9091508190610433565b634e487b7160e01b885260419052602487fd5b8285606493519263e050488b60e01b84528301523360248301526044820152fd5b81516385ff571560e01b815290810185815233602082015281906040010390fd5b835163027a9e5b60e41b8152908101839052602490fd5b8480fd5b50503461013e5761025381610266936104e636610ccf565b908252600960205282822090825260205220610dae565b9050346101c557826003193601126101c55760209250549051908152f35b50503461013e578160031936011261013e5760025490516001600160a01b039091168152602090f35b50503461013e57602036600319011261013e576020906001600160a01b0361056a610cb4565b169051908152f35b83833461013e578060031936011261013e5761058c610cb4565b9060243593338452600660205281842054858115918215610638575b505061060e57508383526007602090815281842080546001600160a01b0319166001600160a01b039490941693841790559051938452830152907f7283da2da54fcadcee1e16b490ed2aa0485a0c9d2b6e8f6a76a3e145651fc24f908060408101610383565b9051634914b49d60e01b81529081018481526001600160a01b038316602082015281906040010390fd5b1415905085876105a8565b919050346101c557602090816003193601126108465767ffffffffffffffff918335838111610842576106799036908601610d1d565b85549093906001600160a01b03163381900361082c57508454865260058252828620908451908111610819576106af8254610d74565b601f81116107d6575b5082601f82116001146107535790807f97e7f44f04e432e9454f7bcae24a9dcd9cd1a797156bca20e1154ca0829719eb959493928991610748575b508160011b916000199060031b1c19161790555b610721855494838051948594888652850152830190610e53565b0390a1600019811461073557600101905580f35b634e487b7160e01b835260118252602483fd5b9050860151386106f3565b82885283882090601f198316895b8181106107bf57509183917f97e7f44f04e432e9454f7bcae24a9dcd9cd1a797156bca20e1154ca0829719eb97969594600194106107a6575b5050811b019055610707565b88015160001960f88460031b161c19169055388061079a565b91928660018192868c015181550194019201610761565b828852838820601f830160051c81019185841061080f575b601f0160051c01905b81811061080457506106b8565b8881556001016107f7565b90915081906107ee565b634e487b7160e01b875260418652602487fd5b85602491855191634227c87560e01b8352820152fd5b8580fd5b8380fd5b9050346101c55760203660031901126101c557610865610cb4565b9060018060a01b039283600254169081330361021457505050166001600160601b0360a01b600354161760035580f35b919050346101c55760203660031901126101c5575190356001600160a01b0316815260209150f35b905060603660031901126101c55780359063ffffffff8216809203610846576044359067ffffffffffffffff808311610842573660238401121561084257828201359081116108425782019036602483011161084257600a546001600160a01b03949085163303610a0c5784602435169062aa36a781148015906109fe575b6109e35750505081849103126108465760446024820135910135918083168093036104ca577f2e22bb67931eb62e127106589b970053d14bbe07f630a2817ef04cb446da8414936103839184875260066020528382882055838752600760205284828820918254908116156109ce575b50509051928352506001600160a01b0390921660208201529081906040820190565b6001600160a01b0319161790553884816109ac565b86516392b6726b60e01b815292830152602482015260449150fd5b50856003541682141561093c565b50845163079ddc6d60e31b8152fd5b9050346101c55760803660031901126101c557825481359260643592909160248035926001600160a01b0392831633819003610b9957508054871015610b855786885260209260088452858920858a52845285892054610b6a57908892918884526008855286842086855285528787852055600785528087852054169060015416803b156104ca5760448592895196879384926335106f4960e11b8452878401528c888401525af18015610b6057610b0f575b887fdbc2ffd41119bead8706a911083676e184720c73ad48682f422088cd9b18ca7660808a8a8a8a8a8251948552840152604435908301526060820152a180f35b67ffffffffffffffff8399949911610b4f575050835294817fdbc2ffd41119bead8706a911083676e184720c73ad48682f422088cd9b18ca766080610ace565b634e487b7160e01b84526041905282fd5b86513d8b823e3d90fd5b5083604492888751936327ca6e5b60e11b8552840152820152fd5b845163027a9e5b60e41b8152908101879052fd5b8551634227c87560e01b815291820152fd5b50503461013e57602036600319011261013e5760209181906001600160a01b03610bd3610cb4565b1681526006845220549051908152f35b50503461013e5780602092610bf736610ccf565b90825260088552828220908252845220549051908152f35b50503461013e578160031936011261013e576020905162aa36a78152f35b50503461013e578160031936011261013e57905490516001600160a01b039091168152602090f35b8491346101c55760203660031901126101c557610c70610cb4565b600254926001600160a01b03928385169033829003610ca15750505016906001600160601b0360a01b161760025580f35b63245aecd360e01b835282015260249150fd5b600435906001600160a01b0382168203610cca57565b600080fd5b6040906003190112610cca576004359060243590565b90601f8019910116810190811067ffffffffffffffff821117610d0757604052565b634e487b7160e01b600052604160045260246000fd5b81601f82011215610cca5780359067ffffffffffffffff8211610d075760405192610d52601f8401601f191660200185610ce5565b82845260208383010111610cca57816000926020809301838601378301015290565b90600182811c92168015610da4575b6020831014610d8e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610d83565b604051908160008254610dc081610d74565b90818452602094600191600181169081600014610e315750600114610df2575b505050610def92500382610ce5565b90565b600090815285812095935091905b818310610e19575050610def9350820101388080610de0565b85548784018501529485019486945091830191610e00565b92505050610def94925060ff191682840152151560051b820101388080610de0565b919082519283825260005b848110610e7f575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610e5e56fea2646970667358221220fb197ae1ecc487c0b3f7b0cc5c37877682cad906d82a2094de3ec65a6243dbe464736f6c63430008180033",
    "optimization_enabled": true,
    "verified_twin_address_hash": "0x98f862014f5D58bfBcf972695c1b12e9e8821E7A",
    "is_verified": true,
    "github_repository_metadata": null,
    "compiler_settings": {
      "evmVersion": "paris",
      "libraries": {},
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "": [
            "ast"
          ],
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ]
        }
      },
      "viaIR": true
    },
    "optimization_runs": 200,
    "sourcify_repo_url": null,
    "decoded_constructor_args": [
      [
        "0x0429A2Da7884CA14E53142988D5845952fE4DF6a",
        {
          "internalType": "address",
          "name": "_robinXAiAgent",
          "type": "address"
        }
      ],
      [
        "0xCfA62ac3Cc7E9eBA17Fab9Bc92df6AC648A18338",
        {
          "internalType": "contract IMailbox",
          "name": "_mailbox",
          "type": "address"
        }
      ]
    ],
    "has_methods_write": true,
    "compiler_version": "v0.8.24+commit.e11b9ed9",
    "is_verified_via_verifier_alliance": false,
    "verified_at": "2024-12-28T19:47:37.573398Z",
    "implementations": [],
    "proxy_type": null,
    "external_libraries": [],
    "creation_bytecode": "0x6080346100fc57611d5a906001600160401b0390601f38849003908101601f19168201908382118383101761010157808391604096879485528339810103126100fc5780516001600160a01b038082169290918390036100fc5760200151928184168094036100fc57600080546001600160a01b0319908116851782558651909491929091610d79808401928311848410176100e8579183918993610fe18439815233602082015203019082f09081156100dd57501681600154161760015533816002541617600255600a541617600a5551610ec990816101188239f35b8551903d90823e3d90fd5b634e487b7160e01b85526041600452602485fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826313af403514610c5557508163214e9b5a14610c2d578163399106ab14610c0f5781633e7e366e14610be35781633ff82c0014610bab5781634f58330614610a1b57816356d5d475146108bd5781635ced058e14610895578163725d813f1461084a57816374a9ced9146106435781637bf3d57b1461057257816382c947b7146105445781638da5cb5b1461051b5781639207891d146104fd578163a42f2d6d146104ce578163a7dbf9361461026a578163ac2f007414610229578163bd347433146101c9578163d2b602211461019257508063d5438eae1461016a578063fb8d9668146101425763fdc1a5461461011757600080fd5b3461013e578160031936011261013e5760015490516001600160a01b039091168152602090f35b5080fd5b503461013e578160031936011261013e5760035490516001600160a01b039091168152602090f35b503461013e578160031936011261013e57600a5490516001600160a01b039091168152602090f35b9050346101c55760203660031901126101c55735825260076020908152918190205490516001600160a01b039091168152f35b8280fd5b9050346101c55760203660031901126101c5576101e4610cb4565b9060018060a01b039283600254169081330361021457505050166001600160601b0360a01b600054161760005580f35b5163245aecd360e01b81529182015260249150fd5b9050346101c55760203660031901126101c557816102669361025392358152600560205220610dae565b9051918291602083526020830190610e53565b0390f35b83833461013e578060031936011261013e5782356024359367ffffffffffffffff948581116104ca576102a09036908301610d1d565b9080548310156104b3573385526020936006855280862054918215610492578487526009865281872083885286526102da82882054610d74565b6104715784875260098652818720838852865281872090845198891161045e57506103058154610d74565b601f811161041b575b508597601f811160011461039457908161038395949392899a7f05990057cce2aeff2010e011fde689a18fc81b4858322630456816e2649244439a91610389575b508160011b916000199060031b1c19161790555b805195869586523390860152840152608060608401526080830190610e53565b0390a180f35b90508501518b61034f565b818852868820601f198216895b8181106104045750916001917f05990057cce2aeff2010e011fde689a18fc81b4858322630456816e2649244439a9b826103839998979695106103eb575b5050811b019055610363565b87015160001960f88460031b161c191690558b806103df565b878c015183559a89019a60019092019189016103a1565b818852868820601f8a0160051c810191888b10610454575b601f0160051c01905b818110610449575061030e565b88815560010161043c565b9091508190610433565b634e487b7160e01b885260419052602487fd5b8285606493519263e050488b60e01b84528301523360248301526044820152fd5b81516385ff571560e01b815290810185815233602082015281906040010390fd5b835163027a9e5b60e41b8152908101839052602490fd5b8480fd5b50503461013e5761025381610266936104e636610ccf565b908252600960205282822090825260205220610dae565b9050346101c557826003193601126101c55760209250549051908152f35b50503461013e578160031936011261013e5760025490516001600160a01b039091168152602090f35b50503461013e57602036600319011261013e576020906001600160a01b0361056a610cb4565b169051908152f35b83833461013e578060031936011261013e5761058c610cb4565b9060243593338452600660205281842054858115918215610638575b505061060e57508383526007602090815281842080546001600160a01b0319166001600160a01b039490941693841790559051938452830152907f7283da2da54fcadcee1e16b490ed2aa0485a0c9d2b6e8f6a76a3e145651fc24f908060408101610383565b9051634914b49d60e01b81529081018481526001600160a01b038316602082015281906040010390fd5b1415905085876105a8565b919050346101c557602090816003193601126108465767ffffffffffffffff918335838111610842576106799036908601610d1d565b85549093906001600160a01b03163381900361082c57508454865260058252828620908451908111610819576106af8254610d74565b601f81116107d6575b5082601f82116001146107535790807f97e7f44f04e432e9454f7bcae24a9dcd9cd1a797156bca20e1154ca0829719eb959493928991610748575b508160011b916000199060031b1c19161790555b610721855494838051948594888652850152830190610e53565b0390a1600019811461073557600101905580f35b634e487b7160e01b835260118252602483fd5b9050860151386106f3565b82885283882090601f198316895b8181106107bf57509183917f97e7f44f04e432e9454f7bcae24a9dcd9cd1a797156bca20e1154ca0829719eb97969594600194106107a6575b5050811b019055610707565b88015160001960f88460031b161c19169055388061079a565b91928660018192868c015181550194019201610761565b828852838820601f830160051c81019185841061080f575b601f0160051c01905b81811061080457506106b8565b8881556001016107f7565b90915081906107ee565b634e487b7160e01b875260418652602487fd5b85602491855191634227c87560e01b8352820152fd5b8580fd5b8380fd5b9050346101c55760203660031901126101c557610865610cb4565b9060018060a01b039283600254169081330361021457505050166001600160601b0360a01b600354161760035580f35b919050346101c55760203660031901126101c5575190356001600160a01b0316815260209150f35b905060603660031901126101c55780359063ffffffff8216809203610846576044359067ffffffffffffffff808311610842573660238401121561084257828201359081116108425782019036602483011161084257600a546001600160a01b03949085163303610a0c5784602435169062aa36a781148015906109fe575b6109e35750505081849103126108465760446024820135910135918083168093036104ca577f2e22bb67931eb62e127106589b970053d14bbe07f630a2817ef04cb446da8414936103839184875260066020528382882055838752600760205284828820918254908116156109ce575b50509051928352506001600160a01b0390921660208201529081906040820190565b6001600160a01b0319161790553884816109ac565b86516392b6726b60e01b815292830152602482015260449150fd5b50856003541682141561093c565b50845163079ddc6d60e31b8152fd5b9050346101c55760803660031901126101c557825481359260643592909160248035926001600160a01b0392831633819003610b9957508054871015610b855786885260209260088452858920858a52845285892054610b6a57908892918884526008855286842086855285528787852055600785528087852054169060015416803b156104ca5760448592895196879384926335106f4960e11b8452878401528c888401525af18015610b6057610b0f575b887fdbc2ffd41119bead8706a911083676e184720c73ad48682f422088cd9b18ca7660808a8a8a8a8a8251948552840152604435908301526060820152a180f35b67ffffffffffffffff8399949911610b4f575050835294817fdbc2ffd41119bead8706a911083676e184720c73ad48682f422088cd9b18ca766080610ace565b634e487b7160e01b84526041905282fd5b86513d8b823e3d90fd5b5083604492888751936327ca6e5b60e11b8552840152820152fd5b845163027a9e5b60e41b8152908101879052fd5b8551634227c87560e01b815291820152fd5b50503461013e57602036600319011261013e5760209181906001600160a01b03610bd3610cb4565b1681526006845220549051908152f35b50503461013e5780602092610bf736610ccf565b90825260088552828220908252845220549051908152f35b50503461013e578160031936011261013e576020905162aa36a78152f35b50503461013e578160031936011261013e57905490516001600160a01b039091168152602090f35b8491346101c55760203660031901126101c557610c70610cb4565b600254926001600160a01b03928385169033829003610ca15750505016906001600160601b0360a01b161760025580f35b63245aecd360e01b835282015260249150fd5b600435906001600160a01b0382168203610cca57565b600080fd5b6040906003190112610cca576004359060243590565b90601f8019910116810190811067ffffffffffffffff821117610d0757604052565b634e487b7160e01b600052604160045260246000fd5b81601f82011215610cca5780359067ffffffffffffffff8211610d075760405192610d52601f8401601f191660200185610ce5565b82845260208383010111610cca57816000926020809301838601378301015290565b90600182811c92168015610da4575b6020831014610d8e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610d83565b604051908160008254610dc081610d74565b90818452602094600191600181169081600014610e315750600114610df2575b505050610def92500382610ce5565b90565b600090815285812095935091905b818310610e19575050610def9350820101388080610de0565b85548784018501529485019486945091830191610e00565b92505050610def94925060ff191682840152151560051b820101388080610de0565b919082519283825260005b848110610e7f575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610e5e56fea2646970667358221220fb197ae1ecc487c0b3f7b0cc5c37877682cad906d82a2094de3ec65a6243dbe464736f6c6343000818003360803462000378576001600160401b0390601f90601f1962000d7938819003848101831684019190868311858410176200027c578085926040948552833981010312620003785762000051826200039d565b936200006160208094016200039d565b936200006c6200037d565b60068152650a4dec4d2dcb60d31b85820152620000886200037d565b9160028352610a4b60f31b868401528151928484116200027c5760039384546001948582811c921680156200036d575b8a8310146200035757818584931162000301575b5089908583116001146200029e5760009262000292575b505060001982871b1c191690841b1784555b80519485116200027c5760049687548481811c9116801562000271575b828210146200025c5783811162000211575b5080928611600114620001a557508495509084929160009562000199575b50501b92600019911b1c19161790555b600580546001600160a01b03199081166001600160a01b03948516179091556006805482163317905560078054909116919092161790556040516109c69081620003b38239f35b01519350388062000142565b939295859081168860005285600020956000905b89838310620001f65750505010620001db575b50505050811b01905562000152565b01519060f884600019921b161c1916905538808080620001cc565b858701518955909701969485019488935090810190620001b9565b88600052816000208480890160051c820192848a1062000252575b0160051c019085905b8281106200024557505062000124565b6000815501859062000235565b925081926200022c565b602289634e487b7160e01b6000525260246000fd5b90607f169062000112565b634e487b7160e01b600052604160045260246000fd5b015190503880620000e3565b908987941691886000528b6000209260005b8d828210620002ea5750508411620002d1575b505050811b018455620000f5565b015160001983891b60f8161c19169055388080620002c3565b8385015186558a97909501949384019301620002b0565b90915086600052896000208580850160051c8201928c86106200034d575b918891869594930160051c01915b8281106200033d575050620000cc565b600081558594508891016200032d565b925081926200031f565b634e487b7160e01b600052602260045260246000fd5b91607f1691620000b8565b600080fd5b60408051919082016001600160401b038111838210176200027c57604052565b51906001600160a01b0382168203620003785756fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146106ef57508163095ea7b31461064557816313af4035146105f357816318160ddd146105d45781631c0ad646146105ab5781631f772a3414610571578163214e9b5a1461054857816323b872dd14610451578163313ce567146104355781636a20de921461036857816370a08231146103315781638da5cb5b14610308578163947a3168146102ca57816395d89b41146101c5578163a9059cbb14610194578163bd3474331461012b575063dd62ed3e146100e057600080fd5b34610127578060031936011261012757806020926100fc61082d565b610104610848565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b9050346101905760203660031901126101905761014661082d565b9060018060a01b039283600754169081330361017b57505050166bffffffffffffffffffffffff60a01b600554161760055580f35b5163245aecd360e01b81529182015260249150fd5b8280fd5b5050346101275780600319360112610127576020906101be6101b461082d565b60243590336108b2565b5160018152f35b83833461012757816003193601126101275780519180938054916001908360011c92600185169485156102c0575b60209586861081146102ad578589529081156102895750600114610231575b61022d8787610223828c0383610890565b51918291826107e4565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610276575050508261022d9461022392820101948680610212565b8054868501880152928601928101610258565b60ff19168887015250505050151560051b83010192506102238261022d8680610212565b634e487b7160e01b845260228352602484fd5b93607f16936101f3565b505034610127578160031936011261012757805161022d916102eb8261085e565b60068252650a4dec4d2dcb60d31b602083015251918291826107e4565b50503461012757816003193601126101275760075490516001600160a01b039091168152602090f35b5050346101275760203660031901126101275760209181906001600160a01b0361035961082d565b16815280845220549051908152f35b9190503461019057806003193601126101905761038361082d565b60065460243592916001600160a01b039182163381900361041f57501692831561040a57600254908382018092116103f7575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b634e487b7160e01b865260119052602485fd5b84602492519163ec442f0560e01b8352820152fd5b856024918551916337edf47960e01b8352820152fd5b5050346101275781600319360112610127576020905160128152f35b905082346105455760603660031901126105455761046d61082d565b610475610848565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983036104b1575b6020886101be8989896108b2565b8683106105195781156105025733156104eb575082526001602090815286832033845281529186902090859003905582906101be876104a3565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b80fd5b50503461012757816003193601126101275760055490516001600160a01b039091168152602090f35b505034610127578160031936011261012757805161022d916105928261085e565b60028252610a4b60f31b602083015251918291826107e4565b50503461012757816003193601126101275760065490516001600160a01b039091168152602090f35b5050346101275781600319360112610127576020906002549051908152f35b919050346101905760203660031901126101905761060f61082d565b600754926001600160a01b0392838516903382900361017b5750505016906bffffffffffffffffffffffff60a01b161760075580f35b90503461019057816003193601126101905761065f61082d565b6024359033156106d8576001600160a01b03169182156106c157508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b929150346107e057836003193601126107e057600354600181811c91869082811680156107d6575b60209586861082146107c357508488529081156107a15750600114610748575b61022d8686610223828b0383610890565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061078e575050508261022d94610223928201019438610737565b8054868501880152928601928101610771565b60ff191687860152505050151560051b83010192506102238261022d38610737565b634e487b7160e01b845260229052602483fd5b93607f1693610717565b8380fd5b6020808252825181830181905290939260005b82811061081957505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016107f7565b600435906001600160a01b038216820361084357565b600080fd5b602435906001600160a01b038216820361084357565b6040810190811067ffffffffffffffff82111761087a57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761087a57604052565b916001600160a01b03808416928315610977571692831561095e576000908382528160205260408220549083821061092c575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fdfea2646970667358221220dca1f9c001c4d7ecbcf9528343abcfc5e6ecdd70a711eddf91f79a8c4b59f76c64736f6c634300081800330000000000000000000000000429a2da7884ca14e53142988d5845952fe4df6a000000000000000000000000cfa62ac3cc7e9eba17fab9bc92df6ac648a18338",
    "name": "RobinXCore",
    "is_blueprint": false,
    "license_type": "none",
    "is_fully_verified": true,
    "has_methods_read_proxy": false,
    "is_vyper_contract": false,
    "is_verified_via_eth_bytecode_db": true,
    "language": "solidity",
    "evm_version": "paris",
    "can_be_visualized_via_sol2uml": true,
    "has_methods_write_proxy": false,
    "has_custom_methods_read": false,
    "is_verified_via_sourcify": false,
    "additional_sources": [
      {
        "file_path": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "source_code": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`\u2019s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`\u2019s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`\u2019s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      {
        "file_path": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "source_code": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      {
        "file_path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "source_code": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      {
        "file_path": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "source_code": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      {
        "file_path": "@openzeppelin/contracts/utils/Context.sol",
        "source_code": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      {
        "file_path": "contracts/RobinX.sol",
        "source_code": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/// @title RobinX Token Contract\n/// @notice ERC20 token contract for the RobinX ecosystem with controlled minting capabilities.\n/// @dev Inherits from OpenZeppelin's ERC20 implementation.\ncontract RobinX is ERC20 {\n    /// @notice Name of the token.\n    string public constant token_name = \"RobinX\";\n\n    /// @notice Symbol of the token.\n    string public constant token_symbol = \"RX\";\n\n    /// @notice Address of the RobinX AI Agent.\n    address public robinXAiAgent;\n\n    /// @notice Address of the RobinX Core contract.\n    address public coreAddress;\n\n    /// @notice Address of the contract owner.\n    address public owner;\n\n    /// @dev Errors for better debugging.\n    error NotOwner(address owner);\n    error NotRobin(address robinXAiAgent);\n    error NotCore(address coreAddress);\n\n    /// @param _robinXAiAgent Address of the RobinX AI Agent.\n    /// @param _owner Address of the contract owner.\n    constructor(\n        address _robinXAiAgent,\n        address _owner\n    ) ERC20(token_name, token_symbol) {\n        robinXAiAgent = _robinXAiAgent;\n        coreAddress = msg.sender;\n        owner = _owner;\n    }\n\n    /// @dev Modifier to restrict function access to the contract owner.\n    modifier onlyOwner() {\n        if (msg.sender != owner) revert NotOwner(owner);\n        _;\n    }\n\n    /// @dev Modifier to restrict function access to the RobinX AI Agent.\n    modifier onlyRobin() {\n        if (msg.sender != robinXAiAgent) revert NotRobin(robinXAiAgent);\n        _;\n    }\n\n    /// @dev Modifier to restrict function access to the RobinX Core contract.\n    modifier onlyCore() {\n        if (msg.sender != coreAddress) revert NotCore(coreAddress);\n        _;\n    }\n\n    /// @notice Sets a new RobinX AI Agent address.\n    /// @param _robinXAiAgent The new RobinX AI Agent address.\n    /// @dev Only callable by the contract owner.\n    function setRobin(address _robinXAiAgent) external onlyOwner {\n        robinXAiAgent = _robinXAiAgent;\n    }\n\n    /// @notice Transfers ownership of the contract to a new address.\n    /// @param _newOwner The new owner's address.\n    /// @dev Only callable by the current owner.\n    function setOwner(address _newOwner) external onlyOwner {\n        owner = _newOwner;\n    }\n\n    /// @notice Mints rewards to a specified address.\n    /// @param to The address to receive the minted tokens.\n    /// @param amount The amount of tokens to mint.\n    /// @dev Only callable by the RobinX Core contract.\n    function mintRewards(address to, uint256 amount) external onlyCore {\n        _mint(to, amount);\n    }\n}\n"
      },
      {
        "file_path": "contracts/hyperlane/IInterchainSecurityModule.sol",
        "source_code": "// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.6.11;\n    \ninterface IInterchainSecurityModule {\n    enum Types {\n        UNUSED,\n        ROUTING,\n        AGGREGATION,\n        LEGACY_MULTISIG,\n        MERKLE_ROOT_MULTISIG,\n        MESSAGE_ID_MULTISIG,\n        NULL, // used with relayer carrying no metadata\n        CCIP_READ,\n        ARB_L2_TO_L1,\n        WEIGHTED_MERKLE_ROOT_MULTISIG,\n        WEIGHTED_MESSAGE_ID_MULTISIG,\n        OP_L2_TO_L1\n    }\n\n    /**\n     * @notice Returns an enum that represents the type of security model\n     * encoded by this ISM.\n     * @dev Relayers infer how to fetch and format metadata.\n     */\n    function moduleType() external view returns (uint8);\n\n    /**\n     * @notice Defines a security model responsible for verifying interchain\n     * messages based on the provided metadata.\n     * @param _metadata Off-chain metadata provided by a relayer, specific to\n     * the security model encoded by the module (e.g. validator signatures)\n     * @param _message Hyperlane encoded interchain message\n     * @return True if the message was verified\n     */\n    function verify(\n        bytes calldata _metadata,\n        bytes calldata _message\n    ) external returns (bool);\n}\n\ninterface ISpecifiesInterchainSecurityModule {\n    function interchainSecurityModule()\n        external\n        view\n        returns (IInterchainSecurityModule);\n}"
      },
      {
        "file_path": "contracts/hyperlane/IMailbox.sol",
        "source_code": "// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.8.0;\n\nimport {IInterchainSecurityModule} from \"./IInterchainSecurityModule.sol\";\nimport {IPostDispatchHook} from \"./IPostDispatchHook.sol\";\n\ninterface IMailbox {\n    // ============ Events ============\n    /**\n     * @notice Emitted when a new message is dispatched via Hyperlane\n     * @param sender The address that dispatched the message\n     * @param destination The destination domain of the message\n     * @param recipient The message recipient address on `destination`\n     * @param message Raw bytes of message\n     */\n    event Dispatch(\n        address indexed sender,\n        uint32 indexed destination,\n        bytes32 indexed recipient,\n        bytes message\n    );\n\n    /**\n     * @notice Emitted when a new message is dispatched via Hyperlane\n     * @param messageId The unique message identifier\n     */\n    event DispatchId(bytes32 indexed messageId);\n\n    /**\n     * @notice Emitted when a Hyperlane message is processed\n     * @param messageId The unique message identifier\n     */\n    event ProcessId(bytes32 indexed messageId);\n\n    /**\n     * @notice Emitted when a Hyperlane message is delivered\n     * @param origin The origin domain of the message\n     * @param sender The message sender address on `origin`\n     * @param recipient The address that handled the message\n     */\n    event Process(\n        uint32 indexed origin,\n        bytes32 indexed sender,\n        address indexed recipient\n    );\n\n    function localDomain() external view returns (uint32);\n\n    function delivered(bytes32 messageId) external view returns (bool);\n\n    function defaultIsm() external view returns (IInterchainSecurityModule);\n\n    function defaultHook() external view returns (IPostDispatchHook);\n\n    function requiredHook() external view returns (IPostDispatchHook);\n\n    function latestDispatchedId() external view returns (bytes32);\n\n    function dispatch(\n        uint32 destinationDomain,\n        bytes32 recipientAddress,\n        bytes calldata messageBody\n    ) external payable returns (bytes32 messageId);\n\n    function quoteDispatch(\n        uint32 destinationDomain,\n        bytes32 recipientAddress,\n        bytes calldata messageBody\n    ) external view returns (uint256 fee);\n\n    function dispatch(\n        uint32 destinationDomain,\n        bytes32 recipientAddress,\n        bytes calldata body,\n        bytes calldata defaultHookMetadata\n    ) external payable returns (bytes32 messageId);\n\n    function quoteDispatch(\n        uint32 destinationDomain,\n        bytes32 recipientAddress,\n        bytes calldata messageBody,\n        bytes calldata defaultHookMetadata\n    ) external view returns (uint256 fee);\n\n    function dispatch(\n        uint32 destinationDomain,\n        bytes32 recipientAddress,\n        bytes calldata body,\n        bytes calldata customHookMetadata,\n        IPostDispatchHook customHook\n    ) external payable returns (bytes32 messageId);\n\n    function quoteDispatch(\n        uint32 destinationDomain,\n        bytes32 recipientAddress,\n        bytes calldata messageBody,\n        bytes calldata customHookMetadata,\n        IPostDispatchHook customHook\n    ) external view returns (uint256 fee);\n\n    function process(\n        bytes calldata metadata,\n        bytes calldata message\n    ) external payable;\n\n    function recipientIsm(\n        address recipient\n    ) external view returns (IInterchainSecurityModule module);\n}"
      },
      {
        "file_path": "contracts/hyperlane/IPostDispatchHook.sol",
        "source_code": "// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.8.0;\n\n/*@@@@@@@       @@@@@@@@@\n @@@@@@@@@       @@@@@@@@@\n  @@@@@@@@@       @@@@@@@@@\n   @@@@@@@@@       @@@@@@@@@\n    @@@@@@@@@@@@@@@@@@@@@@@@@\n     @@@@@  HYPERLANE  @@@@@@@\n    @@@@@@@@@@@@@@@@@@@@@@@@@\n   @@@@@@@@@       @@@@@@@@@\n  @@@@@@@@@       @@@@@@@@@\n @@@@@@@@@       @@@@@@@@@\n@@@@@@@@@       @@@@@@@@*/\n\ninterface IPostDispatchHook {\n    enum Types {\n        UNUSED,\n        ROUTING,\n        AGGREGATION,\n        MERKLE_TREE,\n        INTERCHAIN_GAS_PAYMASTER,\n        FALLBACK_ROUTING,\n        ID_AUTH_ISM,\n        PAUSABLE,\n        PROTOCOL_FEE,\n        LAYER_ZERO_V1,\n        RATE_LIMITED,\n        ARB_L2_TO_L1,\n        OP_L2_TO_L1\n    }\n\n    /**\n     * @notice Returns an enum that represents the type of hook\n     */\n    function hookType() external view returns (uint8);\n\n    /**\n     * @notice Returns whether the hook supports metadata\n     * @param metadata metadata\n     * @return Whether the hook supports metadata\n     */\n    function supportsMetadata(\n        bytes calldata metadata\n    ) external view returns (bool);\n\n    /**\n     * @notice Post action after a message is dispatched via the Mailbox\n     * @param metadata The metadata required for the hook\n     * @param message The message passed from the Mailbox.dispatch() call\n     */\n    function postDispatch(\n        bytes calldata metadata,\n        bytes calldata message\n    ) external payable;\n\n    /**\n     * @notice Compute the payment required by the postDispatch call\n     * @param metadata The metadata required for the hook\n     * @param message The message passed from the Mailbox.dispatch() call\n     * @return Quoted payment for the postDispatch call\n     */\n    function quoteDispatch(\n        bytes calldata metadata,\n        bytes calldata message\n    ) external view returns (uint256);\n}"
      },
      {
        "file_path": "contracts/hyperlane/Structs.sol",
        "source_code": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport \"fhevm/lib/TFHE.sol\";\n\ninterface IZoroCore {\n      struct Game {\n        uint256 threadId;\n        uint256 lastMoveTimestamp;\n        uint32 srcChain;\n        uint8 currentTurn;\n        uint8 playerGoals;\n        uint8 aiGoals;\n        uint8 playerStrikes;\n        uint8 aiStrikes;\n        address player;\n        euint16[] deck;\n        euint16[] player1Hand;\n        euint16[] player2Hand;\n        euint16 player1EncryptedMove;\n        euint16 player2EncryptedMove;\n        bool isActive;\n    }\n\n    struct Character {\n        uint16 id;\n        uint8 pace;\n        uint8 attack;\n        uint8 passing;\n        uint8 defence;\n        address teamFanTokenAddress;\n        string metadata;\n    }\n\n    struct Team {\n        address teamFanTokenAddress;\n        string metadata;\n    }\n}"
      },
      {
        "file_path": "fhevm/lib/ACLAddress.sol",
        "source_code": "// SPDX-License-Identifier: BSD-3-Clause-Clear\n\npragma solidity ^0.8.24;\n\naddress constant aclAdd = 0x2Fb4341027eb1d2aD8B5D9708187df8633cAFA92;\n"
      },
      {
        "file_path": "fhevm/lib/FHEVMCoprocessorAddress.sol",
        "source_code": "// SPDX-License-Identifier: BSD-3-Clause-Clear\n\npragma solidity ^0.8.24;\n\naddress constant fhevmCoprocessorAdd = 0x05fD9B5EFE0a996095f42Ed7e77c390810CF660c;\n"
      },
      {
        "file_path": "fhevm/lib/Impl.sol",
        "source_code": "// SPDX-License-Identifier: BSD-3-Clause-Clear\n\npragma solidity ^0.8.24;\n\nimport \"./TFHE.sol\";\nimport \"./FHEVMCoprocessorAddress.sol\";\nimport \"./ACLAddress.sol\";\n\ninterface IFHEVMCoprocessor {\n    function fheAdd(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheSub(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheMul(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheDiv(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheRem(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheBitAnd(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheBitOr(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheBitXor(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheShl(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheShr(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheRotl(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheRotr(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheEq(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheNe(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheGe(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheGt(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheLe(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheLt(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheMin(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheMax(uint256 lhs, uint256 rhs, bytes1 scalarByte) external returns (uint256 result);\n    function fheNeg(uint256 ct) external returns (uint256 result);\n    function fheNot(uint256 ct) external returns (uint256 result);\n    function verifyCiphertext(\n        bytes32 inputHandle,\n        address callerAddress,\n        bytes memory inputProof,\n        bytes1 inputType\n    ) external returns (uint256 result);\n    function cast(uint256 ct, bytes1 toType) external returns (uint256 result);\n    function trivialEncrypt(uint256 ct, bytes1 toType) external returns (uint256 result);\n    function fheIfThenElse(uint256 control, uint256 ifTrue, uint256 ifFalse) external returns (uint256 result);\n    function fheRand(bytes1 randType) external returns (uint256 result);\n    function fheRandBounded(uint256 upperBound, bytes1 randType) external returns (uint256 result);\n    function cleanTransientStorage() external;\n}\n\ninterface IACL {\n    function allowTransient(uint256 ciphertext, address account) external;\n    function allow(uint256 handle, address account) external;\n    function cleanTransientStorage() external;\n    function isAllowed(uint256 handle, address account) external view returns (bool);\n}\n\nlibrary Impl {\n    function add(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheAdd(lhs, rhs, scalarByte);\n    }\n\n    function sub(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheSub(lhs, rhs, scalarByte);\n    }\n\n    function mul(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheMul(lhs, rhs, scalarByte);\n    }\n\n    function div(uint256 lhs, uint256 rhs) internal returns (uint256 result) {\n        bytes1 scalarByte = 0x01;\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheDiv(lhs, rhs, scalarByte);\n    }\n\n    function rem(uint256 lhs, uint256 rhs) internal returns (uint256 result) {\n        bytes1 scalarByte = 0x01;\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheRem(lhs, rhs, scalarByte);\n    }\n\n    function and(uint256 lhs, uint256 rhs) internal returns (uint256 result) {\n        bytes1 scalarByte = 0x00;\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheBitAnd(lhs, rhs, scalarByte);\n    }\n\n    function or(uint256 lhs, uint256 rhs) internal returns (uint256 result) {\n        bytes1 scalarByte = 0x00;\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheBitOr(lhs, rhs, scalarByte);\n    }\n\n    function xor(uint256 lhs, uint256 rhs) internal returns (uint256 result) {\n        bytes1 scalarByte = 0x00;\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheBitXor(lhs, rhs, scalarByte);\n    }\n\n    function shl(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheShl(lhs, rhs, scalarByte);\n    }\n\n    function shr(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheShr(lhs, rhs, scalarByte);\n    }\n\n    function rotl(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheRotl(lhs, rhs, scalarByte);\n    }\n\n    function rotr(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheRotr(lhs, rhs, scalarByte);\n    }\n\n    function eq(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheEq(lhs, rhs, scalarByte);\n    }\n\n    function ne(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheNe(lhs, rhs, scalarByte);\n    }\n\n    function ge(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheGe(lhs, rhs, scalarByte);\n    }\n\n    function gt(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheGt(lhs, rhs, scalarByte);\n    }\n\n    function le(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheLe(lhs, rhs, scalarByte);\n    }\n\n    function lt(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheLt(lhs, rhs, scalarByte);\n    }\n\n    function min(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheMin(lhs, rhs, scalarByte);\n    }\n\n    function max(uint256 lhs, uint256 rhs, bool scalar) internal returns (uint256 result) {\n        bytes1 scalarByte;\n        if (scalar) {\n            scalarByte = 0x01;\n        } else {\n            scalarByte = 0x00;\n        }\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheMax(lhs, rhs, scalarByte);\n    }\n\n    function neg(uint256 ct) internal returns (uint256 result) {\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheNeg(ct);\n    }\n\n    function not(uint256 ct) internal returns (uint256 result) {\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheNot(ct);\n    }\n\n    // If 'control's value is 'true', the result has the same value as 'ifTrue'.\n    // If 'control's value is 'false', the result has the same value as 'ifFalse'.\n    function select(uint256 control, uint256 ifTrue, uint256 ifFalse) internal returns (uint256 result) {\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheIfThenElse(control, ifTrue, ifFalse);\n    }\n\n    function verify(bytes32 inputHandle, bytes memory inputProof, uint8 toType) internal returns (uint256 result) {\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).verifyCiphertext(\n            inputHandle,\n            msg.sender,\n            inputProof,\n            bytes1(toType)\n        );\n        IACL(aclAdd).allowTransient(result, msg.sender);\n    }\n\n    function cast(uint256 ciphertext, uint8 toType) internal returns (uint256 result) {\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).cast(ciphertext, bytes1(toType));\n    }\n\n    function trivialEncrypt(uint256 value, uint8 toType) internal returns (uint256 result) {\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).trivialEncrypt(value, bytes1(toType));\n    }\n\n    function rand(uint8 randType) internal returns (uint256 result) {\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheRand(bytes1(randType));\n    }\n\n    function randBounded(uint256 upperBound, uint8 randType) internal returns (uint256 result) {\n        result = IFHEVMCoprocessor(fhevmCoprocessorAdd).fheRandBounded(upperBound, bytes1(randType));\n    }\n\n    function allowTransient(uint256 handle, address account) internal {\n        IACL(aclAdd).allowTransient(handle, account);\n    }\n\n    function allow(uint256 handle, address account) internal {\n        IACL(aclAdd).allow(handle, account);\n    }\n\n    function cleanTransientStorage() internal {\n        IACL(aclAdd).cleanTransientStorage();\n        IFHEVMCoprocessor(fhevmCoprocessorAdd).cleanTransientStorage();\n    }\n\n    function isAllowed(uint256 handle, address account) internal view returns (bool) {\n        return IACL(aclAdd).isAllowed(handle, account);\n    }\n}\n"
      },
      {
        "file_path": "fhevm/lib/TFHE.sol",
        "source_code": "// SPDX-License-Identifier: BSD-3-Clause-Clear\n\npragma solidity ^0.8.24;\n\ntype ebool is uint256;\ntype euint4 is uint256;\ntype euint8 is uint256;\ntype euint16 is uint256;\ntype euint32 is uint256;\ntype euint64 is uint256;\ntype eaddress is uint256;\ntype ebytes256 is uint256;\ntype einput is bytes32;\n\nlibrary Common {\n    // Values used to communicate types to the runtime.\n    uint8 internal constant ebool_t = 0;\n    uint8 internal constant euint4_t = 1;\n    uint8 internal constant euint8_t = 2;\n    uint8 internal constant euint16_t = 3;\n    uint8 internal constant euint32_t = 4;\n    uint8 internal constant euint64_t = 5;\n    uint8 internal constant euint128_t = 6;\n    uint8 internal constant euint160_t = 7;\n    uint8 internal constant euint256_t = 8;\n    uint8 internal constant ebytes64_t = 9;\n    uint8 internal constant ebytes128_t = 10;\n    uint8 internal constant ebytes256_t = 11;\n}\n\nimport \"./Impl.sol\";\n\nlibrary TFHE {\n    euint4 constant NIL4 = euint4.wrap(0);\n    euint8 constant NIL8 = euint8.wrap(0);\n    euint16 constant NIL16 = euint16.wrap(0);\n    euint32 constant NIL32 = euint32.wrap(0);\n    euint64 constant NIL64 = euint64.wrap(0);\n\n    // Return true if the enrypted bool is initialized and false otherwise.\n    function isInitialized(ebool v) internal pure returns (bool) {\n        return ebool.unwrap(v) != 0;\n    }\n\n    // Return true if the enrypted integer is initialized and false otherwise.\n    function isInitialized(euint4 v) internal pure returns (bool) {\n        return euint4.unwrap(v) != 0;\n    }\n\n    // Return true if the enrypted integer is initialized and false otherwise.\n    function isInitialized(euint8 v) internal pure returns (bool) {\n        return euint8.unwrap(v) != 0;\n    }\n\n    // Return true if the enrypted integer is initialized and false otherwise.\n    function isInitialized(euint16 v) internal pure returns (bool) {\n        return euint16.unwrap(v) != 0;\n    }\n\n    // Return true if the enrypted integer is initialized and false otherwise.\n    function isInitialized(euint32 v) internal pure returns (bool) {\n        return euint32.unwrap(v) != 0;\n    }\n\n    // Return true if the enrypted integer is initialized and false otherwise.\n    function isInitialized(euint64 v) internal pure returns (bool) {\n        return euint64.unwrap(v) != 0;\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint4 a, euint4 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint4.wrap(Impl.add(euint4.unwrap(a), euint4.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint4 a, euint4 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint4.wrap(Impl.sub(euint4.unwrap(a), euint4.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint4 a, euint4 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint4.wrap(Impl.mul(euint4.unwrap(a), euint4.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint4 a, euint4 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint4.wrap(Impl.and(euint4.unwrap(a), euint4.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint4 a, euint4 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint4.wrap(Impl.or(euint4.unwrap(a), euint4.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint4 a, euint4 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint4.wrap(Impl.xor(euint4.unwrap(a), euint4.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint4 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.eq(euint4.unwrap(a), euint4.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint4 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.ne(euint4.unwrap(a), euint4.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint4 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.ge(euint4.unwrap(a), euint4.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint4 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.gt(euint4.unwrap(a), euint4.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint4 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.le(euint4.unwrap(a), euint4.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint4 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.lt(euint4.unwrap(a), euint4.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint4 a, euint4 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint4.wrap(Impl.min(euint4.unwrap(a), euint4.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint4 a, euint4 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint4.wrap(Impl.max(euint4.unwrap(a), euint4.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint4 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.add(euint8.unwrap(asEuint8(a)), euint8.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint4 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.sub(euint8.unwrap(asEuint8(a)), euint8.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint4 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.mul(euint8.unwrap(asEuint8(a)), euint8.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint4 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.and(euint8.unwrap(asEuint8(a)), euint8.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint4 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.or(euint8.unwrap(asEuint8(a)), euint8.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint4 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.xor(euint8.unwrap(asEuint8(a)), euint8.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint4 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.eq(euint8.unwrap(asEuint8(a)), euint8.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint4 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.ne(euint8.unwrap(asEuint8(a)), euint8.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint4 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.ge(euint8.unwrap(asEuint8(a)), euint8.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint4 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.gt(euint8.unwrap(asEuint8(a)), euint8.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint4 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.le(euint8.unwrap(asEuint8(a)), euint8.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint4 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.lt(euint8.unwrap(asEuint8(a)), euint8.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint4 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.min(euint8.unwrap(asEuint8(a)), euint8.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint4 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.max(euint8.unwrap(asEuint8(a)), euint8.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint4 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.add(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint4 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.sub(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint4 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.mul(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint4 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.and(euint16.unwrap(asEuint16(a)), euint16.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint4 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.or(euint16.unwrap(asEuint16(a)), euint16.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint4 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.xor(euint16.unwrap(asEuint16(a)), euint16.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint4 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.eq(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint4 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.ne(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint4 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.ge(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint4 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.gt(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint4 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.le(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint4 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.lt(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint4 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.min(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint4 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.max(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint4 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.add(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint4 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.sub(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint4 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.mul(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint4 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.and(euint32.unwrap(asEuint32(a)), euint32.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint4 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.or(euint32.unwrap(asEuint32(a)), euint32.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint4 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.xor(euint32.unwrap(asEuint32(a)), euint32.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint4 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.eq(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint4 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.ne(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint4 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.ge(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint4 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.gt(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint4 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.le(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint4 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.lt(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint4 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.min(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint4 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.max(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint4 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.add(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint4 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.sub(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint4 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.mul(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint4 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.and(euint64.unwrap(asEuint64(a)), euint64.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint4 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.or(euint64.unwrap(asEuint64(a)), euint64.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint4 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.xor(euint64.unwrap(asEuint64(a)), euint64.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint4 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.eq(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint4 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.ne(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint4 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.ge(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint4 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.gt(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint4 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.le(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint4 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.lt(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint4 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.min(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint4 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.max(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint4 a, uint8 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return euint4.wrap(Impl.add(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(uint8 a, euint4 b) internal returns (euint4) {\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint4.wrap(Impl.add(euint4.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint4 a, uint8 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return euint4.wrap(Impl.sub(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(uint8 a, euint4 b) internal returns (euint4) {\n        euint4 aEnc = asEuint4(a);\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint4.wrap(Impl.sub(euint4.unwrap(aEnc), euint4.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint4 a, uint8 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return euint4.wrap(Impl.mul(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(uint8 a, euint4 b) internal returns (euint4) {\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint4.wrap(Impl.mul(euint4.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate div(a, b) and return the result.\n    function div(euint4 a, uint8 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return euint4.wrap(Impl.div(euint4.unwrap(a), uint256(b)));\n    }\n\n    // Evaluate rem(a, b) and return the result.\n    function rem(euint4 a, uint8 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return euint4.wrap(Impl.rem(euint4.unwrap(a), uint256(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint4 a, uint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return ebool.wrap(Impl.eq(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(uint8 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.eq(euint4.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint4 a, uint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return ebool.wrap(Impl.ne(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(uint8 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.ne(euint4.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint4 a, uint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return ebool.wrap(Impl.ge(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(uint8 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.le(euint4.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint4 a, uint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return ebool.wrap(Impl.gt(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(uint8 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.lt(euint4.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint4 a, uint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return ebool.wrap(Impl.le(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(uint8 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.ge(euint4.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint4 a, uint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return ebool.wrap(Impl.lt(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(uint8 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.gt(euint4.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint4 a, uint8 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return euint4.wrap(Impl.min(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(uint8 a, euint4 b) internal returns (euint4) {\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint4.wrap(Impl.min(euint4.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint4 a, uint8 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return euint4.wrap(Impl.max(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(uint8 a, euint4 b) internal returns (euint4) {\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint4.wrap(Impl.max(euint4.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint8 a, euint4 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint8.wrap(Impl.add(euint8.unwrap(a), euint8.unwrap(asEuint8(b)), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint8 a, euint4 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint8.wrap(Impl.sub(euint8.unwrap(a), euint8.unwrap(asEuint8(b)), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint8 a, euint4 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint8.wrap(Impl.mul(euint8.unwrap(a), euint8.unwrap(asEuint8(b)), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint8 a, euint4 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint8.wrap(Impl.and(euint8.unwrap(a), euint8.unwrap(asEuint8(b))));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint8 a, euint4 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint8.wrap(Impl.or(euint8.unwrap(a), euint8.unwrap(asEuint8(b))));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint8 a, euint4 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint8.wrap(Impl.xor(euint8.unwrap(a), euint8.unwrap(asEuint8(b))));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint8 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.eq(euint8.unwrap(a), euint8.unwrap(asEuint8(b)), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint8 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.ne(euint8.unwrap(a), euint8.unwrap(asEuint8(b)), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint8 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.ge(euint8.unwrap(a), euint8.unwrap(asEuint8(b)), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint8 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.gt(euint8.unwrap(a), euint8.unwrap(asEuint8(b)), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint8 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.le(euint8.unwrap(a), euint8.unwrap(asEuint8(b)), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint8 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.lt(euint8.unwrap(a), euint8.unwrap(asEuint8(b)), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint8 a, euint4 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint8.wrap(Impl.min(euint8.unwrap(a), euint8.unwrap(asEuint8(b)), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint8 a, euint4 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint8.wrap(Impl.max(euint8.unwrap(a), euint8.unwrap(asEuint8(b)), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.add(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.sub(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.mul(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.and(euint8.unwrap(a), euint8.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.or(euint8.unwrap(a), euint8.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.xor(euint8.unwrap(a), euint8.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint8 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.eq(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint8 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.ne(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint8 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.ge(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint8 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.gt(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint8 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.le(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint8 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.lt(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.min(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.max(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint8 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.add(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint8 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.sub(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint8 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.mul(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint8 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.and(euint16.unwrap(asEuint16(a)), euint16.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint8 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.or(euint16.unwrap(asEuint16(a)), euint16.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint8 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.xor(euint16.unwrap(asEuint16(a)), euint16.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint8 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.eq(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint8 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.ne(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint8 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.ge(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint8 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.gt(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint8 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.le(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint8 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.lt(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint8 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.min(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint8 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.max(euint16.unwrap(asEuint16(a)), euint16.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint8 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.add(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint8 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.sub(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint8 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.mul(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint8 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.and(euint32.unwrap(asEuint32(a)), euint32.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint8 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.or(euint32.unwrap(asEuint32(a)), euint32.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint8 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.xor(euint32.unwrap(asEuint32(a)), euint32.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint8 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.eq(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint8 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.ne(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint8 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.ge(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint8 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.gt(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint8 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.le(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint8 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.lt(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint8 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.min(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint8 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.max(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint8 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.add(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint8 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.sub(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint8 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.mul(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint8 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.and(euint64.unwrap(asEuint64(a)), euint64.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint8 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.or(euint64.unwrap(asEuint64(a)), euint64.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint8 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.xor(euint64.unwrap(asEuint64(a)), euint64.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint8 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.eq(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint8 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.ne(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint8 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.ge(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint8 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.gt(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint8 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.le(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint8 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.lt(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint8 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.min(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint8 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.max(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint8 a, uint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return euint8.wrap(Impl.add(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(uint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.add(euint8.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint8 a, uint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return euint8.wrap(Impl.sub(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(uint8 a, euint8 b) internal returns (euint8) {\n        euint8 aEnc = asEuint8(a);\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.sub(euint8.unwrap(aEnc), euint8.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint8 a, uint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return euint8.wrap(Impl.mul(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(uint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.mul(euint8.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate div(a, b) and return the result.\n    function div(euint8 a, uint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return euint8.wrap(Impl.div(euint8.unwrap(a), uint256(b)));\n    }\n\n    // Evaluate rem(a, b) and return the result.\n    function rem(euint8 a, uint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return euint8.wrap(Impl.rem(euint8.unwrap(a), uint256(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint8 a, uint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return ebool.wrap(Impl.eq(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(uint8 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.eq(euint8.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint8 a, uint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return ebool.wrap(Impl.ne(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(uint8 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.ne(euint8.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint8 a, uint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return ebool.wrap(Impl.ge(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(uint8 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.le(euint8.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint8 a, uint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return ebool.wrap(Impl.gt(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(uint8 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.lt(euint8.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint8 a, uint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return ebool.wrap(Impl.le(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(uint8 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.ge(euint8.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint8 a, uint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return ebool.wrap(Impl.lt(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(uint8 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.gt(euint8.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint8 a, uint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return euint8.wrap(Impl.min(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(uint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.min(euint8.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint8 a, uint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return euint8.wrap(Impl.max(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(uint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.max(euint8.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint16 a, euint4 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint16.wrap(Impl.add(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint16 a, euint4 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint16.wrap(Impl.sub(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint16 a, euint4 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint16.wrap(Impl.mul(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint16 a, euint4 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint16.wrap(Impl.and(euint16.unwrap(a), euint16.unwrap(asEuint16(b))));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint16 a, euint4 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint16.wrap(Impl.or(euint16.unwrap(a), euint16.unwrap(asEuint16(b))));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint16 a, euint4 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint16.wrap(Impl.xor(euint16.unwrap(a), euint16.unwrap(asEuint16(b))));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint16 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.eq(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint16 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.ne(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint16 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.ge(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint16 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.gt(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint16 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.le(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint16 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.lt(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint16 a, euint4 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint16.wrap(Impl.min(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint16 a, euint4 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint16.wrap(Impl.max(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint16 a, euint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint16.wrap(Impl.add(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint16 a, euint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint16.wrap(Impl.sub(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint16 a, euint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint16.wrap(Impl.mul(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint16 a, euint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint16.wrap(Impl.and(euint16.unwrap(a), euint16.unwrap(asEuint16(b))));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint16 a, euint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint16.wrap(Impl.or(euint16.unwrap(a), euint16.unwrap(asEuint16(b))));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint16 a, euint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint16.wrap(Impl.xor(euint16.unwrap(a), euint16.unwrap(asEuint16(b))));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint16 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.eq(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint16 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.ne(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint16 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.ge(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint16 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.gt(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint16 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.le(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint16 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.lt(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint16 a, euint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint16.wrap(Impl.min(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint16 a, euint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint16.wrap(Impl.max(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint16 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.add(euint16.unwrap(a), euint16.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint16 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.sub(euint16.unwrap(a), euint16.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint16 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.mul(euint16.unwrap(a), euint16.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint16 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.and(euint16.unwrap(a), euint16.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint16 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.or(euint16.unwrap(a), euint16.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint16 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.xor(euint16.unwrap(a), euint16.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint16 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.eq(euint16.unwrap(a), euint16.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint16 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.ne(euint16.unwrap(a), euint16.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint16 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.ge(euint16.unwrap(a), euint16.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint16 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.gt(euint16.unwrap(a), euint16.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint16 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.le(euint16.unwrap(a), euint16.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint16 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.lt(euint16.unwrap(a), euint16.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint16 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.min(euint16.unwrap(a), euint16.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint16 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.max(euint16.unwrap(a), euint16.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint16 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.add(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint16 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.sub(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint16 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.mul(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint16 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.and(euint32.unwrap(asEuint32(a)), euint32.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint16 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.or(euint32.unwrap(asEuint32(a)), euint32.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint16 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.xor(euint32.unwrap(asEuint32(a)), euint32.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint16 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.eq(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint16 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.ne(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint16 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.ge(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint16 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.gt(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint16 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.le(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint16 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.lt(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint16 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.min(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint16 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.max(euint32.unwrap(asEuint32(a)), euint32.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint16 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.add(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint16 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.sub(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint16 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.mul(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint16 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.and(euint64.unwrap(asEuint64(a)), euint64.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint16 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.or(euint64.unwrap(asEuint64(a)), euint64.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint16 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.xor(euint64.unwrap(asEuint64(a)), euint64.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint16 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.eq(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint16 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.ne(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint16 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.ge(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint16 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.gt(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint16 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.le(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint16 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.lt(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint16 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.min(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint16 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.max(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint16 a, uint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return euint16.wrap(Impl.add(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(uint16 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.add(euint16.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint16 a, uint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return euint16.wrap(Impl.sub(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(uint16 a, euint16 b) internal returns (euint16) {\n        euint16 aEnc = asEuint16(a);\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.sub(euint16.unwrap(aEnc), euint16.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint16 a, uint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return euint16.wrap(Impl.mul(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(uint16 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.mul(euint16.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate div(a, b) and return the result.\n    function div(euint16 a, uint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return euint16.wrap(Impl.div(euint16.unwrap(a), uint256(b)));\n    }\n\n    // Evaluate rem(a, b) and return the result.\n    function rem(euint16 a, uint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return euint16.wrap(Impl.rem(euint16.unwrap(a), uint256(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint16 a, uint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return ebool.wrap(Impl.eq(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(uint16 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.eq(euint16.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint16 a, uint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return ebool.wrap(Impl.ne(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(uint16 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.ne(euint16.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint16 a, uint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return ebool.wrap(Impl.ge(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(uint16 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.le(euint16.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint16 a, uint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return ebool.wrap(Impl.gt(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(uint16 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.lt(euint16.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint16 a, uint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return ebool.wrap(Impl.le(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(uint16 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.ge(euint16.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint16 a, uint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return ebool.wrap(Impl.lt(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(uint16 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.gt(euint16.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint16 a, uint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return euint16.wrap(Impl.min(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(uint16 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.min(euint16.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint16 a, uint16 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return euint16.wrap(Impl.max(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(uint16 a, euint16 b) internal returns (euint16) {\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint16.wrap(Impl.max(euint16.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint32 a, euint4 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint32.wrap(Impl.add(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint32 a, euint4 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint32.wrap(Impl.sub(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint32 a, euint4 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint32.wrap(Impl.mul(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint32 a, euint4 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint32.wrap(Impl.and(euint32.unwrap(a), euint32.unwrap(asEuint32(b))));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint32 a, euint4 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint32.wrap(Impl.or(euint32.unwrap(a), euint32.unwrap(asEuint32(b))));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint32 a, euint4 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint32.wrap(Impl.xor(euint32.unwrap(a), euint32.unwrap(asEuint32(b))));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint32 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.eq(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint32 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.ne(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint32 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.ge(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint32 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.gt(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint32 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.le(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint32 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.lt(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint32 a, euint4 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint32.wrap(Impl.min(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint32 a, euint4 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint32.wrap(Impl.max(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint32 a, euint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint32.wrap(Impl.add(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint32 a, euint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint32.wrap(Impl.sub(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint32 a, euint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint32.wrap(Impl.mul(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint32 a, euint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint32.wrap(Impl.and(euint32.unwrap(a), euint32.unwrap(asEuint32(b))));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint32 a, euint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint32.wrap(Impl.or(euint32.unwrap(a), euint32.unwrap(asEuint32(b))));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint32 a, euint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint32.wrap(Impl.xor(euint32.unwrap(a), euint32.unwrap(asEuint32(b))));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint32 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.eq(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint32 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.ne(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint32 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.ge(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint32 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.gt(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint32 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.le(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint32 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.lt(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint32 a, euint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint32.wrap(Impl.min(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint32 a, euint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint32.wrap(Impl.max(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint32 a, euint16 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint32.wrap(Impl.add(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint32 a, euint16 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint32.wrap(Impl.sub(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint32 a, euint16 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint32.wrap(Impl.mul(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint32 a, euint16 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint32.wrap(Impl.and(euint32.unwrap(a), euint32.unwrap(asEuint32(b))));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint32 a, euint16 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint32.wrap(Impl.or(euint32.unwrap(a), euint32.unwrap(asEuint32(b))));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint32 a, euint16 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint32.wrap(Impl.xor(euint32.unwrap(a), euint32.unwrap(asEuint32(b))));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint32 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.eq(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint32 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.ne(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint32 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.ge(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint32 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.gt(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint32 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.le(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint32 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.lt(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint32 a, euint16 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint32.wrap(Impl.min(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint32 a, euint16 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint32.wrap(Impl.max(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint32 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.add(euint32.unwrap(a), euint32.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint32 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.sub(euint32.unwrap(a), euint32.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint32 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.mul(euint32.unwrap(a), euint32.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint32 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.and(euint32.unwrap(a), euint32.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint32 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.or(euint32.unwrap(a), euint32.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint32 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.xor(euint32.unwrap(a), euint32.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint32 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.eq(euint32.unwrap(a), euint32.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint32 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.ne(euint32.unwrap(a), euint32.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint32 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.ge(euint32.unwrap(a), euint32.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint32 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.gt(euint32.unwrap(a), euint32.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint32 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.le(euint32.unwrap(a), euint32.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint32 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.lt(euint32.unwrap(a), euint32.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint32 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.min(euint32.unwrap(a), euint32.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint32 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.max(euint32.unwrap(a), euint32.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint32 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.add(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint32 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.sub(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint32 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.mul(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint32 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.and(euint64.unwrap(asEuint64(a)), euint64.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint32 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.or(euint64.unwrap(asEuint64(a)), euint64.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint32 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.xor(euint64.unwrap(asEuint64(a)), euint64.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint32 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.eq(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint32 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.ne(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint32 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.ge(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint32 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.gt(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint32 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.le(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint32 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.lt(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint32 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.min(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint32 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.max(euint64.unwrap(asEuint64(a)), euint64.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint32 a, uint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return euint32.wrap(Impl.add(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(uint32 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.add(euint32.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint32 a, uint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return euint32.wrap(Impl.sub(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(uint32 a, euint32 b) internal returns (euint32) {\n        euint32 aEnc = asEuint32(a);\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.sub(euint32.unwrap(aEnc), euint32.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint32 a, uint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return euint32.wrap(Impl.mul(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(uint32 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.mul(euint32.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate div(a, b) and return the result.\n    function div(euint32 a, uint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return euint32.wrap(Impl.div(euint32.unwrap(a), uint256(b)));\n    }\n\n    // Evaluate rem(a, b) and return the result.\n    function rem(euint32 a, uint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return euint32.wrap(Impl.rem(euint32.unwrap(a), uint256(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint32 a, uint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return ebool.wrap(Impl.eq(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(uint32 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.eq(euint32.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint32 a, uint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return ebool.wrap(Impl.ne(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(uint32 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.ne(euint32.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint32 a, uint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return ebool.wrap(Impl.ge(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(uint32 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.le(euint32.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint32 a, uint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return ebool.wrap(Impl.gt(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(uint32 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.lt(euint32.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint32 a, uint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return ebool.wrap(Impl.le(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(uint32 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.ge(euint32.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint32 a, uint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return ebool.wrap(Impl.lt(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(uint32 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.gt(euint32.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint32 a, uint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return euint32.wrap(Impl.min(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(uint32 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.min(euint32.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint32 a, uint32 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return euint32.wrap(Impl.max(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(uint32 a, euint32 b) internal returns (euint32) {\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint32.wrap(Impl.max(euint32.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint64 a, euint4 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint64.wrap(Impl.add(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint64 a, euint4 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint64.wrap(Impl.sub(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint64 a, euint4 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint64.wrap(Impl.mul(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint64 a, euint4 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint64.wrap(Impl.and(euint64.unwrap(a), euint64.unwrap(asEuint64(b))));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint64 a, euint4 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint64.wrap(Impl.or(euint64.unwrap(a), euint64.unwrap(asEuint64(b))));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint64 a, euint4 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint64.wrap(Impl.xor(euint64.unwrap(a), euint64.unwrap(asEuint64(b))));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint64 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.eq(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint64 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.ne(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint64 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.ge(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint64 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.gt(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint64 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.le(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint64 a, euint4 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return ebool.wrap(Impl.lt(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint64 a, euint4 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint64.wrap(Impl.min(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint64 a, euint4 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint4(0);\n        }\n        return euint64.wrap(Impl.max(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint64 a, euint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint64.wrap(Impl.add(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint64 a, euint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint64.wrap(Impl.sub(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint64 a, euint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint64.wrap(Impl.mul(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint64 a, euint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint64.wrap(Impl.and(euint64.unwrap(a), euint64.unwrap(asEuint64(b))));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint64 a, euint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint64.wrap(Impl.or(euint64.unwrap(a), euint64.unwrap(asEuint64(b))));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint64 a, euint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint64.wrap(Impl.xor(euint64.unwrap(a), euint64.unwrap(asEuint64(b))));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint64 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.eq(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint64 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.ne(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint64 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.ge(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint64 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.gt(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint64 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.le(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint64 a, euint8 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return ebool.wrap(Impl.lt(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint64 a, euint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint64.wrap(Impl.min(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint64 a, euint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint64.wrap(Impl.max(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint64 a, euint16 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint64.wrap(Impl.add(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint64 a, euint16 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint64.wrap(Impl.sub(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint64 a, euint16 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint64.wrap(Impl.mul(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint64 a, euint16 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint64.wrap(Impl.and(euint64.unwrap(a), euint64.unwrap(asEuint64(b))));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint64 a, euint16 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint64.wrap(Impl.or(euint64.unwrap(a), euint64.unwrap(asEuint64(b))));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint64 a, euint16 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint64.wrap(Impl.xor(euint64.unwrap(a), euint64.unwrap(asEuint64(b))));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint64 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.eq(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint64 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.ne(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint64 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.ge(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint64 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.gt(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint64 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.le(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint64 a, euint16 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return ebool.wrap(Impl.lt(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint64 a, euint16 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint64.wrap(Impl.min(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint64 a, euint16 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint16(0);\n        }\n        return euint64.wrap(Impl.max(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint64 a, euint32 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint64.wrap(Impl.add(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint64 a, euint32 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint64.wrap(Impl.sub(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint64 a, euint32 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint64.wrap(Impl.mul(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint64 a, euint32 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint64.wrap(Impl.and(euint64.unwrap(a), euint64.unwrap(asEuint64(b))));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint64 a, euint32 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint64.wrap(Impl.or(euint64.unwrap(a), euint64.unwrap(asEuint64(b))));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint64 a, euint32 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint64.wrap(Impl.xor(euint64.unwrap(a), euint64.unwrap(asEuint64(b))));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint64 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.eq(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint64 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.ne(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint64 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.ge(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint64 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.gt(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint64 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.le(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint64 a, euint32 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return ebool.wrap(Impl.lt(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint64 a, euint32 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint64.wrap(Impl.min(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint64 a, euint32 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint32(0);\n        }\n        return euint64.wrap(Impl.max(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint64 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.add(euint64.unwrap(a), euint64.unwrap(b), false));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint64 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.sub(euint64.unwrap(a), euint64.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint64 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.mul(euint64.unwrap(a), euint64.unwrap(b), false));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(euint64 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.and(euint64.unwrap(a), euint64.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(euint64 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.or(euint64.unwrap(a), euint64.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(euint64 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.xor(euint64.unwrap(a), euint64.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint64 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.eq(euint64.unwrap(a), euint64.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint64 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.ne(euint64.unwrap(a), euint64.unwrap(b), false));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint64 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.ge(euint64.unwrap(a), euint64.unwrap(b), false));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint64 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.gt(euint64.unwrap(a), euint64.unwrap(b), false));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint64 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.le(euint64.unwrap(a), euint64.unwrap(b), false));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint64 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.lt(euint64.unwrap(a), euint64.unwrap(b), false));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint64 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.min(euint64.unwrap(a), euint64.unwrap(b), false));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint64 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.max(euint64.unwrap(a), euint64.unwrap(b), false));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(euint64 a, uint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return euint64.wrap(Impl.add(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate add(a, b) and return the result.\n    function add(uint64 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.add(euint64.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(euint64 a, uint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return euint64.wrap(Impl.sub(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate sub(a, b) and return the result.\n    function sub(uint64 a, euint64 b) internal returns (euint64) {\n        euint64 aEnc = asEuint64(a);\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.sub(euint64.unwrap(aEnc), euint64.unwrap(b), false));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(euint64 a, uint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return euint64.wrap(Impl.mul(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate mul(a, b) and return the result.\n    function mul(uint64 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.mul(euint64.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate div(a, b) and return the result.\n    function div(euint64 a, uint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return euint64.wrap(Impl.div(euint64.unwrap(a), uint256(b)));\n    }\n\n    // Evaluate rem(a, b) and return the result.\n    function rem(euint64 a, uint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return euint64.wrap(Impl.rem(euint64.unwrap(a), uint256(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(euint64 a, uint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return ebool.wrap(Impl.eq(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(uint64 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.eq(euint64.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(euint64 a, uint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return ebool.wrap(Impl.ne(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(uint64 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.ne(euint64.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(euint64 a, uint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return ebool.wrap(Impl.ge(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate ge(a, b) and return the result.\n    function ge(uint64 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.le(euint64.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(euint64 a, uint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return ebool.wrap(Impl.gt(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate gt(a, b) and return the result.\n    function gt(uint64 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.lt(euint64.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(euint64 a, uint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return ebool.wrap(Impl.le(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate le(a, b) and return the result.\n    function le(uint64 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.ge(euint64.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(euint64 a, uint64 b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return ebool.wrap(Impl.lt(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate lt(a, b) and return the result.\n    function lt(uint64 a, euint64 b) internal returns (ebool) {\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return ebool.wrap(Impl.gt(euint64.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(euint64 a, uint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return euint64.wrap(Impl.min(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate min(a, b) and return the result.\n    function min(uint64 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.min(euint64.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(euint64 a, uint64 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return euint64.wrap(Impl.max(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate max(a, b) and return the result.\n    function max(uint64 a, euint64 b) internal returns (euint64) {\n        if (!isInitialized(b)) {\n            b = asEuint64(0);\n        }\n        return euint64.wrap(Impl.max(euint64.unwrap(b), uint256(a), true));\n    }\n\n    // Evaluate shl(a, b) and return the result.\n    function shl(euint4 a, uint8 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return euint4.wrap(Impl.shl(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate shr(a, b) and return the result.\n    function shr(euint4 a, uint8 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return euint4.wrap(Impl.shr(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate rotl(a, b) and return the result.\n    function rotl(euint4 a, uint8 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return euint4.wrap(Impl.rotl(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate rotr(a, b) and return the result.\n    function rotr(euint4 a, uint8 b) internal returns (euint4) {\n        if (!isInitialized(a)) {\n            a = asEuint4(0);\n        }\n        return euint4.wrap(Impl.rotr(euint4.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate shl(a, b) and return the result.\n    function shl(euint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.shl(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate shl(a, b) and return the result.\n    function shl(euint8 a, uint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return euint8.wrap(Impl.shl(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate shr(a, b) and return the result.\n    function shr(euint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.shr(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate shr(a, b) and return the result.\n    function shr(euint8 a, uint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return euint8.wrap(Impl.shr(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate rotl(a, b) and return the result.\n    function rotl(euint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.rotl(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate rotl(a, b) and return the result.\n    function rotl(euint8 a, uint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return euint8.wrap(Impl.rotl(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate rotr(a, b) and return the result.\n    function rotr(euint8 a, euint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint8.wrap(Impl.rotr(euint8.unwrap(a), euint8.unwrap(b), false));\n    }\n\n    // Evaluate rotr(a, b) and return the result.\n    function rotr(euint8 a, uint8 b) internal returns (euint8) {\n        if (!isInitialized(a)) {\n            a = asEuint8(0);\n        }\n        return euint8.wrap(Impl.rotr(euint8.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate shl(a, b) and return the result.\n    function shl(euint16 a, euint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint16.wrap(Impl.shl(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate shl(a, b) and return the result.\n    function shl(euint16 a, uint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return euint16.wrap(Impl.shl(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate shr(a, b) and return the result.\n    function shr(euint16 a, euint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint16.wrap(Impl.shr(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate shr(a, b) and return the result.\n    function shr(euint16 a, uint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return euint16.wrap(Impl.shr(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate rotl(a, b) and return the result.\n    function rotl(euint16 a, euint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint16.wrap(Impl.rotl(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate rotl(a, b) and return the result.\n    function rotl(euint16 a, uint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return euint16.wrap(Impl.rotl(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate rotr(a, b) and return the result.\n    function rotr(euint16 a, euint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint16.wrap(Impl.rotr(euint16.unwrap(a), euint16.unwrap(asEuint16(b)), false));\n    }\n\n    // Evaluate rotr(a, b) and return the result.\n    function rotr(euint16 a, uint8 b) internal returns (euint16) {\n        if (!isInitialized(a)) {\n            a = asEuint16(0);\n        }\n        return euint16.wrap(Impl.rotr(euint16.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate shl(a, b) and return the result.\n    function shl(euint32 a, euint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint32.wrap(Impl.shl(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate shl(a, b) and return the result.\n    function shl(euint32 a, uint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return euint32.wrap(Impl.shl(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate shr(a, b) and return the result.\n    function shr(euint32 a, euint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint32.wrap(Impl.shr(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate shr(a, b) and return the result.\n    function shr(euint32 a, uint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return euint32.wrap(Impl.shr(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate rotl(a, b) and return the result.\n    function rotl(euint32 a, euint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint32.wrap(Impl.rotl(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate rotl(a, b) and return the result.\n    function rotl(euint32 a, uint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return euint32.wrap(Impl.rotl(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate rotr(a, b) and return the result.\n    function rotr(euint32 a, euint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint32.wrap(Impl.rotr(euint32.unwrap(a), euint32.unwrap(asEuint32(b)), false));\n    }\n\n    // Evaluate rotr(a, b) and return the result.\n    function rotr(euint32 a, uint8 b) internal returns (euint32) {\n        if (!isInitialized(a)) {\n            a = asEuint32(0);\n        }\n        return euint32.wrap(Impl.rotr(euint32.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate shl(a, b) and return the result.\n    function shl(euint64 a, euint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint64.wrap(Impl.shl(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate shl(a, b) and return the result.\n    function shl(euint64 a, uint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return euint64.wrap(Impl.shl(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate shr(a, b) and return the result.\n    function shr(euint64 a, euint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint64.wrap(Impl.shr(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate shr(a, b) and return the result.\n    function shr(euint64 a, uint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return euint64.wrap(Impl.shr(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate rotl(a, b) and return the result.\n    function rotl(euint64 a, euint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint64.wrap(Impl.rotl(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate rotl(a, b) and return the result.\n    function rotl(euint64 a, uint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return euint64.wrap(Impl.rotl(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // Evaluate rotr(a, b) and return the result.\n    function rotr(euint64 a, euint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        if (!isInitialized(b)) {\n            b = asEuint8(0);\n        }\n        return euint64.wrap(Impl.rotr(euint64.unwrap(a), euint64.unwrap(asEuint64(b)), false));\n    }\n\n    // Evaluate rotr(a, b) and return the result.\n    function rotr(euint64 a, uint8 b) internal returns (euint64) {\n        if (!isInitialized(a)) {\n            a = asEuint64(0);\n        }\n        return euint64.wrap(Impl.rotr(euint64.unwrap(a), uint256(b), true));\n    }\n\n    // If 'control''s value is 'true', the result has the same value as 'a'.\n    // If 'control''s value is 'false', the result has the same value as 'b'.\n    function select(ebool control, euint4 a, euint4 b) internal returns (euint4) {\n        return euint4.wrap(Impl.select(ebool.unwrap(control), euint4.unwrap(a), euint4.unwrap(b)));\n    }\n    // If 'control''s value is 'true', the result has the same value as 'a'.\n    // If 'control''s value is 'false', the result has the same value as 'b'.\n    function select(ebool control, euint8 a, euint8 b) internal returns (euint8) {\n        return euint8.wrap(Impl.select(ebool.unwrap(control), euint8.unwrap(a), euint8.unwrap(b)));\n    }\n    // If 'control''s value is 'true', the result has the same value as 'a'.\n    // If 'control''s value is 'false', the result has the same value as 'b'.\n    function select(ebool control, euint16 a, euint16 b) internal returns (euint16) {\n        return euint16.wrap(Impl.select(ebool.unwrap(control), euint16.unwrap(a), euint16.unwrap(b)));\n    }\n    // If 'control''s value is 'true', the result has the same value as 'a'.\n    // If 'control''s value is 'false', the result has the same value as 'b'.\n    function select(ebool control, euint32 a, euint32 b) internal returns (euint32) {\n        return euint32.wrap(Impl.select(ebool.unwrap(control), euint32.unwrap(a), euint32.unwrap(b)));\n    }\n    // If 'control''s value is 'true', the result has the same value as 'a'.\n    // If 'control''s value is 'false', the result has the same value as 'b'.\n    function select(ebool control, euint64 a, euint64 b) internal returns (euint64) {\n        return euint64.wrap(Impl.select(ebool.unwrap(control), euint64.unwrap(a), euint64.unwrap(b)));\n    }\n    // Cast an encrypted integer from euint8 to euint4.\n    function asEuint4(euint8 value) internal returns (euint4) {\n        return euint4.wrap(Impl.cast(euint8.unwrap(value), Common.euint4_t));\n    }\n\n    // Cast an encrypted integer from euint16 to euint4.\n    function asEuint4(euint16 value) internal returns (euint4) {\n        return euint4.wrap(Impl.cast(euint16.unwrap(value), Common.euint4_t));\n    }\n\n    // Cast an encrypted integer from euint32 to euint4.\n    function asEuint4(euint32 value) internal returns (euint4) {\n        return euint4.wrap(Impl.cast(euint32.unwrap(value), Common.euint4_t));\n    }\n\n    // Cast an encrypted integer from euint64 to euint4.\n    function asEuint4(euint64 value) internal returns (euint4) {\n        return euint4.wrap(Impl.cast(euint64.unwrap(value), Common.euint4_t));\n    }\n\n    // Cast an encrypted integer from euint4 to ebool.\n    function asEbool(euint4 value) internal returns (ebool) {\n        return ne(value, 0);\n    }\n\n    // Converts an 'ebool' to an 'euint4'.\n    function asEuint4(ebool b) internal returns (euint4) {\n        return euint4.wrap(Impl.cast(ebool.unwrap(b), Common.euint4_t));\n    }\n\n    // Cast an encrypted integer from euint4 to euint8.\n    function asEuint8(euint4 value) internal returns (euint8) {\n        return euint8.wrap(Impl.cast(euint4.unwrap(value), Common.euint8_t));\n    }\n\n    // Cast an encrypted integer from euint16 to euint8.\n    function asEuint8(euint16 value) internal returns (euint8) {\n        return euint8.wrap(Impl.cast(euint16.unwrap(value), Common.euint8_t));\n    }\n\n    // Cast an encrypted integer from euint32 to euint8.\n    function asEuint8(euint32 value) internal returns (euint8) {\n        return euint8.wrap(Impl.cast(euint32.unwrap(value), Common.euint8_t));\n    }\n\n    // Cast an encrypted integer from euint64 to euint8.\n    function asEuint8(euint64 value) internal returns (euint8) {\n        return euint8.wrap(Impl.cast(euint64.unwrap(value), Common.euint8_t));\n    }\n\n    // Cast an encrypted integer from euint8 to ebool.\n    function asEbool(euint8 value) internal returns (ebool) {\n        return ne(value, 0);\n    }\n\n    // Convert an inputHandle with corresponding inputProof to an encrypted boolean.\n    function asEbool(einput inputHandle, bytes memory inputProof) internal returns (ebool) {\n        return ebool.wrap(Impl.verify(einput.unwrap(inputHandle), inputProof, Common.ebool_t));\n    }\n\n    // Convert a plaintext value to an encrypted boolean.\n    function asEbool(uint256 value) internal returns (ebool) {\n        return ebool.wrap(Impl.trivialEncrypt(value, Common.ebool_t));\n    }\n\n    // Convert a plaintext boolean to an encrypted boolean.\n    function asEbool(bool value) internal returns (ebool) {\n        if (value) {\n            return asEbool(1);\n        } else {\n            return asEbool(0);\n        }\n    }\n\n    // Converts an 'ebool' to an 'euint8'.\n    function asEuint8(ebool value) internal returns (euint8) {\n        return euint8.wrap(Impl.cast(ebool.unwrap(value), Common.euint8_t));\n    }\n\n    // Evaluate and(a, b) and return the result.\n    function and(ebool a, ebool b) internal returns (ebool) {\n        return ebool.wrap(Impl.and(ebool.unwrap(a), ebool.unwrap(b)));\n    }\n\n    // Evaluate or(a, b) and return the result.\n    function or(ebool a, ebool b) internal returns (ebool) {\n        return ebool.wrap(Impl.or(ebool.unwrap(a), ebool.unwrap(b)));\n    }\n\n    // Evaluate xor(a, b) and return the result.\n    function xor(ebool a, ebool b) internal returns (ebool) {\n        return ebool.wrap(Impl.xor(ebool.unwrap(a), ebool.unwrap(b)));\n    }\n\n    function not(ebool a) internal returns (ebool) {\n        return ebool.wrap(Impl.not(ebool.unwrap(a)));\n    }\n\n    // Cast an encrypted integer from euint4 to euint16.\n    function asEuint16(euint4 value) internal returns (euint16) {\n        return euint16.wrap(Impl.cast(euint4.unwrap(value), Common.euint16_t));\n    }\n\n    // Cast an encrypted integer from euint8 to euint16.\n    function asEuint16(euint8 value) internal returns (euint16) {\n        return euint16.wrap(Impl.cast(euint8.unwrap(value), Common.euint16_t));\n    }\n\n    // Cast an encrypted integer from euint32 to euint16.\n    function asEuint16(euint32 value) internal returns (euint16) {\n        return euint16.wrap(Impl.cast(euint32.unwrap(value), Common.euint16_t));\n    }\n\n    // Cast an encrypted integer from euint64 to euint16.\n    function asEuint16(euint64 value) internal returns (euint16) {\n        return euint16.wrap(Impl.cast(euint64.unwrap(value), Common.euint16_t));\n    }\n\n    // Cast an encrypted integer from euint16 to ebool.\n    function asEbool(euint16 value) internal returns (ebool) {\n        return ne(value, 0);\n    }\n\n    // Converts an 'ebool' to an 'euint16'.\n    function asEuint16(ebool b) internal returns (euint16) {\n        return euint16.wrap(Impl.cast(ebool.unwrap(b), Common.euint16_t));\n    }\n\n    // Cast an encrypted integer from euint4 to euint32.\n    function asEuint32(euint4 value) internal returns (euint32) {\n        return euint32.wrap(Impl.cast(euint4.unwrap(value), Common.euint32_t));\n    }\n\n    // Cast an encrypted integer from euint8 to euint32.\n    function asEuint32(euint8 value) internal returns (euint32) {\n        return euint32.wrap(Impl.cast(euint8.unwrap(value), Common.euint32_t));\n    }\n\n    // Cast an encrypted integer from euint16 to euint32.\n    function asEuint32(euint16 value) internal returns (euint32) {\n        return euint32.wrap(Impl.cast(euint16.unwrap(value), Common.euint32_t));\n    }\n\n    // Cast an encrypted integer from euint64 to euint32.\n    function asEuint32(euint64 value) internal returns (euint32) {\n        return euint32.wrap(Impl.cast(euint64.unwrap(value), Common.euint32_t));\n    }\n\n    // Cast an encrypted integer from euint32 to ebool.\n    function asEbool(euint32 value) internal returns (ebool) {\n        return ne(value, 0);\n    }\n\n    // Converts an 'ebool' to an 'euint32'.\n    function asEuint32(ebool b) internal returns (euint32) {\n        return euint32.wrap(Impl.cast(ebool.unwrap(b), Common.euint32_t));\n    }\n\n    // Cast an encrypted integer from euint4 to euint64.\n    function asEuint64(euint4 value) internal returns (euint64) {\n        return euint64.wrap(Impl.cast(euint4.unwrap(value), Common.euint64_t));\n    }\n\n    // Cast an encrypted integer from euint8 to euint64.\n    function asEuint64(euint8 value) internal returns (euint64) {\n        return euint64.wrap(Impl.cast(euint8.unwrap(value), Common.euint64_t));\n    }\n\n    // Cast an encrypted integer from euint16 to euint64.\n    function asEuint64(euint16 value) internal returns (euint64) {\n        return euint64.wrap(Impl.cast(euint16.unwrap(value), Common.euint64_t));\n    }\n\n    // Cast an encrypted integer from euint32 to euint64.\n    function asEuint64(euint32 value) internal returns (euint64) {\n        return euint64.wrap(Impl.cast(euint32.unwrap(value), Common.euint64_t));\n    }\n\n    // Cast an encrypted integer from euint64 to ebool.\n    function asEbool(euint64 value) internal returns (ebool) {\n        return ne(value, 0);\n    }\n\n    // Converts an 'ebool' to an 'euint64'.\n    function asEuint64(ebool b) internal returns (euint64) {\n        return euint64.wrap(Impl.cast(ebool.unwrap(b), Common.euint64_t));\n    }\n\n    function neg(euint4 value) internal returns (euint4) {\n        return euint4.wrap(Impl.neg(euint4.unwrap(value)));\n    }\n\n    function not(euint4 value) internal returns (euint4) {\n        return euint4.wrap(Impl.not(euint4.unwrap(value)));\n    }\n\n    function neg(euint8 value) internal returns (euint8) {\n        return euint8.wrap(Impl.neg(euint8.unwrap(value)));\n    }\n\n    function not(euint8 value) internal returns (euint8) {\n        return euint8.wrap(Impl.not(euint8.unwrap(value)));\n    }\n\n    function neg(euint16 value) internal returns (euint16) {\n        return euint16.wrap(Impl.neg(euint16.unwrap(value)));\n    }\n\n    function not(euint16 value) internal returns (euint16) {\n        return euint16.wrap(Impl.not(euint16.unwrap(value)));\n    }\n\n    function neg(euint32 value) internal returns (euint32) {\n        return euint32.wrap(Impl.neg(euint32.unwrap(value)));\n    }\n\n    function not(euint32 value) internal returns (euint32) {\n        return euint32.wrap(Impl.not(euint32.unwrap(value)));\n    }\n\n    function neg(euint64 value) internal returns (euint64) {\n        return euint64.wrap(Impl.neg(euint64.unwrap(value)));\n    }\n\n    function not(euint64 value) internal returns (euint64) {\n        return euint64.wrap(Impl.not(euint64.unwrap(value)));\n    }\n\n    // Convert an inputHandle with corresponding inputProof to an encrypted euint4 integer.\n    function asEuint4(einput inputHandle, bytes memory inputProof) internal returns (euint4) {\n        return euint4.wrap(Impl.verify(einput.unwrap(inputHandle), inputProof, Common.euint4_t));\n    }\n\n    // Convert a plaintext value to an encrypted euint4 integer.\n    function asEuint4(uint256 value) internal returns (euint4) {\n        return euint4.wrap(Impl.trivialEncrypt(value, Common.euint4_t));\n    }\n\n    // Convert an inputHandle with corresponding inputProof to an encrypted euint8 integer.\n    function asEuint8(einput inputHandle, bytes memory inputProof) internal returns (euint8) {\n        return euint8.wrap(Impl.verify(einput.unwrap(inputHandle), inputProof, Common.euint8_t));\n    }\n\n    // Convert a plaintext value to an encrypted euint8 integer.\n    function asEuint8(uint256 value) internal returns (euint8) {\n        return euint8.wrap(Impl.trivialEncrypt(value, Common.euint8_t));\n    }\n\n    // Convert an inputHandle with corresponding inputProof to an encrypted euint16 integer.\n    function asEuint16(einput inputHandle, bytes memory inputProof) internal returns (euint16) {\n        return euint16.wrap(Impl.verify(einput.unwrap(inputHandle), inputProof, Common.euint16_t));\n    }\n\n    // Convert a plaintext value to an encrypted euint16 integer.\n    function asEuint16(uint256 value) internal returns (euint16) {\n        return euint16.wrap(Impl.trivialEncrypt(value, Common.euint16_t));\n    }\n\n    // Convert an inputHandle with corresponding inputProof to an encrypted euint32 integer.\n    function asEuint32(einput inputHandle, bytes memory inputProof) internal returns (euint32) {\n        return euint32.wrap(Impl.verify(einput.unwrap(inputHandle), inputProof, Common.euint32_t));\n    }\n\n    // Convert a plaintext value to an encrypted euint32 integer.\n    function asEuint32(uint256 value) internal returns (euint32) {\n        return euint32.wrap(Impl.trivialEncrypt(value, Common.euint32_t));\n    }\n\n    // Convert an inputHandle with corresponding inputProof to an encrypted euint64 integer.\n    function asEuint64(einput inputHandle, bytes memory inputProof) internal returns (euint64) {\n        return euint64.wrap(Impl.verify(einput.unwrap(inputHandle), inputProof, Common.euint64_t));\n    }\n\n    // Convert a plaintext value to an encrypted euint64 integer.\n    function asEuint64(uint256 value) internal returns (euint64) {\n        return euint64.wrap(Impl.trivialEncrypt(value, Common.euint64_t));\n    }\n\n    // Generates a random encrypted 8-bit unsigned integer.\n    // Important: The random integer is generated in the plain! An FHE-based version is coming soon.\n    function randEuint8() internal returns (euint8) {\n        return euint8.wrap(Impl.rand(Common.euint8_t));\n    }\n\n    // Generates a random encrypted 8-bit unsigned integer in the [0, upperBound) range.\n    // The upperBound must be a power of 2.\n    // Important: The random integer is generated in the plain! An FHE-based version is coming soon.\n    function randEuint8(uint8 upperBound) internal returns (euint8) {\n        return euint8.wrap(Impl.randBounded(upperBound, Common.euint8_t));\n    }\n\n    // Generates a random encrypted 16-bit unsigned integer.\n    // Important: The random integer is generated in the plain! An FHE-based version is coming soon.\n    function randEuint16() internal returns (euint16) {\n        return euint16.wrap(Impl.rand(Common.euint16_t));\n    }\n\n    // Generates a random encrypted 16-bit unsigned integer in the [0, upperBound) range.\n    // The upperBound must be a power of 2.\n    // Important: The random integer is generated in the plain! An FHE-based version is coming soon.\n    function randEuint16(uint16 upperBound) internal returns (euint16) {\n        return euint16.wrap(Impl.randBounded(upperBound, Common.euint16_t));\n    }\n\n    // Generates a random encrypted 32-bit unsigned integer.\n    // Important: The random integer is generated in the plain! An FHE-based version is coming soon.\n    function randEuint32() internal returns (euint32) {\n        return euint32.wrap(Impl.rand(Common.euint32_t));\n    }\n\n    // Generates a random encrypted 32-bit unsigned integer in the [0, upperBound) range.\n    // The upperBound must be a power of 2.\n    // Important: The random integer is generated in the plain! An FHE-based version is coming soon.\n    function randEuint32(uint32 upperBound) internal returns (euint32) {\n        return euint32.wrap(Impl.randBounded(upperBound, Common.euint32_t));\n    }\n\n    // Generates a random encrypted 64-bit unsigned integer.\n    // Important: The random integer is generated in the plain! An FHE-based version is coming soon.\n    function randEuint64() internal returns (euint64) {\n        return euint64.wrap(Impl.rand(Common.euint64_t));\n    }\n\n    // Generates a random encrypted 64-bit unsigned integer in the [0, upperBound) range.\n    // The upperBound must be a power of 2.\n    // Important: The random integer is generated in the plain! An FHE-based version is coming soon.\n    function randEuint64(uint64 upperBound) internal returns (euint64) {\n        return euint64.wrap(Impl.randBounded(upperBound, Common.euint64_t));\n    }\n\n    // Convert an inputHandle with corresponding inputProof to an encrypted eaddress.\n    function asEaddress(einput inputHandle, bytes memory inputProof) internal returns (eaddress) {\n        return eaddress.wrap(Impl.verify(einput.unwrap(inputHandle), inputProof, Common.euint160_t));\n    }\n\n    // Convert a plaintext value to an encrypted asEaddress.\n    function asEaddress(address value) internal returns (eaddress) {\n        return eaddress.wrap(Impl.trivialEncrypt(uint160(value), Common.euint160_t));\n    }\n\n    // Convert the given inputHandle and inputProof to an encrypted ebytes256 value.\n    function asEbytes256(einput inputHandle, bytes memory inputProof) internal returns (ebytes256) {\n        return ebytes256.wrap(Impl.verify(einput.unwrap(inputHandle), inputProof, Common.ebytes256_t));\n    }\n\n    // Return true if the enrypted address is initialized and false otherwise.\n    function isInitialized(eaddress v) internal pure returns (bool) {\n        return eaddress.unwrap(v) != 0;\n    }\n\n    // Return true if the enrypted value is initialized and false otherwise.\n    function isInitialized(ebytes256 v) internal pure returns (bool) {\n        return ebytes256.unwrap(v) != 0;\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(eaddress a, eaddress b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEaddress(address(0));\n        }\n        if (!isInitialized(b)) {\n            b = asEaddress(address(0));\n        }\n        return ebool.wrap(Impl.eq(eaddress.unwrap(a), eaddress.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(eaddress a, eaddress b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEaddress(address(0));\n        }\n        if (!isInitialized(b)) {\n            b = asEaddress(address(0));\n        }\n        return ebool.wrap(Impl.ne(eaddress.unwrap(a), eaddress.unwrap(b), false));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(eaddress a, address b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEaddress(address(0));\n        }\n        uint256 bProc = uint256(uint160(b));\n        return ebool.wrap(Impl.eq(eaddress.unwrap(a), bProc, true));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(address b, eaddress a) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEaddress(address(0));\n        }\n        uint256 bProc = uint256(uint160(b));\n        return ebool.wrap(Impl.eq(eaddress.unwrap(a), bProc, true));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(eaddress a, address b) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEaddress(address(0));\n        }\n        uint256 bProc = uint256(uint160(b));\n        return ebool.wrap(Impl.ne(eaddress.unwrap(a), bProc, true));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(address b, eaddress a) internal returns (ebool) {\n        if (!isInitialized(a)) {\n            a = asEaddress(address(0));\n        }\n        uint256 bProc = uint256(uint160(b));\n        return ebool.wrap(Impl.ne(eaddress.unwrap(a), bProc, true));\n    }\n\n    // If 'control''s value is 'true', the result has the same value as 'a'.\n    // If 'control''s value is 'false', the result has the same value as 'b'.\n    function select(ebool control, eaddress a, eaddress b) internal returns (eaddress) {\n        return eaddress.wrap(Impl.select(ebool.unwrap(control), eaddress.unwrap(a), eaddress.unwrap(b)));\n    }\n\n    // Evaluate eq(a, b) and return the result.\n    function eq(ebytes256 a, ebytes256 b) internal returns (ebool) {\n        require(isInitialized(a), \"a is uninitialized\");\n        require(isInitialized(b), \"b is uninitialized\");\n        return ebool.wrap(Impl.eq(ebytes256.unwrap(a), ebytes256.unwrap(b), false));\n    }\n\n    // Evaluate ne(a, b) and return the result.\n    function ne(ebytes256 a, ebytes256 b) internal returns (ebool) {\n        require(isInitialized(a), \"a is uninitialized\");\n        require(isInitialized(b), \"b is uninitialized\");\n        return ebool.wrap(Impl.ne(ebytes256.unwrap(a), ebytes256.unwrap(b), false));\n    }\n\n    // cleans the transient storage of ACL containing all the allowedTransient accounts\n    // to be used for integration with Account Abstraction or when bundling UserOps calling the FHEVMCoprocessor\n    function cleanTransientStorage() internal {\n        return Impl.cleanTransientStorage();\n    }\n\n    function isAllowed(ebool value, address account) internal view returns (bool) {\n        return Impl.isAllowed(ebool.unwrap(value), account);\n    }\n    function isAllowed(euint4 value, address account) internal view returns (bool) {\n        return Impl.isAllowed(euint4.unwrap(value), account);\n    }\n    function isAllowed(euint8 value, address account) internal view returns (bool) {\n        return Impl.isAllowed(euint8.unwrap(value), account);\n    }\n    function isAllowed(euint16 value, address account) internal view returns (bool) {\n        return Impl.isAllowed(euint16.unwrap(value), account);\n    }\n    function isAllowed(euint32 value, address account) internal view returns (bool) {\n        return Impl.isAllowed(euint32.unwrap(value), account);\n    }\n    function isAllowed(euint64 value, address account) internal view returns (bool) {\n        return Impl.isAllowed(euint64.unwrap(value), account);\n    }\n    function isAllowed(eaddress value, address account) internal view returns (bool) {\n        return Impl.isAllowed(eaddress.unwrap(value), account);\n    }\n\n    function isAllowed(ebytes256 value, address account) internal view returns (bool) {\n        return Impl.isAllowed(ebytes256.unwrap(value), account);\n    }\n\n    function isSenderAllowed(ebool value) internal view returns (bool) {\n        return Impl.isAllowed(ebool.unwrap(value), msg.sender);\n    }\n\n    function isSenderAllowed(euint4 value) internal view returns (bool) {\n        return Impl.isAllowed(euint4.unwrap(value), msg.sender);\n    }\n\n    function isSenderAllowed(euint8 value) internal view returns (bool) {\n        return Impl.isAllowed(euint8.unwrap(value), msg.sender);\n    }\n\n    function isSenderAllowed(euint16 value) internal view returns (bool) {\n        return Impl.isAllowed(euint16.unwrap(value), msg.sender);\n    }\n\n    function isSenderAllowed(euint32 value) internal view returns (bool) {\n        return Impl.isAllowed(euint32.unwrap(value), msg.sender);\n    }\n\n    function isSenderAllowed(euint64 value) internal view returns (bool) {\n        return Impl.isAllowed(euint64.unwrap(value), msg.sender);\n    }\n\n    function isSenderAllowed(eaddress value) internal view returns (bool) {\n        return Impl.isAllowed(eaddress.unwrap(value), msg.sender);\n    }\n\n    function isSenderAllowed(ebytes256 value) internal view returns (bool) {\n        return Impl.isAllowed(ebytes256.unwrap(value), msg.sender);\n    }\n\n    function allow(ebool value, address account) internal {\n        Impl.allow(ebool.unwrap(value), account);\n    }\n\n    function allow(euint4 value, address account) internal {\n        Impl.allow(euint4.unwrap(value), account);\n    }\n\n    function allow(euint8 value, address account) internal {\n        Impl.allow(euint8.unwrap(value), account);\n    }\n\n    function allow(euint16 value, address account) internal {\n        Impl.allow(euint16.unwrap(value), account);\n    }\n\n    function allow(euint32 value, address account) internal {\n        Impl.allow(euint32.unwrap(value), account);\n    }\n\n    function allow(euint64 value, address account) internal {\n        Impl.allow(euint64.unwrap(value), account);\n    }\n\n    function allow(eaddress value, address account) internal {\n        Impl.allow(eaddress.unwrap(value), account);\n    }\n\n    function allow(ebytes256 value, address account) internal {\n        Impl.allow(ebytes256.unwrap(value), account);\n    }\n\n    function allowTransient(ebool value, address account) internal {\n        Impl.allowTransient(ebool.unwrap(value), account);\n    }\n\n    function allowTransient(euint4 value, address account) internal {\n        Impl.allowTransient(euint4.unwrap(value), account);\n    }\n\n    function allowTransient(euint8 value, address account) internal {\n        Impl.allowTransient(euint8.unwrap(value), account);\n    }\n\n    function allowTransient(euint16 value, address account) internal {\n        Impl.allowTransient(euint16.unwrap(value), account);\n    }\n\n    function allowTransient(euint32 value, address account) internal {\n        Impl.allowTransient(euint32.unwrap(value), account);\n    }\n\n    function allowTransient(euint64 value, address account) internal {\n        Impl.allowTransient(euint64.unwrap(value), account);\n    }\n\n    function allowTransient(eaddress value, address account) internal {\n        Impl.allowTransient(eaddress.unwrap(value), account);\n    }\n\n    function allowTransient(ebytes256 value, address account) internal {\n        Impl.allowTransient(ebytes256.unwrap(value), account);\n    }\n}\n"
      }
    ],
    "certified": false,
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_robinXAiAgent",
            "type": "address"
          },
          {
            "internalType": "contract IMailbox",
            "name": "_mailbox",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "pollId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "caller",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "nullifierHash",
            "type": "uint256"
          }
        ],
        "name": "AlreadyAttempted",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "pollId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "receiverNullifierHash",
            "type": "uint256"
          }
        ],
        "name": "AlreadyRewarded",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "origin",
            "type": "uint32"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "name": "InvalidCrosschainCaller",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "pollId",
            "type": "uint256"
          }
        ],
        "name": "InvalidPollId",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "NotMailbox",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "requiredOwner",
            "type": "address"
          }
        ],
        "name": "NotOwner",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "requiredRobinXAiAgent",
            "type": "address"
          }
        ],
        "name": "NotRobin",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "pollId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "name": "UnverifiedCaller",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "nullifierHash",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "receiver",
            "type": "address"
          }
        ],
        "name": "UnverifiedReceiverAddress",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "pollId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "metadata",
            "type": "string"
          }
        ],
        "name": "DailyQuizStarted",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "pollId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "nullifierHash",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "encryptedResponse",
            "type": "string"
          }
        ],
        "name": "ResponseSubmitted",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "nullifierHash",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "receiver",
            "type": "address"
          }
        ],
        "name": "RewardReceiverAddressSet",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "pollId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "receiverNullifierHash",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "score",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "RewardsMinted",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "nullifierHash",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "VerifiedNullifier",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "SEPOLIA_DOMAIN_ID",
        "outputs": [
          {
            "internalType": "uint32",
            "name": "",
            "type": "uint32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_address",
            "type": "address"
          }
        ],
        "name": "addressToBytes32",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "_bytes32",
            "type": "bytes32"
          }
        ],
        "name": "bytes32ToAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_metadata",
            "type": "string"
          }
        ],
        "name": "createPoll",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "_origin",
            "type": "uint32"
          },
          {
            "internalType": "bytes32",
            "name": "_sender",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "handle",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "mailbox",
        "outputs": [
          {
            "internalType": "contract IMailbox",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "pollId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "receiverNullifierHash",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "score",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "mintRewards",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "pollCount",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "pollResponses",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "polls",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "rewardReceivers",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "rewards",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "robinX",
        "outputs": [
          {
            "internalType": "contract RobinX",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "robinXAiAgent",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "robinXWorldIdVerifier",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_newOwner",
            "type": "address"
          }
        ],
        "name": "setOwner",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_receiver",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_nullifierHash",
            "type": "uint256"
          }
        ],
        "name": "setRewardReceiverAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_robinXAiAgent",
            "type": "address"
          }
        ],
        "name": "setRobin",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_verifier",
            "type": "address"
          }
        ],
        "name": "setRobinXWorldIdVerifier",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "pollId",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "encryptedResponse",
            "type": "string"
          }
        ],
        "name": "submitResponse",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "verifiedNullifiers",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "is_changed_bytecode": false,
    "is_partially_verified": false,
    "package_name": null,
    "constructor_args": "0000000000000000000000000429a2da7884ca14e53142988d5845952fe4df6a000000000000000000000000cfa62ac3cc7e9eba17fab9bc92df6ac648a18338"
  },
  "https://opencampus-codex.blockscout.com/api/v2/addresses/0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428/transactions?filter=to": {
    "items": [
      {
        "priority_fee": "0",
        "tx_burnt_fee": "49999110000000",
        "raw_input": "0x",
        "result": "success",
        "hash": "0x17daa6bbff2bbf85a273c8f58922c4ce069e294b8bdf29c79afc03fda62aa805",
        "max_fee_per_gas": "10000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 5373257,
        "position": 1,
        "max_priority_fee_per_gas": "10000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "12000000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0xD03B36A2655fEF505bff5890bA4611F771Fb002C",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "4999911",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": null,
        "fee": {
          "type": "actual",
          "value": "49999110000000"
        },
        "actions": [],
        "gas_limit": "6748736",
        "gas_price": "10000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-12T01:50:11.000000Z",
        "nonce": 63,
        "transaction_types": [
          "coin_transfer"
        ],
        "exchange_rate": null,
        "block_number": 21049100,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "0",
        "tx_burnt_fee": "49999110000000",
        "raw_input": "0x",
        "result": "success",
        "hash": "0x0ba7f2036edb5fc11a144052ce8b4bbfe21c9c90d9aa6956ba26596746c32b96",
        "max_fee_per_gas": "10000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 5517251,
        "position": 3,
        "max_priority_fee_per_gas": "10000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "62000000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0xD03B36A2655fEF505bff5890bA4611F771Fb002C",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "4999911",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": null,
        "fee": {
          "type": "actual",
          "value": "49999110000000"
        },
        "actions": [],
        "gas_limit": "6748736",
        "gas_price": "10000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "10000000",
        "timestamp": "2024-12-11T14:35:02.000000Z",
        "nonce": 22,
        "transaction_types": [
          "coin_transfer"
        ],
        "exchange_rate": null,
        "block_number": 20905106,
        "has_error_in_internal_transactions": null
      },
      {
        "priority_fee": "0",
        "tx_burnt_fee": "54357900000000",
        "raw_input": "0x",
        "result": "success",
        "hash": "0xd31b00685c5bdaa2efbd9b45339510c494469500bce4a1d9e6bef6ebef37d761",
        "max_fee_per_gas": "100000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 13799673,
        "position": 3,
        "max_priority_fee_per_gas": "100000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "8888000000000000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0xBe46A6c57aB6d9272b5674C47fe587Dd3B5B54Db",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "543579",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": null,
        "fee": {
          "type": "actual",
          "value": "54357900000000"
        },
        "actions": [],
        "gas_limit": "722632",
        "gas_price": "100000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-11-13T08:01:46.000000Z",
        "nonce": 43,
        "transaction_types": [
          "coin_transfer"
        ],
        "exchange_rate": null,
        "block_number": 12622684,
        "has_error_in_internal_transactions": false
      },
      {
        "priority_fee": "1095388000000000",
        "tx_burnt_fee": "54769400000000",
        "raw_input": "0x",
        "result": "success",
        "hash": "0xeb97a65831ecf4c105e47ccd4c44276378d3f4aef05dd0c591815eee4be18709",
        "max_fee_per_gas": "100000000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 26359168,
        "position": 1,
        "max_priority_fee_per_gas": "2000000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "504000000000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0xa482AE7d753b33cB06Fd6872443E902cB6BEe592",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "547694",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": null,
        "fee": {
          "type": "actual",
          "value": "54769400000000"
        },
        "actions": [],
        "gas_limit": "713507",
        "gas_price": "100000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-09-18T11:10:39.000000Z",
        "nonce": 955,
        "transaction_types": [
          "coin_transfer"
        ],
        "exchange_rate": null,
        "block_number": 63189,
        "has_error_in_internal_transactions": false
      }
    ],
    "next_page_params": null
  },
  "https://opencampus-codex.blockscout.com/api/v2/addresses/0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428/transactions?filter=from": {
    "items": [
      {
        "priority_fee": "0",
        "tx_burnt_fee": "53946500000000",
        "raw_input": "0x",
        "result": "success",
        "hash": "0x8c026fcb849919d52866c6a92b745f373971a4fbce60fb924da6d35663a30e61",
        "max_fee_per_gas": "100000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 12911061,
        "position": 4,
        "max_priority_fee_per_gas": "100000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "600000000000000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "539465",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xC795eF0e37929f2f4aCa42C3FB2a21D075795179",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": null,
        "fee": {
          "type": "actual",
          "value": "53946500000000"
        },
        "actions": [],
        "gas_limit": "718070",
        "gas_price": "100000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-11-16T07:39:03.000000Z",
        "nonce": 11,
        "transaction_types": [
          "coin_transfer"
        ],
        "exchange_rate": null,
        "block_number": 13511300,
        "has_error_in_internal_transactions": false
      },
      {
        "priority_fee": "0",
        "tx_burnt_fee": "163922100000000",
        "raw_input": "0xc0e65ac0000000000000000000000000000000005f9e1d9b98b64068a36284f9b1e365b800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024b231dff8286c4ec0000000000000000000000000000000000000000000000024b231dff8286c4ec000000000000000000000000000000004ccd82c6e8954beb9db9bc534af55f3200000000000000000000000000000000000000000000000000000fbfa2d7577800000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000041a4ffb579fa5df5d1fd9a5678e22ccec73176b279919dc25b7465ae417a27ed072bc25fcd5be1b806d7333a9aa9b2fe83678932baf35778873130caaec7cc205c1c00000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x0fb437f16e725550384eb54fb3f1bc72cfa97af38b6dbbd1dfea75f81c888de6",
        "max_fee_per_gas": "100000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 13478385,
        "position": 2,
        "max_priority_fee_per_gas": "100000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "42307692307692307692",
        "from": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "1639221",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x3212257cAc8cf8eC690e232868f90681F2CDf7a3",
          "implementations": [
            {
              "address": "0x249535a7593FCB5756CF9A739b73039E94243919",
              "name": "Payment"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "TransparentUpgradeableProxy",
          "private_tags": [],
          "proxy_type": "eip1967",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "deposit",
        "fee": {
          "type": "actual",
          "value": "163922100000000"
        },
        "actions": [],
        "gas_limit": "1972725",
        "gas_price": "100000000",
        "decoded_input": {
          "method_call": "deposit(bytes32 _to, address _token, uint256 _amount, uint256 _frozen, bytes32 _sn, uint256 _expired, bytes _signature)",
          "method_id": "c0e65ac0",
          "parameters": [
            {
              "name": "_to",
              "type": "bytes32",
              "value": "0x000000000000000000000000000000005f9e1d9b98b64068a36284f9b1e365b8"
            },
            {
              "name": "_token",
              "type": "address",
              "value": "0x0000000000000000000000000000000000000000"
            },
            {
              "name": "_amount",
              "type": "uint256",
              "value": "42307692307692307692"
            },
            {
              "name": "_frozen",
              "type": "uint256",
              "value": "42307692307692307692"
            },
            {
              "name": "_sn",
              "type": "bytes32",
              "value": "0x000000000000000000000000000000004ccd82c6e8954beb9db9bc534af55f32"
            },
            {
              "name": "_expired",
              "type": "uint256",
              "value": "17315745191800"
            },
            {
              "name": "_signature",
              "type": "bytes",
              "value": "0xa4ffb579fa5df5d1fd9a5678e22ccec73176b279919dc25b7465ae417a27ed072bc25fcd5be1b806d7333a9aa9b2fe83678932baf35778873130caaec7cc205c1c"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-11-14T08:55:26.000000Z",
        "nonce": 10,
        "transaction_types": [
          "coin_transfer",
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 12943976,
        "has_error_in_internal_transactions": false
      },
      {
        "priority_fee": "0",
        "tx_burnt_fee": "166040700000000",
        "raw_input": "0xc0e65ac0000000000000000000000000000000005f9e1d9b98b64068a36284f9b1e365b80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400f2243244a439f000000000000000000000000000000000000000000000002400f2243244a439f000000000000000000000000000000002c46e1b4703a4a339e308926d273ab8c00000000000000000000000000000000000000000000000000000fbfa168371800000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000416fde998838dc7b8bcf893d6c614e0ccfe459df9358d8be71caa15da29aba097132eb16819955b6e07c0bcbec7b655c0295f40100284fe81909cbb099a41bd80a1b00000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0xe5a4fb15d04dc2f22e85737aa6d64167aa6067c902c256a06026293a9ee24e45",
        "max_fee_per_gas": "100000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 13487684,
        "position": 7,
        "max_priority_fee_per_gas": "100000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "41509433962264150943",
        "from": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "1660407",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x3212257cAc8cf8eC690e232868f90681F2CDf7a3",
          "implementations": [
            {
              "address": "0x249535a7593FCB5756CF9A739b73039E94243919",
              "name": "Payment"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "TransparentUpgradeableProxy",
          "private_tags": [],
          "proxy_type": "eip1967",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "deposit",
        "fee": {
          "type": "actual",
          "value": "166040700000000"
        },
        "actions": [],
        "gas_limit": "1952994",
        "gas_price": "100000000",
        "decoded_input": {
          "method_call": "deposit(bytes32 _to, address _token, uint256 _amount, uint256 _frozen, bytes32 _sn, uint256 _expired, bytes _signature)",
          "method_id": "c0e65ac0",
          "parameters": [
            {
              "name": "_to",
              "type": "bytes32",
              "value": "0x000000000000000000000000000000005f9e1d9b98b64068a36284f9b1e365b8"
            },
            {
              "name": "_token",
              "type": "address",
              "value": "0x0000000000000000000000000000000000000000"
            },
            {
              "name": "_amount",
              "type": "uint256",
              "value": "41509433962264150943"
            },
            {
              "name": "_frozen",
              "type": "uint256",
              "value": "41509433962264150943"
            },
            {
              "name": "_sn",
              "type": "bytes32",
              "value": "0x000000000000000000000000000000002c46e1b4703a4a339e308926d273ab8c"
            },
            {
              "name": "_expired",
              "type": "uint256",
              "value": "17315721131800"
            },
            {
              "name": "_signature",
              "type": "bytes",
              "value": "0x6fde998838dc7b8bcf893d6c614e0ccfe459df9358d8be71caa15da29aba097132eb16819955b6e07c0bcbec7b655c0295f40100284fe81909cbb099a41bd80a1b"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-11-14T08:15:19.000000Z",
        "nonce": 9,
        "transaction_types": [
          "coin_transfer",
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 12934677,
        "has_error_in_internal_transactions": false
      },
      {
        "priority_fee": "0",
        "tx_burnt_fee": "53946500000000",
        "raw_input": "0x",
        "result": "success",
        "hash": "0xb9fd221e60abd8937590480f330e352a7c8d800d7aaaceaac24f774bdc130d86",
        "max_fee_per_gas": "100000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 13796714,
        "position": 3,
        "max_priority_fee_per_gas": "100000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "1000000000000000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "539465",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x2293F2Ca001D1D865274eD6cec408e12d9e4674A",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": null,
        "fee": {
          "type": "actual",
          "value": "53946500000000"
        },
        "actions": [],
        "gas_limit": "718070",
        "gas_price": "100000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-11-13T08:14:22.000000Z",
        "nonce": 8,
        "transaction_types": [
          "coin_transfer"
        ],
        "exchange_rate": null,
        "block_number": 12625647,
        "has_error_in_internal_transactions": false
      },
      {
        "priority_fee": "0",
        "tx_burnt_fee": "53946500000000",
        "raw_input": "0x",
        "result": "success",
        "hash": "0x5215811eb9da3d99d2f230eb9f353a6b864d5b8ddd7783e4f3a582cf6bdb3e5c",
        "max_fee_per_gas": "100000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 13798230,
        "position": 2,
        "max_priority_fee_per_gas": "100000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "2000000000000000000000",
        "from": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "539465",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xc6005F378f72cb7f331aBb7733B947BaFC00F28F",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": null,
        "fee": {
          "type": "actual",
          "value": "53946500000000"
        },
        "actions": [],
        "gas_limit": "718070",
        "gas_price": "100000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-11-13T08:07:53.000000Z",
        "nonce": 7,
        "transaction_types": [
          "coin_transfer"
        ],
        "exchange_rate": null,
        "block_number": 12624131,
        "has_error_in_internal_transactions": false
      },
      {
        "priority_fee": "0",
        "tx_burnt_fee": "176667000000000",
        "raw_input": "0xc0e65ac0000000000000000000000000000000005f9e1d9b98b64068a36284f9b1e365b8000000000000000000000000edfa3e28953ba25173baf11160d4ad435ec002b5000000000000000000000000000000000000000000000001158e460913d00000000000000000000000000000000000000000000000000001158e460913d0000000000000000000000000000000000000a23c9a3d861d423a95ee76e628613f6200000000000000000000000000000000000000000000000000000fba05a3e90800000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000041718f460e91b306f441a23b3379054336eedbf140c738bf998937c8471c859c080b1d547134923c58f39c6dd3a164ebca97549ffc79083469c3d14c42dee204bc1b00000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x7c025cab8bdd15bb95b90ef6fff5b70f18c6dfaac7fb5945a939d79aaa0401fd",
        "max_fee_per_gas": "100000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 22370562,
        "position": 1,
        "max_priority_fee_per_gas": "100000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "1766670",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x3212257cAc8cf8eC690e232868f90681F2CDf7a3",
          "implementations": [
            {
              "address": "0x249535a7593FCB5756CF9A739b73039E94243919",
              "name": "Payment"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "TransparentUpgradeableProxy",
          "private_tags": [],
          "proxy_type": "eip1967",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "deposit",
        "fee": {
          "type": "actual",
          "value": "176667000000000"
        },
        "actions": [],
        "gas_limit": "2093445",
        "gas_price": "100000000",
        "decoded_input": {
          "method_call": "deposit(bytes32 _to, address _token, uint256 _amount, uint256 _frozen, bytes32 _sn, uint256 _expired, bytes _signature)",
          "method_id": "c0e65ac0",
          "parameters": [
            {
              "name": "_to",
              "type": "bytes32",
              "value": "0x000000000000000000000000000000005f9e1d9b98b64068a36284f9b1e365b8"
            },
            {
              "name": "_token",
              "type": "address",
              "value": "0xeDFa3e28953bA25173baF11160D4aD435ec002b5"
            },
            {
              "name": "_amount",
              "type": "uint256",
              "value": "20000000000000000000"
            },
            {
              "name": "_frozen",
              "type": "uint256",
              "value": "20000000000000000000"
            },
            {
              "name": "_sn",
              "type": "bytes32",
              "value": "0x00000000000000000000000000000000a23c9a3d861d423a95ee76e628613f62"
            },
            {
              "name": "_expired",
              "type": "uint256",
              "value": "17291632961800"
            },
            {
              "name": "_signature",
              "type": "bytes",
              "value": "0x718f460e91b306f441a23b3379054336eedbf140c738bf998937c8471c859c080b1d547134923c58f39c6dd3a164ebca97549ffc79083469c3d14c42dee204bc1b"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-10-17T11:08:22.000000Z",
        "nonce": 6,
        "transaction_types": [
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 4051799,
        "has_error_in_internal_transactions": false
      },
      {
        "priority_fee": "0",
        "tx_burnt_fee": "53380900000000",
        "raw_input": "0x4e71d92d",
        "result": "success",
        "hash": "0x1376014f6492adee5fc32a87301d24a647733c51060cdbd3723bb9596eb528f0",
        "max_fee_per_gas": "100000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 24914177,
        "position": 1,
        "max_priority_fee_per_gas": "100000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "533809",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xeDFa3e28953bA25173baF11160D4aD435ec002b5",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ERC20Token",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "claim",
        "fee": {
          "type": "actual",
          "value": "53380900000000"
        },
        "actions": [],
        "gas_limit": "710010",
        "gas_price": "100000000",
        "decoded_input": {
          "method_call": "claim()",
          "method_id": "4e71d92d",
          "parameters": []
        },
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-10-09T04:33:21.000000Z",
        "nonce": 5,
        "transaction_types": [
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 1508184,
        "has_error_in_internal_transactions": false
      },
      {
        "priority_fee": "0",
        "tx_burnt_fee": "182017200000000",
        "raw_input": "0x167f8e3f000000000000000000000000000000005f9e1d9b98b64068a36284f9b1e365b800000000000000000000000059f3bfda995b9235e2a9f126eb2eea5e0b443428000000000000000000000000edfa3e28953ba25173baf11160d4ad435ec002b500000000000000000000000000000000000000000000001b1ae4d6e2ef500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000537305476941405bb5961acc7990fb1000000000000000000000000000000000000000000000000000000fb85b7101d8000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000418e346f269020f2f354061604683197d5dfaaed57b62306bc6dd296f247bf5813125afe6a33fc7f9ef24a78ee6666e560b15b58b915b94373da6fd281b853dcf21b00000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x09fdfdbfedc436010e84d78f0603dcb1e5c4a2e9e6d94167ae2598e3cd2417c0",
        "max_fee_per_gas": "100000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 24914544,
        "position": 1,
        "max_priority_fee_per_gas": "100000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "1820172",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x3212257cAc8cf8eC690e232868f90681F2CDf7a3",
          "implementations": [
            {
              "address": "0x249535a7593FCB5756CF9A739b73039E94243919",
              "name": "Payment"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "TransparentUpgradeableProxy",
          "private_tags": [],
          "proxy_type": "eip1967",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "0x167f8e3f",
        "fee": {
          "type": "actual",
          "value": "182017200000000"
        },
        "actions": [],
        "gas_limit": "2170265",
        "gas_price": "100000000",
        "decoded_input": null,
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-10-09T04:31:01.000000Z",
        "nonce": 4,
        "transaction_types": [
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 1507817,
        "has_error_in_internal_transactions": false
      },
      {
        "priority_fee": "0",
        "tx_burnt_fee": "172890500000000",
        "raw_input": "0xc0e65ac0000000000000000000000000000000005f9e1d9b98b64068a36284f9b1e365b8000000000000000000000000edfa3e28953ba25173baf11160d4ad435ec002b500000000000000000000000000000000000000000000003635c9adc5dea00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017a26bce7084f179f59a05911d2accc0000000000000000000000000000000000000000000000000000000066eabe4200000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000041caaaa0848e6687c3d8bfc14f2b971a3a45f56084f364c1e13bf40e220d149b9e4f9b29468b15f19b08aa5e63f28e33516354237ec539cd2b2a8420518afa49e11c00000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0xf2e10e7b1eced5278e5ac8716b96d0c56abfe4152fb82755a50b61e15796a532",
        "max_fee_per_gas": "100000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 26359161,
        "position": 1,
        "max_priority_fee_per_gas": "100000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "1728905",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x3212257cAc8cf8eC690e232868f90681F2CDf7a3",
          "implementations": [
            {
              "address": "0x249535a7593FCB5756CF9A739b73039E94243919",
              "name": "Payment"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "TransparentUpgradeableProxy",
          "private_tags": [],
          "proxy_type": "eip1967",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "deposit",
        "fee": {
          "type": "actual",
          "value": "172890500000000"
        },
        "actions": [],
        "gas_limit": "2066785",
        "gas_price": "100000000",
        "decoded_input": {
          "method_call": "deposit(bytes32 _to, address _token, uint256 _amount, uint256 _frozen, bytes32 _sn, uint256 _expired, bytes _signature)",
          "method_id": "c0e65ac0",
          "parameters": [
            {
              "name": "_to",
              "type": "bytes32",
              "value": "0x000000000000000000000000000000005f9e1d9b98b64068a36284f9b1e365b8"
            },
            {
              "name": "_token",
              "type": "address",
              "value": "0xeDFa3e28953bA25173baF11160D4aD435ec002b5"
            },
            {
              "name": "_amount",
              "type": "uint256",
              "value": "1000000000000000000000"
            },
            {
              "name": "_frozen",
              "type": "uint256",
              "value": "0"
            },
            {
              "name": "_sn",
              "type": "bytes32",
              "value": "0x00000000000000000000000000000000017a26bce7084f179f59a05911d2accc"
            },
            {
              "name": "_expired",
              "type": "uint256",
              "value": "1726660162"
            },
            {
              "name": "_signature",
              "type": "bytes",
              "value": "0xcaaaa0848e6687c3d8bfc14f2b971a3a45f56084f364c1e13bf40e220d149b9e4f9b29468b15f19b08aa5e63f28e33516354237ec539cd2b2a8420518afa49e11c"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-09-18T11:19:33.000000Z",
        "nonce": 3,
        "transaction_types": [
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 63200,
        "has_error_in_internal_transactions": false
      },
      {
        "priority_fee": "0",
        "tx_burnt_fee": "172958900000000",
        "raw_input": "0xc0e65ac0000000000000000000000000000000005f9e1d9b98b64068a36284f9b1e365b8000000000000000000000000edfa3e28953ba25173baf11160d4ad435ec002b50000000000000000000000000000000000000000000000004563918244f400000000000000000000000000000000000000000000000000004563918244f4000000000000000000000000000000000000085e6f5c158b418e95828750af2362660000000000000000000000000000000000000000000000000000000066eabdf200000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000417c2a41cb8b4d9a5d1c13d482d77f2d8f60a228b9cf021c095345107a86320370093ef3c3a25d413c1c17c061792ab7a080e3759e23a33787847274aecca0c4ed1b00000000000000000000000000000000000000000000000000000000000000",
        "result": "success",
        "hash": "0x9697fb45c3dbfb4c3a88db5010fb10e7894a33c69fe315a3bbe5ec1d9ada17e9",
        "max_fee_per_gas": "100000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 26359162,
        "position": 1,
        "max_priority_fee_per_gas": "100000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "1729589",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0x3212257cAc8cf8eC690e232868f90681F2CDf7a3",
          "implementations": [
            {
              "address": "0x249535a7593FCB5756CF9A739b73039E94243919",
              "name": "Payment"
            }
          ],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "TransparentUpgradeableProxy",
          "private_tags": [],
          "proxy_type": "eip1967",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "deposit",
        "fee": {
          "type": "actual",
          "value": "172958900000000"
        },
        "actions": [],
        "gas_limit": "2097994",
        "gas_price": "100000000",
        "decoded_input": {
          "method_call": "deposit(bytes32 _to, address _token, uint256 _amount, uint256 _frozen, bytes32 _sn, uint256 _expired, bytes _signature)",
          "method_id": "c0e65ac0",
          "parameters": [
            {
              "name": "_to",
              "type": "bytes32",
              "value": "0x000000000000000000000000000000005f9e1d9b98b64068a36284f9b1e365b8"
            },
            {
              "name": "_token",
              "type": "address",
              "value": "0xeDFa3e28953bA25173baF11160D4aD435ec002b5"
            },
            {
              "name": "_amount",
              "type": "uint256",
              "value": "5000000000000000000"
            },
            {
              "name": "_frozen",
              "type": "uint256",
              "value": "5000000000000000000"
            },
            {
              "name": "_sn",
              "type": "bytes32",
              "value": "0x00000000000000000000000000000000085e6f5c158b418e95828750af236266"
            },
            {
              "name": "_expired",
              "type": "uint256",
              "value": "1726660082"
            },
            {
              "name": "_signature",
              "type": "bytes",
              "value": "0x7c2a41cb8b4d9a5d1c13d482d77f2d8f60a228b9cf021c095345107a86320370093ef3c3a25d413c1c17c061792ab7a080e3759e23a33787847274aecca0c4ed1b"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-09-18T11:18:08.000000Z",
        "nonce": 2,
        "transaction_types": [
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 63199,
        "has_error_in_internal_transactions": false
      },
      {
        "priority_fee": "0",
        "tx_burnt_fee": "81160900000000",
        "raw_input": "0x095ea7b30000000000000000000000003212257cac8cf8ec690e232868f90681f2cdf7a300000000000000000000000000000000000000000000021e19e0c9bab2400000",
        "result": "success",
        "hash": "0x86bcd0265ad332a7f49bf077cdcd6a9e65dcd6f8ab025a60f4c309496692c436",
        "max_fee_per_gas": "100000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 26359163,
        "position": 1,
        "max_priority_fee_per_gas": "100000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "811609",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xeDFa3e28953bA25173baF11160D4aD435ec002b5",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ERC20Token",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "approve",
        "fee": {
          "type": "actual",
          "value": "81160900000000"
        },
        "actions": [],
        "gas_limit": "1019825",
        "gas_price": "100000000",
        "decoded_input": {
          "method_call": "approve(address spender, uint256 amount)",
          "method_id": "095ea7b3",
          "parameters": [
            {
              "name": "spender",
              "type": "address",
              "value": "0x3212257cAc8cf8eC690e232868f90681F2CDf7a3"
            },
            {
              "name": "amount",
              "type": "uint256",
              "value": "10000000000000000000000"
            }
          ]
        },
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-09-18T11:17:45.000000Z",
        "nonce": 1,
        "transaction_types": [
          "contract_call"
        ],
        "exchange_rate": null,
        "block_number": 63198,
        "has_error_in_internal_transactions": false
      },
      {
        "priority_fee": "0",
        "tx_burnt_fee": "55090900000000",
        "raw_input": "0x4e71d92d",
        "result": "success",
        "hash": "0x19ba293c3c4f47f5a9d658a6257a39a2bf802b49c59a11e3b96dad8e2ee56427",
        "max_fee_per_gas": "100000000",
        "revert_reason": null,
        "confirmation_duration": [
          0,
          149.0
        ],
        "type": 2,
        "token_transfers_overflow": null,
        "confirmations": 26359167,
        "position": 1,
        "max_priority_fee_per_gas": "100000000",
        "transaction_tag": null,
        "created_contract": null,
        "value": "0",
        "from": {
          "ens_domain_name": null,
          "hash": "0x59F3BfDA995b9235e2a9F126eB2eeA5E0B443428",
          "implementations": [],
          "is_contract": false,
          "is_scam": false,
          "is_verified": false,
          "metadata": null,
          "name": null,
          "private_tags": [],
          "proxy_type": null,
          "public_tags": [],
          "watchlist_names": []
        },
        "gas_used": "550909",
        "status": "ok",
        "to": {
          "ens_domain_name": null,
          "hash": "0xeDFa3e28953bA25173baF11160D4aD435ec002b5",
          "implementations": [],
          "is_contract": true,
          "is_scam": false,
          "is_verified": true,
          "metadata": null,
          "name": "ERC20Token",
          "private_tags": [],
          "proxy_type": "unknown",
          "public_tags": [],
          "watchlist_names": []
        },
        "authorization_list": [],
        "method": "claim",
        "fee": {
          "type": "actual",
          "value": "55090900000000"
        },
        "actions": [],
        "gas_limit": "727245",
        "gas_price": "100000000",
        "decoded_input": {
          "method_call": "claim()",
          "method_id": "4e71d92d",
          "parameters": []
        },
        "token_transfers": null,
        "base_fee_per_gas": "100000000",
        "timestamp": "2024-09-18T11:13:37.000000Z",
        "nonce": 0,
        "transaction_types": [
          "contract_call",
          "token_transfer"
        ],
        "exchange_rate": null,
        "block_number": 63194,
        "has_error_in_internal_transactions": false
      }
    ],
    "next_page_params": null
  }
}